{
    "issues": [
        {
            "assignee": null,
            "content": "
The clean target in Tests/Makefile for changeset 32b0d101bf65 (and earlier) removes a tracked .usp file, Test/Phonon/Al-DFPT-NLCC/Al_EXT_PBESOL_OTF.usp, which was introduced in changeset 2bfda944c6bb (29 Nov 2016).


I do not have the necessary permissions to commit a fix, but I suggest that the filename should be changed so that it is no longer picked up by make clean.
",
            "content_updated_on": "2017-04-03 12:20:12+01",
            "created_on": "2017-01-10 12:32:00+00",
            "id": 1687,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Overzealous clean target in Tests/Makefile removed tracked .usp file",
            "updated_on": "2017-04-03 12:20:12+01"
        },
        {
            "assignee": null,
            "content": "
CASTEP has a wonderful ability to correct total energy for finite basis set. If I run SinglePoint calculations it is printed and can be used further. (We now deal with temperature dependence and would need thermal expansion to be accounted for properly). But if I use geometry optimization (without cell optimization) and ask for corrections


It is calculated on the first iteration but is not used anywhere – neither in the Total Energy reported on each BFGS iteration nor in BFGS Enthalpy.


Se attached zip file with i/o ...
",
            "content_updated_on": "2017-04-06 22:08:17+01",
            "created_on": "2017-01-10 10:21:46+00",
            "id": 1686,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "fix cell GO with request to FBSC does not print corrected Total Energy",
            "updated_on": "2017-04-06 22:08:17+01"
        },
        {
            "assignee": null,
            "content": null,
            "content_updated_on": "",
            "created_on": "",
            "id": ,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "",
            "updated_on": ""
        },
        {
            "assignee": null,
            "content": "
This is a minor bug which doesn't allow the user to see a list of the k-points in a spectral task. CASTEP dryrun doesn't contain the usual block which gives information about the k-points. This happens only for task: spectral.


To obtain the list of k-points one needs to use a different task for the dryrun (e.g. task: bandstructure in the .param file with the respective bs_kpoints_mp_grid in the .cell file).


Attached are example files. 
",
            "content_updated_on": "2017-11-07 00:21:36+00",
            "created_on": "2017-11-03 15:54:03+00",
            "id": 1793,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "CASTEP dryrun doesn't report spectral k-points",
            "updated_on": "2017-11-07 00:21:36+00"
        },
        {
            "assignee": null,
            "content": "
When you run the 'castep' command and the usage instructions come up? It says --dryrun &lt;seedanme&gt; rather than &lt;seedname&gt;, and has done since I started my PhD. Please correct this. It's been years, it haunts me. It's in Utility/io.F90, line 4092 as of 17.2. Please make it right, so I can finally rest.
",
            "content_updated_on": "2017-11-14 15:46:10+00",
            "created_on": "2017-11-13 16:23:01+00",
            "id": 1796,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Seedname has been spelt wrong in the dryrun guidance for 4 years",
            "updated_on": "2017-11-14 15:46:10+00"
        },
        {
            "assignee": null,
            "content": "
This functionality (based on VASP) is available in Materials Project https://materialsproject.org/wiki/index.php/Piezoelectricity_calculations and has been requested by a number of commercial customers
",
            "content_updated_on": "2017-07-27 15:09:24+01",
            "created_on": "2017-02-03 11:14:26+00",
            "id": 1689,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Desire to calculate piezoelectric stress and strain coefficients",
            "updated_on": "2017-07-27 15:09:24+01"
        },
        {
            "assignee": null,
            "content": "
In response to JISCMAIL query from Ary Ferreira

I'm having a problem with the TransitionStateSearch task. From the .castep file, I have noticed that the coordinates of the reactants and products are perfectly compatible with the ones set on the .cell file. However, despite the cartesian forces for the reactants be also compatible with the previous geometry optimization, for the product they are very huge. Recalling that I checked and the coordinates are optimized and are correct. Below the basic structure of my input files without the coordinates, which are many.

 

The problem appears to be that the second set of co-ordinates - for the product beaks the symmetry - which is determined using SYMMETRY_GENERATE for the baseline reactand set of co-ordinates only.

We should add a check that the further set of co-ordinates given by %BLOCK POSITIONS_ABS_PRODUCT and INTERMEDIATE also satisfy the same symmetry. As I have done a lot of work in symmetry, I tried looking at the code in cell_read to determine how that could be added. Unfortunately it seems that the incompetent buffoon from Accelrys who coded this did not put the PRODUCT co-ordinates read into CELL_READ at all but into CELL_OUTPUT!!!!!!! I gave up in disgust at that point!

 

 

 
",
            "content_updated_on": "2014-09-22 11:54:49.64351+01",
            "created_on": "2014-09-22 11:54:49+01",
            "id": 1130,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "No check whether %BLOCK POSITIONS_FRAC_PRODUCT breaks symmetry",
            "updated_on": "2014-09-22 11:54:49.64351+01"
        },
        {
            "assignee": null,
            "content": "
Running attached files in BIOVIA sequence (main run -&gt; continuation run) we are getting a crash:


Error in algor_invert_real - matrix is singular Current trace stack: algor_invert_real cell_supercell_reduce_kpoints_wrapped cell_supercell hirshfeld_calculate dftd_sedc_update_TS dftd_sedc_calculate_cell dftd_sedc_calculate_energy_cell electronic_minimisation phonon_force_constant_matrix phonon_calculate castep
",
            "content_updated_on": "2016-07-17 13:47:54+01",
            "created_on": "2016-06-27 09:30:53+01",
            "id": 1596,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "phonon supercell run fails with problems in sedc module",
            "updated_on": "2016-07-17 13:47:54+01"
        },
        {
            "assignee": null,
            "content": "
There is a need for a tool to check that a supercell is appropriate for a J-coupling calculation.  This could also be made part of a dryrun.
",
            "content_updated_on": "2015-03-24 11:38:10.521194+00",
            "created_on": "2015-03-24 11:38:10+00",
            "id": 1257,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "J-coupling tool for (super)cell check",
            "updated_on": "2015-03-24 11:38:10.521194+00"
        },
        {
            "assignee": null,
            "content": "
There is no way at the moment to instruct CASTEP to make an safe exit from a NMR calculation, so that one can restart later. Neither run_time nor num_dump_cycle work for Magres task.
The functionality is important for user using National facilities where time-limited queue system is used.
",
            "content_updated_on": "2017-04-03 11:59:12+01",
            "created_on": "2008-09-09 13:32:28+01",
            "id": 60,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "NMR calculation does not respect "run_time" keyword.",
            "updated_on": "2017-04-03 11:59:12+01"
        },
        {
            "assignee": null,
            "content": "Some tasks, notably phonon and efield response, bandstructure, optics and
others change the k-point set, call comms_reassign_strategy and re-initialise
the basis.

The normal procedure for a continuation run is that the the comms_parallel_strategy is called and basis is
initialized using the default SPE k-point set and model_continuation
rereads the .check file.  Immediately afterwards, if model%found_ground_state
is true the task is entered, the k-points are distributed,  comms_reassign_strategy is called and the basis is re-initialised.

A consequence of the current behaviour is that some perfectly good and useful parallel strategies for the task are forbidden because the initial SPE basis_initialize ends up with 0 plane-waves on some nodes and the run is aborted.

Can we think of some mechanism to avoid or postpone the initial basis_initialize so it is not called in this circumstance?

Comments please.
",
            "content_updated_on": "2008-09-02 14:10:29+01",
            "created_on": "2008-09-02 14:10:29+01",
            "id": 59,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Fix basis_initialize on continuation using task k-points and not SPE set",
            "updated_on": "2008-09-02 14:10:29+01"
        },
        {
            "assignee": null,
            "content": "
Dan Wilson wrote some code to allow rational fractions
as values for keywords in .cell.
Investigate and if possible integrate with codebase.
",
            "content_updated_on": "2017-11-20 11:03:31+00",
            "created_on": "2008-12-04 12:15:57+00",
            "id": 86,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Input parameters should allow rational fractions",
            "updated_on": "2017-11-20 11:03:31+00"
        },
        {
            "assignee": null,
            "content": "A public wave routine to allow higher level modules to selectively release memory associate with wavefunctions, slice and band (eg real_coeffs beta_phi etc)
  (compare with ion_release_memory)",
            "content_updated_on": "2009-02-14 17:46:49+00",
            "created_on": "2009-02-14 17:46:48+00",
            "id": 108,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "wave release memory",
            "updated_on": "2009-02-14 17:46:49+00"
        },
        {
            "assignee": null,
            "content": "There are requests for HSE03 and HSE06 functionals to be implemented in CASTEP",
            "content_updated_on": "2013-01-03 16:00:25+00",
            "created_on": "2010-04-09 15:49:47+01",
            "id": 256,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Implement HSE family of functionals",
            "updated_on": "2013-01-03 16:00:25+00"
        },
        {
            "assignee": null,
            "content": "Specifying ionic constraints is very tedious. I often want to constraint all of the heavy atoms, and relax the hydrogens; or allow just one or two atoms to move.

We should have a simple format to do this. Eg inside the ionic_constraints block

fix:all

fix:C:N

fix:C{1,2,4-8}

fix:all:unfix:H1

I think we do need unfix as well as fix. The only part I've missed is constraining a subset of Cartesian components, maybe.

fix:C1[x,y",
            "content_updated_on": "2010-07-01 17:18:19+01",
            "created_on": "2009-01-02 18:04:24+00",
            "id": 94,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "constraints",
            "updated_on": "2010-07-01 17:18:19+01"
        },
        {
            "assignee": null,
            "content": "We desperately need a user manual for CASTEP. 

Any suggestions of how to break this task into manageable parts that
volunteers can commit to.

 ",
            "content_updated_on": "2009-05-12 15:19:23+01",
            "created_on": "2008-04-17 08:47:46+01",
            "id": 17,
            "kind": "task"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "Manual needed",
            "updated_on": "2009-05-12 15:19:23+01"
        },
        {
            "assignee": null,
            "content": "
Customers keep requesting PAW instead of USPs... There is an irrational belief out there that PAW gives results that are closer to all-electron ones.
",
            "content_updated_on": "2014-05-22 10:24:23+01",
            "created_on": "2009-07-22 13:44:09+01",
            "id": 160,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "open",
            "title": "PAW implementation",
            "updated_on": "2014-05-22 10:24:23+01"
        },
        {
            "assignee": null,
            "content": "
The test attached is not very meaningful, so we can probably accept a new baseline - but I'd like to hear a confirmation from Keith first... Baseline and current result, as well as input files, are attached.
",
            "content_updated_on": "2016-08-31 15:45:01+01",
            "created_on": "2016-07-14 09:57:16+01",
            "id": 1605,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon results with FD and DFT-D have changed after codefest",
            "updated_on": "2016-08-31 15:45:01+01"
        },
        {
            "assignee": null,
            "content": "
An example can be found in the regression test Phonon/Si2-supercell,


Lattice parameters(A) Cell Angles a = 5.390929 alpha = 90.000000 b = 5.390929 beta = 90.000000 c = 5.390929 gamma = 90.000000 Current cell volume = 156.671801 A**3 density = 0.000000 AMU/A**3 = 0.000000 g/cm^3
",
            "content_updated_on": "2016-08-31 17:02:04+01",
            "created_on": "2016-07-14 09:36:59+01",
            "id": 1604,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Material density in .castep file reported as zero for supercell calculations",
            "updated_on": "2016-08-31 17:02:04+01"
        },
        {
            "assignee": null,
            "content": "
Run: Phonon calculation of Nb0.25Ta0.75FeSb on a 5x5x5 k-points grid with a q-point list block (equivalent to a 3x3x3 grid):


%BLOCK PHONON_KPOINT_LIST
-0.333333  -0.333333   0.000000   0.4444444444444
0.000000   0.000000  -0.333333    0.2222222222222
0.000000   0.000000   0.000000    0.0370370370370
0.333333  -0.333333   0.333333    0.2962962962962
%ENDBLOCK PHONON_KPOINT_LIST


Bug: After all perturbations are calculated successfully, castep pops an error :


INTERNAL ERROR detected: Failed to identify mapping of irreducible     
  phonon q-point list onto expanded Monkhorst-Pack grid.                 
  Please submit a bug report.    


Followed by a long list of the full set of 125 k-points.


The calculation remains unfinished.


 
",
            "content_updated_on": "2017-11-17 08:47:51+00",
            "created_on": "2017-11-14 12:28:11+00",
            "id": 1797,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Failed mapping of irreducible phonon q-point list onto expanded MP grid",
            "updated_on": "2017-11-17 08:47:51+00"
        },
        {
            "assignee": null,
            "content": "There are numerous requests along the lines of:
Is it possible to do the Bader Atoms in Molecules topological analysis using the wavefunctions from a CASTEP  calculation?

There was one from Peter Ryan [ryanp@TCD.IE",
            "content_updated_on": "2009-09-14 09:23:07+01",
            "created_on": "2009-09-14 09:23:06+01",
            "id": 186,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Add Bader AIM analysis",
            "updated_on": "2009-09-14 09:23:07+01"
        },
        {
            "assignee": null,
            "content": "
Looking at the comparisons between baseline and current results, the current version suddenly produces quite a different stress tensor at the initial geometry of the second run when compared to the baseline. This test checks that CASTEP allows to modify U value on continuation, it has to be run by copying CeO2-distorted.check into CeO2-distorted6.check
",
            "content_updated_on": "2016-09-10 12:07:53+01",
            "created_on": "2016-07-14 11:09:54+01",
            "id": 1606,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LDA+U geometry optimization, continuation with changed U: different stress tensor after codefest",
            "updated_on": "2016-09-10 12:07:53+01"
        },
        {
            "assignee": null,
            "content": "
Currently, one will receive the following error message when requesting NHL in CASTEP MD using NPT ensemble:


"Nose-Hoover-Langevin thermostat is not implemented for the NPT ensemble.
Please select a different ensemble (e.g., NVT) or a different thermostat"


Ben Leimkuhler has just produced a paper on NHL-NPT http://pubs.acs.org/doi/10.1021/acs.jctc.5b00648 (although in the classical MD context)
",
            "content_updated_on": "2017-07-27 15:10:04+01",
            "created_on": "2016-07-14 14:52:32+01",
            "id": 1608,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Implement NHL thermostat for NPT ensemble",
            "updated_on": "2017-07-27 15:10:04+01"
        },
        {
            "assignee": null,
            "content": "
User wrote: "I attached the results and the images of band structures which ghost bands are highlighted in red. The calculated SbO2 structure is not a stable polymorph, but still I believe there is something wrong with the OTFG string." 


Chris's comment:


I have done some work on this - I performed a high-throughput screen on the default potentials, and came up with the following with ghost-states:


Ir, Rf, Mn, W, Sb, Mo, Sn, In, Po, Bi, Al, B, Ni, Fe, Co, Zn


Some of them are rather high, so don't cause many problems. It is not completely obvious what to do about them though - I will work further on it."


"
",
            "content_updated_on": "2016-09-19 12:42:05+01",
            "created_on": "2016-07-14 11:14:32+01",
            "id": 1607,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Ghost bands appear in band structures of SnO2 and SbO2 calculated with new OTFG ultrasoft pseudopotentials (*_80.otfg)",
            "updated_on": "2016-09-19 12:42:05+01"
        },
        {
            "assignee": null,
            "content": "
The user "would like to see by taking spin into account in NMR calculation whether it causes peak broadening by paramagnetic materials." 
",
            "content_updated_on": "2018-01-02 10:52:38+00",
            "created_on": "2016-07-14 14:55:28+01",
            "id": 1609,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP should be able to deal with spin polarized system for NMR calculation",
            "updated_on": "2018-01-02 10:52:38+00"
        },
        {
            "assignee": null,
            "content": "
This is about it, really; we don't have a more specific request.
",
            "content_updated_on": "2017-12-20 11:54:36+00",
            "created_on": "2016-07-14 14:58:56+01",
            "id": 1610,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "open",
            "title": "Request for ESR spectrum calculation",
            "updated_on": "2017-12-20 11:54:36+00"
        },
        {
            "assignee": null,
            "content": "
I found a bug with a failure on continuation of a variable cell geometry optimization with cell constraints and LBFGS.  Any attempt to continue such a run results in a failure to read in the checkpoint file written by an initial optimization run with the error (on stderr)


 Error comms_gcopy_real: length less than 0


The attached testcase demonstrates the problem - simply run the two calculations in sequence.


The proximate cause of the failure is that the value saved in the checkpoint file for MDL%LBFGS_NUM_UPDATES is negative, which causes the above failure trap in comms_gcopy at line 2028 in model_continuation. (Oddly, the allocate statement above it succeeds!)


In my actual, large example (not attached) the value written to the checkpoint file was -31 after 30 iterations, suggesting that it was decremented by one every LBFGS iteration. I would expect the si example to have 9 following 8 lbfgs iterations, but I haven't checked.


Sure enough there is an unconditional:


       if(do_lbfgs) then
          mdl%lbfgs_num_updates= mdl%lbfgs_num_updates - 1
       end if


at geometry.f90:7035 in "geom_constrain_stress", and there appears to be no check on it going below zero.


I suspect there may be more of an issue with the implementation of LBFGS variable cell geometry with constraints, but the continuation failure is just a symptom.


 


 



 
",
            "content_updated_on": "2016-08-05 23:02:44+01",
            "created_on": "2016-05-19 17:26:13+01",
            "id": 1586,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LBFGS Geom opt with cell constraints fails and writes invalid checkpoint",
            "updated_on": "2016-08-05 23:02:44+01"
        },
        {
            "assignee": null,
            "content": "
Attached is an example based on user's report. spectral_xc_functional has no effect on the calculation, the SCF value is being used regardless. Note that parameters.f90 does print in the header that SHF-LDA will be used, but it's a lie. I thought at first that the combination of read/reread is to blame, since eventually spectral module does the following:


 


    current_params%xc_definition = current_params%spectral_xc_definition


 


According to the debugger at this point the definition is PBE; the sequence of read/reread is to get the correct value SHF from the param file and then to overwrite it with the check file value (PBE). However, I don't think this is the problem - when I add spectral_xc_functional to the original param file, this definition gets set correctly. And still spectral module produces PBE band structure! Something is wrong in the module's logic.
",
            "content_updated_on": "2016-09-30 18:44:28+01",
            "created_on": "2016-07-28 11:41:16+01",
            "id": 1613,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "spectral_xc_functional has no effect on calculation",
            "updated_on": "2016-09-30 18:44:28+01"
        },
        {
            "assignee": null,
            "content": "
Run: Nb0.25Ta0.75FeSv phonon run on a 5x5x5 k-points and q-points grid. On continuation castep reports that:


WARNING: phonon dynamical matrix data in check file HAS BEEN DISCARDED.
          because PHONON_KPOINT_LIST changed on continuation.


And everything starts from scratch with the new list of q-points. The problem is that I haven't touched the phonon_kpoints_grid in the .cell file, thus the q-points list should be the same. A dryrun test shows that initially castep generates the following list:


                    k-Points For Phonons:          10
             +++++++++++++++++++++++++++++++++++++++++++++++++++++++
             +  Number       Fractional coordinates        Weight  +
             +-----------------------------------------------------+
             +     1  -0.400000  -0.400000   0.000000   0.0960000  +
             +     2  -0.200000  -0.200000  -0.200000   0.0640000  +
             +     3  -0.200000  -0.200000   0.000000   0.0960000  +
             +     4   0.000000   0.000000   0.000000   0.0080000  +
             +     5   0.000000   0.000000   0.200000   0.0480000  +
             +     6   0.000000   0.000000   0.400000   0.0480000  +
             +     7   0.000000   0.200000  -0.400000   0.1920000  +
             +     8   0.400000  -0.400000  -0.400000   0.0640000  +
             +     9   0.400000   0.200000  -0.200000   0.1920000  +
             +    10   0.400000   0.400000   0.200000   0.1920000  +
             +++++++++++++++++++++++++++++++++++++++++++++++++++++++ 


On continuation the list changes to:


                    k-Points For Phonons:          10
             +++++++++++++++++++++++++++++++++++++++++++++++++++++++
             +  Number       Fractional coordinates        Weight  +
             +-----------------------------------------------------+
             +     1  -0.400000  -0.400000   0.000000   0.0960000  +
             +     2  -0.200000  -0.200000  -0.200000   0.0640000  +
             +     3  -0.200000  -0.200000   0.000000   0.0960000  +
             +     4  -0.200000   0.400000  -0.400000   0.1920000  +
             +     5   0.000000   0.000000   0.000000   0.0080000  +
             +     6   0.000000   0.000000   0.200000   0.0480000  +
             +     7   0.000000   0.000000   0.400000   0.0480000  +
             +     8   0.000000   0.200000  -0.400000   0.1920000  +
             +     9   0.400000   0.200000  -0.200000   0.1920000  +
             +    10   0.400000   0.400000  -0.400000   0.0640000  +
             +++++++++++++++++++++++++++++++++++++++++++++++++++++++


The q-points which don't match are highlighted in bold. It seems that they are from the same symmetric set, hence they are identical but castep changes the coordinates for no reason and the phonon run starts from scratch. This change doesn't happen with the k-points. The .check file is included in the .tar file
",
            "content_updated_on": "2017-12-06 09:03:13+00",
            "created_on": "2017-11-14 14:19:11+00",
            "id": 1798,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "CASTEP changes phonon q-points list upon continuation",
            "updated_on": "2017-12-06 09:03:13+00"
        },
        {
            "assignee": null,
            "content": "
This setting reveals that there is a coding error in tddft.f90 - in two places it calls io_open with the flag "tmpfile" which is not recognized by the routine. I suppose it was meant to be "scratch".
",
            "content_updated_on": "2017-08-08 17:24:25+01",
            "created_on": "2017-03-07 17:40:27+00",
            "id": 1703,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "TDDFT calculation with the wavefunction paging cannot be run",
            "updated_on": "2017-08-08 17:24:25+01"
        },
        {
            "assignee": null,
            "content": "
Attached came from the testing of new pseudopotentials, but is completely unrelated to that. Windows debug run goes through, but prints this:


Run-Time Check Failure #3 - The variable 'pointgroup' is being used without being initialized.


Linux debug gives:


forrtl: error (65): floating invalid Image PC Routine Line Source


castepexe.exe 0000000001F4C899 Unknown Unknown Unknown


castepexe.exe 0000000001F4B16E Unknown Unknown Unknown


castepexe.exe 0000000001E66932 Unknown Unknown Unknown


castepexe.exe 0000000001DF8F88 Unknown Unknown Unknown


castepexe.exe 0000000001E00981 Unknown Unknown Unknown


libpthread.so.0 0000003948C0F710 Unknown Unknown Unknown


castepexe.exe 0000000001D08C34 Unknown Unknown Unknown


castepexe.exe 0000000001D0899F Unknown Unknown Unknown


castepexe.exe 0000000001D105ED Unknown Unknown Unknown


castepexe.exe 0000000001D10123 Unknown Unknown Unknown


castepexe.exe 0000000001CFC9EC Unknown Unknown Unknown


castepexe.exe 000000000086D831 cell_mp_cell_anal 22773 cell.f90


castepexe.exe 000000000086D257 cell_mp_cell_anal 22720 cell.f90


castepexe.exe 0000000000721001 cell_mp_cell_read 3781 cell.f90


castepexe.exe 000000000070A165 cell_mp_cell_read 2463 cell.f90


castepexe.exe 000000000043E8F9 MAIN__ 211 castep.f90


This line is the call to spg_get_multiplicity
",
            "content_updated_on": "2016-10-03 15:20:46+01",
            "created_on": "2016-08-29 22:17:36+01",
            "id": 1620,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Attached example crashes dramatically in cell_analyse_symmetry_wrapped",
            "updated_on": "2016-10-03 15:20:46+01"
        },
        {
            "assignee": null,
            "content": "
Running phonon_kpoints in preparation for a phonon supercell calculation returns the following error in phonon_kpoints.0001.err:
ERROR in cell_volume: Volume of unit cell is zero
Current trace stack:
 cell_calculate_volume
 cell_supercell
 phonons


 


The simplest possible cell file that this fails on is attached as dummy_supercell.cell, which uses a supercell matrix {[2, 0, 0",
            "content_updated_on": "2017-12-06 10:41:53+00",
            "created_on": "2017-11-24 12:39:31+00",
            "id": 1799,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "phonon_kpoints fails with all non-trivial phonon_supercell_matrix blocks",
            "updated_on": "2017-12-06 10:41:53+00"
        },
        {
            "assignee": null,
            "content": "
The following cell file input


kpoint_mp_grid :    3  3  9
kpoint_mp_offset : 1/6  1/6  1/18


phonon_kpoint_mp_grid :  1  1  1


intended as a gamma-point phonon calculation yields "unexpected" results because "phonon_kpoint_mp_offset" defaults to "kpoint_mp_offset", giving a shifted phonon k-point.


I am not sure whether this is the intended behaviour in the spec; if sothe behaviour violates the "principle of least surprise".I think a better rule which would yield intuitive results are


1. If no XXX_kpoints are specified then the set/grid/offset default to the SCF kpoint list/grid/path


2. If *any XXX_kpoint grid/spacing is specified then the default for other parameters (usually the offset) should be the global default (0,0,0 for offsets).


Keith
",
            "content_updated_on": "2017-11-25 11:36:36+00",
            "created_on": "2017-11-25 11:36:36+00",
            "id": 1801,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Non-intuive defaults for phonon_kpoint_mp_offset",
            "updated_on": "2017-11-25 11:36:36+00"
        },
        {
            "assignee": null,
            "content": "
This bug report contains two (presumably) related issues arising when performing supercell phonon calculations. The calculations I have attached used the recent check-in to 18.1, but should be reproducible with 17.21 (where I originally found them).


Firstly, for particular supercells of my system, I have found that omitting "supercell_kpoint_mp_spacing" from the cell file leads to several errors files that state:


Error in phonon force_constant_matrix: SUPERCELL_KPOINTS do not sample a regular MP grid
Current trace stack:
phonon_force_constant_matrix
phonon_calculate
castep


This occurs for a 4x4x2 supercell, but not the 4x4x1. It only prints the "number of kpoints" and not a grid (see attached files auto_spacing.tar.gz).


As a related and perhaps more imporant issue, specifying supercell_kpoint_mp_spacing: 0.03 (the same as kpoint_mp_spacing), leads to the same grid being used for the initial cell and the supercell (as in attached files in manual_spacing.tar.gz), i.e. 60 kpoints for both.
",
            "content_updated_on": "2017-11-27 12:25:39+00",
            "created_on": "2017-11-24 18:02:10+00",
            "id": 1800,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SUPERCELL_KPOINTS_MP_SPACING uses primitive grid for supercell",
            "updated_on": "2017-11-27 12:25:39+00"
        },
        {
            "assignee": null,
            "content": "
Attached test case nowadays take an exorbitant amount of time, while it used to take 30 sec. According to the debugger CASTEP now sits forever in


 


&gt;          castepexe.exe!CELL_mp_CELL_FIND_RELATED_ATOMS(TYPE(UNIT_CELL) MYCELL={...} ) Line 23146            Unknown


           castepexe.exe!CELL_mp_CELL_SET_SUPERCELL_SYMMETRY(INTEGER(4)  SUPERCELL_MAT={...} , TYPE(UNIT_CELL) MYCELL={...} , TYPE(UNIT_CELL) SUPERCELL={...} ) Line 18129   Unknown


           castepexe.exe!CELL_mp_CELL_SUPERCELL(INTEGER(4)  SUPERCELL_MAT={...} , TYPE(UNIT_CELL) MYCELL={...} , TYPE(UNIT_CELL) SUPERCELL={...} ) Line 17026        Unknown


           castepexe.exe!PHONON_mp_PHONON_RECIP_TO_REAL(TYPE(MODEL_STATE) MDL={...} ) Line 6005            Unknown


           castepexe.exe!PHONON_mp_PHONON_CALCULATE(TYPE(MODEL_STATE) MDL={...} ) Line 677  Unknown


           castepexe.exe!THERMODYNAMICS_mp_THERMO_CALCULATE(TYPE(MODEL_STATE) MDL={...} ) Line 136            Unknown


           castepexe.exe!CASTEP() Line 657      Unknown


 


This is the place where CASTEP looks for equivalent atoms, going through 1200 atoms in a supercell that has 14400 symmetry operations. CASTEP 2017 release did not do that for sure (I just reran that executable, on the now-failing machine it took 20 sec).


It seems that something is not right with setting up the supercell… could you please check the code logic based on this example?


 
",
            "content_updated_on": "2016-08-31 16:27:26+01",
            "created_on": "2016-08-04 13:42:05+01",
            "id": 1614,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Linear response test takes forever because of supercell symmetry analysis",
            "updated_on": "2016-08-31 16:27:26+01"
        },
        {
            "assignee": null,
            "content": "
It appears that on the fly generated norm-conserving pseudopotentials for Re, Ir, Pt, Au, Hg, Tl, Pb generate a nonphysical ghost state in the conduction band, approximately 10 eV above the Fermi level. The same feature is present in calculations with tabulated potentials required for spin-orbit coupling. 
",
            "content_updated_on": "2017-12-14 17:02:35+00",
            "created_on": "2017-12-14 17:02:11+00",
            "id": 1804,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "open",
            "title": "Ghost states in some NCP OTFG settings",
            "updated_on": "2017-12-14 17:02:35+00"
        },
        {
            "assignee": null,
            "content": "
The user would like to assess the relative energies of the singlet (opposite spins of different sign) and triplet (spins of the same sign) configurations. "I have been able to do this in VASP by just starting my calculations with magnetic moments (spins) of the appropriate sign on each atom. Description of the VASP capability can be found through the following link, https://cms.mpi.univie.ac.at/vasp/vasp/Constraining_direction_magnetic_moments.html"
",
            "content_updated_on": "2017-12-15 22:21:56+00",
            "created_on": "2017-12-12 17:15:11+00",
            "id": 1803,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Desires constraining the size and direction of the magnetic moments",
            "updated_on": "2017-12-15 22:21:56+00"
        },
        {
            "assignee": null,
            "content": "
After the codefest CASTEP started to print some stuff it never did before. E.g,.


zero ionic velocities,


zero Hubbard U's etc...


 


It looks this is a result of not very correct comparison like in cell.F90


 


       if(sum(abs(mycell%ionic_velocities)) &gt; small_number)then
          ! write the ionic velocities and species in cell


       if(maxval(abs(mycell%hubbard_u)) &gt; very_small_number)then
          ! write out Hubbard U values if present


 


but we fill only part of the mycell%ionic_velocities and another part could have rubbish. I suggest we need a bit more robust test...


Though again, i see it only for continuation runs...


 
",
            "content_updated_on": "2016-09-11 21:38:12+01",
            "created_on": "2016-04-29 13:52:39+01",
            "id": 1562,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "very strange output in castep",
            "updated_on": "2016-09-11 21:38:12+01"
        },
        {
            "assignee": null,
            "content": "
The "io_abort" sequence on detection of a failure can (and is likely to) hang before issuing the MPI_abort if SMP -optimised communications are in use.  Comms_abort calls


          call FIPC_finalize(error)
but FIPC_finalize has a few MPI_barrier() calls across the SMP communicator. Consequently  any failure (such as an ALLOCATE abort) which does not occur on either zero or all processes participating in a communicator will result in a perpetual hang on the MPI_barrier.


This can (and will) waste thousands of node-hours on ARCHER!


Keith
",
            "content_updated_on": "2017-04-03 12:21:00+01",
            "created_on": "2016-09-08 11:37:39+01",
            "id": 1627,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Comms_abort fails to kill SMP job",
            "updated_on": "2017-04-03 12:21:00+01"
        },
        {
            "assignee": null,
            "content": "
Using BIOVIA standard procedure


castepexe castep_6aRS


cp castep_6aRS.check castep_6aRS_BandStr.check


castepexe castep_6aRS_BandStr


Current version crashes, and according to the debug build:


Plane wave load balancing: max     81 min     65 average     74


True cut-off energy of basis :   7.847


 Reassigning basis set.


forrtl: severe (174): SIGSEGV, segmentation fault occurred


Image              PC                Routine            Line        Source             


castepexe.exe      0000000001FBF539  Unknown               Unknown  Unknown


castepexe.exe      0000000001FBDE0E  Unknown               Unknown  Unknown


castepexe.exe      0000000001ED0902  Unknown               Unknown  Unknown


castepexe.exe      0000000001E62F58  Unknown               Unknown  Unknown


castepexe.exe      0000000001E6A77B  Unknown               Unknown  Unknown


libpthread.so.0    0000003948C0F710  Unknown               Unknown  Unknown


castepexe.exe      000000000093FE96  basis_mp_basis_as       11724  basis.f90


castepexe.exe      00000000008F3E2F  basis_mp_basis_in        1146  basis.f90


castepexe.exe      000000000044AA73  castep_IP_run_ban        1567  castep.f90


castepexe.exe      0000000000443934  MAIN__                    638  castep.f90


Windows debugger suggests that basis.F90 is confused as to whether to use SCF set or BS set of kpoints:


forrtl: severe (408): fort: (2): Subscript #1 of the array NUM_PLANE_WAVES_KP has value 5 which is greater than the upper bound of 4


 


Image              PC        Routine            Line        Source


castepexe.exe      01046F53  _BASIS_mp_BASIS_A       11720  basis.f90


castepexe.exe      00F74860  _BASIS_mp_BASIS_I        1146  basis.f90


castepexe.exe      0040F63F  _CASTEP_ip_RUN_BA        1567  castep.f90


castepexe.exe      00407990  _MAIN__                   638  castep.f90


 
",
            "content_updated_on": "2016-09-11 21:43:14+01",
            "created_on": "2016-06-17 15:57:04+01",
            "id": 1590,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "bandstructure +RS potentials crashes on continuation",
            "updated_on": "2016-09-11 21:43:14+01"
        },
        {
            "assignee": null,
            "content": "
I suspect the "Hamiltonian Energy" isn't calculated correctly (a bug),  It should be stsble in NPT/ Parrinello-Rahman, but it oscillates with the ringing mode.


cell, param and castep files for this run. . 


Another, probably different,  bug gives a big jump in "Hamiltonian Energy" at timestep 2758 - mid run, where atom H5 went through the x periodic boundary.  Everything else is smooth.


My student has other examples.
",
            "content_updated_on": "2017-12-21 10:31:55+00",
            "created_on": "2017-12-21 10:18:28+00",
            "id": 1805,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Miscalculation in Hamiltonian Energy",
            "updated_on": "2017-12-21 10:31:55+00"
        },
        {
            "assignee": null,
            "content": "
I just found out the following keyword definition:


spinors_spin_polarised


has no definition in parameters.f90. Besides being a problem in itself, this will cause a crash when calling "castep --help all", which has the effect of completely breaking the interface with the Atomic Simulation Environment. Therefore, this is potentially more harmful than it might look.
",
            "content_updated_on": "2018-01-24 15:46:44+00",
            "created_on": "2018-01-24 15:46:44+00",
            "id": 1808,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Keyword not defined",
            "updated_on": "2018-01-24 15:46:44+00"
        },
        {
            "assignee": null,
            "content": "
Please implement this option to kill the ringing mode in MD - its only one line* and it really works:  https://arxiv.org/abs/1609.01980
*  IF (BOXVELOCITY*STRESS . LT. 0.0) BOXVELOCITY= 0.0
 
",
            "content_updated_on": "2017-12-21 10:33:02+00",
            "created_on": "2017-12-21 10:21:31+00",
            "id": 1806,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "kill the ringing mode in MD ",
            "updated_on": "2017-12-21 10:33:02+00"
        },
        {
            "assignee": null,
            "content": "
format statement isn't general enough to cope with large values of gyromagnetic ratio

cell_write_species_phys uses a fixed format F16.8
",
            "content_updated_on": "2014-05-03 17:42:46+01",
            "created_on": "2014-04-14 16:34:33+01",
            "id": 1004,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "cell_write_cell",
            "updated_on": "2014-05-03 17:42:46+01"
        },
        {
            "assignee": null,
            "content": "
On request from Japan we are looking into Raman results for degenerate modes. At the moment I am inclined to side with the user there who thinks something is wrong with the machinery in at least one case he sent us. I attached input/output for an 8-core run, where modes 12 and 13 are degenerate. The intensities are different, and the result for the second mode seem to depend on too many things, including the number of threads. If I use less strict tolerance that intensity can jump by five orders of magnitude. In the serial run I get:

Warning: Solution for degenerate tensor   13 not found -

setting to mode   12 instead

 

Then of course both intensities are the same:

 

+    12     494.566681   f          0.0000000  N            0.0241587  Y     +

 +    13     494.566681   f          0.0000000  N            0.0241587  Y     +

 

In the attached 8-core run they are different:

+    12     494.551722   f          0.0000000  N            0.0243416  Y     +

 +    13     494.551722   f          0.0000000  N            0.0007407  Y     +

And in a 4-core calculation:

+    12     494.546433   f          0.0000000  N            0.0193342  Y     +

 +    13     494.546433   f          0.0000000  N            0.8356270  Y     +

Could you please check the logic of this part of the code, especially for parallel runs? The next batch of data is from the runs with debug settings:

+ Mode number:  12 completed;                   time taken:   601.63 seconds +

Raman   12  -6.90169525E-04  -2.01065812E-05   1.27023604E-02

Raman   12  -2.01065812E-05  -6.94237014E-04   1.26473281E-02

Raman   12   1.27023604E-02   1.26473281E-02  -1.42129275E-03

Doublet calculation in raman_get_degenerate

Final L,M=  -0.999639844193325       7.099256918055112E-002

symm op   7   0.00000000E+00   1.00000000E+00   0.00000000E+00

symm op   7   1.00000000E+00   0.00000000E+00   0.00000000E+00

symm op   7   0.00000000E+00   0.00000000E+00  -1.00000000E+00

A matrix  -5.35595873E-17   5.82758668E-17  -7.07097682E-01

A matrix   1.49880108E-15   3.46944695E-16   3.58721115E-03

b vector   5.82758668E-17  -5.35595873E-17   7.07097682E-01

+ Mode    13: degenerate with previous; explicit calculation not required    +

 

The output above is from a 4-core calculation – it used the same input as before, but now produced a different result from quoted in the previous mail (especially for the second intensity):

 

+    12     494.539383   f          0.0000000  N            0.0242493  Y     +

 +    13     494.539383   f          0.0000000  N            0.1221706  Y     +

 

Note that on the second run of the 1-core job I did not get “solution not found”, but instead there was:

 

+ Mode number:  12 completed;                   time taken:  1212.13 seconds + + Checkpointing.....                                                         +   Writing analysis data to SnO2_Efield.castep_bin   Writing model to SnO2_Efield.check Raman   12  -2.06405025E-04  -7.06208243E-05   1.70323216E-02 Raman   12  -7.06208243E-05  -2.09599228E-04   3.28488231E-03 Raman   12   1.70323216E-02   3.28488231E-03  -8.77610198E-04 Doublet calculation in raman_get_degenerate Final L,M=  -0.475103625596840       0.708423799691783     symm op   2  -1.00000000E+00   0.00000000E+00   0.00000000E+00 symm op   2   0.00000000E+00  -1.00000000E+00   0.00000000E+00 symm op   2   0.00000000E+00   0.00000000E+00   1.00000000E+00 A matrix   3.12108877E-16  -2.87932651E-16  -5.68147799E-01 A matrix   4.49322179E-16  -4.94851471E-16   4.20960899E-01 b vector   1.35374923E-16  -2.03842820E-16   5.68147799E-01 + Mode    13: degenerate with previous; explicit calculation not required    +
",
            "content_updated_on": "2014-10-12 18:32:15+01",
            "created_on": "2014-04-15 15:01:45+01",
            "id": 1006,
            "kind": "bug"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Problematic Raman tensors for degenerate modes",
            "updated_on": "2014-10-12 18:32:15+01"
        },
        {
            "assignee": null,
            "content": "
Kinetic energy seems to be incorrect after first PIMD restart.
",
            "content_updated_on": "2015-03-30 10:19:06+01",
            "created_on": "2015-03-30 09:30:43+01",
            "id": 1263,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "PIMD restart bug",
            "updated_on": "2015-03-30 10:19:06+01"
        },
        {
            "assignee": null,
            "content": "
My BLYP calculations for a few molecule in a box examples failed miserably, energy jumping up and down by orders of magnitude. BLYP seems to work fine for normal crystals though.
",
            "content_updated_on": "2017-10-12 14:27:35+01",
            "created_on": "2017-03-31 17:16:20+01",
            "id": 1721,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "BLYP fails to converge SCF for molecule in a box",
            "updated_on": "2017-10-12 14:27:35+01"
        },
        {
            "assignee": null,
            "content": "There are now Hirshfeld charges available, similar analysis can be applied for spins.",
            "content_updated_on": "2010-06-30 11:40:56+01",
            "created_on": "2009-07-10 16:44:56+01",
            "id": 157,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Add Hirshfeld analysis for spins",
            "updated_on": "2010-06-30 11:40:56+01"
        },
        {
            "assignee": null,
            "content": "
This test passes on 1,2,4,6 cores but crashes on 3 with:


Fatal error in MPI_Allreduce: Message truncated, error stack: MPI_Allreduce(1339)...............: MPI_Allreduce(sbuf=0x7fff24479f7c, rbuf=0x7fff2447a06c, count=1, MPI_LOGICAL, MPI_LOR, comm=0x84000002) failed MPIR_Allreduce_impl(1180).........: MPIR_Allreduce_intra(808).........: MPIDI_CH3U_Receive_data_found(129): Message from rank 2 and tag 14 truncated; 768 bytes received but buffer size is 4


Phil noted:


this calculation is failing inside electronic_minimisation when the parallelisation switches from k-point to G-vector (IIRC this happens on the 2nd phonon perturbation), and the immediate cause is that the total energy on one process is different (by 4 orders of magnitude!) to the one the other two have; this causes the processes to desynchronise. This is as far as I've got, but obviously the next step is to track down why this is happening.
",
            "content_updated_on": "2016-10-13 12:35:10+01",
            "created_on": "2016-09-23 17:20:00+01",
            "id": 1640,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LDA+U and finite displacement run crashes in parallel",
            "updated_on": "2016-10-13 12:35:10+01"
        },
        {
            "assignee": null,
            "content": "
Hi ,


I was using the internal castep help function using the ./castep.mpi -h search all command, and the list of keywords it contains is very depleted. Similary, -h search medium returns 7 items whereas -h search expert returns no entries at all for either cell or param keywords.


If I search directly for a term such as efield, it seems to return a list similar to that returned by my castep 16.1 executable.


Best wishes,


Rob Lawrence
",
            "content_updated_on": "2017-04-03 12:08:14+01",
            "created_on": "2017-03-30 11:19:10+01",
            "id": 1719,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Internal Help Error",
            "updated_on": "2017-04-03 12:08:14+01"
        },
        {
            "assignee": null,
            "content": "
Attached files generate segmentation violation on any number of cores but one. Interstingly, for a 1/4 1/4 1/4 point the crash happens later:
+ ================================================================= +
+ Electronic energies +
+ ------------------- +
+ +
+ Band number Energy in eV +
+ ================================================================= +
+ +
+ ----------------------------------------------------------------- +
+ Spin=1 kpt= 1 ( 0.250000 0.250000 0.250000) kpt-group= 1 +
+ ----------------------------------------------------------------- +
+ +
+ 1 -12.603126 +
+ 2 -4.323633 +
+ 3 -0.935359 +
+ 4 -0.797547 +
+ 5 2.545886 +
+ 6 4.106529 +
+ 7 4.315810 +
+ 8 7.905875 +
+ 9 8.311124 +
+ 10 8.436653 +
+ 11 9.562829 +
+ 12 12.871806 +
+ 13 16.238928 +
+ 14 16.382561 +
+ 15 19.585026 +
+ 16 19.666213 +
=====================================================================
Pseudo atomic calculation performed for Si 3s2 3p2
Converged in 16 iterations to a total energy of -100.9583 eV
All bands spilling parameter for spin component 1 =51.01%
forrtl: severe (174): SIGSEGV, segmentation fault occurred
Image PC Routine Line Source
castepexe.exe 0000000001364906 Unknown Unknown Unknown
castepexe.exe 00000000012F7FE1 Unknown Unknown Unknown
castepexe.exe 00000000004493CB Unknown Unknown Unknown
castepexe.exe 0000000000417D2A Unknown Unknown Unknown
castepexe.exe 0000000000411FAC Unknown Unknown Unknown
libc.so.6 0000003D2181ECDD Unknown Unknown Unknown
castepexe.exe 0000000000411EB9 Unknown Unknown Unknown
 
",
            "content_updated_on": "2016-10-21 14:46:28+01",
            "created_on": "2013-04-24 10:43:11+01",
            "id": 889,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Hybrid functional (sHF) segments in parallel for Gamma-point calculation",
            "updated_on": "2016-10-21 14:46:28+01"
        },
        {
            "assignee": null,
            "content": "
No VCA calculation is now possible. They crash in spg_get_dataset (operator 


 dset % rotations        = rotations       


complaining about access violation. 


The call stack is:


&gt;    castepexe.exe!SPGLIB_F08_mp_SPG_GET_DATASET(TYPE(SPGLIBDATASET) DSET , REAL(8)  LATTICE , REAL(8)  POSITION , INTEGER(4)  TYPES , INTEGER(4)  NUM_ATOM , REAL(8)  SYMPREC ) Line 423    Fortran
     castepexe.exe!CELL_mp_CELL_ANALYSE_SYMMETRY_WRAPPED(TYPE(UNIT_CELL) MYCELL ) Line 22880    Fortran
     castepexe.exe!CELL_mp_CELL_ANALYSE_SYMMETRY(TYPE(UNIT_CELL) MYCELL ) Line 22796    Fortran
     castepexe.exe!CELL_mp_CELL_READ_WRAPPED(CHARACTER(256) SEEDNAME , TYPE(UNIT_CELL) MYCELL ) Line 3793    Fortran
     castepexe.exe!CELL_mp_CELL_READ(CHARACTER(256) SEEDNAME , TYPE(UNIT_CELL) MYCELL ) Line 2470    Fortran


 


 


The reason is obvious:


CASTEP is sending all atomic positions to the routine and because same position is shared by more than one atom spglib is crashing...


 


 
",
            "content_updated_on": "2016-11-01 13:11:50+00",
            "created_on": "2016-10-24 10:12:11+01",
            "id": 1654,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "VCA (mixture atoms) does not run any more",
            "updated_on": "2016-11-01 13:11:50+00"
        },
        {
            "assignee": null,
            "content": "
Currently the parallel efficiency report is written only on a normal end-of-run termination.

However there are other controlled shutdowns which do not call comms_abort, including when instigated by RUN_TIME being exceeded or by SCF convergence failure.  It would be useful to have a parallel efficiency report in those circumstances too.

 
",
            "content_updated_on": "2014-05-20 14:38:09.672845+01",
            "created_on": "2014-05-20 14:38:09+01",
            "id": 1024,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Write parallel efficiency report on RUN_TIME and other non-final terminations",
            "updated_on": "2014-05-20 14:38:09.672845+01"
        },
        {
            "assignee": null,
            "content": "When testing a ZrH2 supercell calculation

ZrH2-usp-vib.cell

in parallel the code crashes on one processor, causing a hangup.
This appears to be somewhere within secondd_find_dmat_symmetry.",
            "content_updated_on": "2010-06-21 15:43:45+01",
            "created_on": "2009-02-16 10:36:41+00",
            "id": 112,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Symmetry analysis crashes for ZrH2",
            "updated_on": "2010-06-21 15:43:45+01"
        },
        {
            "assignee": null,
            "content": "
Take existing BKS code, generalize devel_code support, to allow any arbitrary pair potential. Discussion with Jacob Wilkins.
",
            "content_updated_on": "2015-06-26 10:55:29+01",
            "created_on": "2015-03-31 14:26:58+01",
            "id": 1264,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Generalized pair potential",
            "updated_on": "2015-06-26 10:55:29+01"
        },
        {
            "assignee": null,
            "content": "
There is a bug in the logic for setting up the k-pointset for a supercell phonon calculation.  In the attached example,


kpoint_mp_grid  3  3  3


supercell_kpoint_mp_grid  3 3 3


the code assumes that the supercell kpoint grid was not specified and invoves the "fallback" sampling of supercell k-points which is not based on an MP grid.  Consequently the phonon code fails with a k-point mapping error on the first perturbation.


The solution has to be a correct detection of whether the .cell file *really* specifies a supercell kpoint set or not and the behaviour of defaulting to the SCF set must be modified.


 


 
",
            "content_updated_on": "2016-11-06 16:56:49+00",
            "created_on": "2016-11-02 13:40:01+00",
            "id": 1659,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon supercell calculation failes if SCF and supercell k-point sets are the same",
            "updated_on": "2016-11-06 16:56:49+00"
        },
        {
            "assignee": null,
            "content": "
The attached test case fails after the 1st BFGS cycles with


Error in geometry_symm_check: unacceptable symmetry breaking
Current trace stack:
 geom_symm_check
 geom_get_forces
 geom_BFGS
 geometry_optimise
 castep



This is a new failure, dating from a check added my Matt in changeset:   7110:288fba82bf60


* The structure is an ABCABC... stacked graphite with a rhombohedray Bravais lattice and space group R-3m.  If constructing from LATTICE_ABC we would represent this with a LATTICE_CART of 3 equal-length vectors with the 3-fold axis along Z and a mirror plane in the ab plane, thus:


        Real Lattice(A)                      Reciprocal Lattice(1/A)
   1.4022451   0.0000000   2.7963023        2.9872025   0.0000000 0.7489874
  -0.7011226   1.2143803   2.7963023       -1.4936013   2.5869924 0.7489874
  -0.7011226  -1.2143803   2.7963023       -1.4936013  -2.5869924 0.7489874
                       Lattice parameters(A)       Cell Angles
                    a =    3.128194          alpha =   45.685697
                    b =    3.128194          beta  =   45.685687
                    c =    3.128194          gamma =   45.685687
                       Current cell volume =   14.285124       A**3


But Chris' cell file was in another setting:


        Real Lattice(A)                      Reciprocal Lattice(1/A)
   2.1033679  -1.2143800   0.0000000        1.4936011  -2.5869931 -0.7489872
   2.1033679   1.2143800   0.0000000        1.4936011   2.5869931 -0.7489872
   1.4022450   0.0000000   2.7963023        0.0000000   0.0000000 2.2469621
                       Lattice parameters(A)       Cell Angles
                    a =    2.428760          alpha =   67.157160
                    b =    2.428760          beta  =   67.157160
                    c =    3.128194          gamma =   60.000000
                       Current cell volume =   14.285122       A**3


with both a and b lying in the perpendicular plane , related by a transformation matrix of


  [  1 -1  0",
            "content_updated_on": "2016-11-17 17:27:11+00",
            "created_on": "2016-11-15 18:26:51+00",
            "id": 1664,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Regression: Geom opt aborts due to symmetry breaking for non-standard cell setting",
            "updated_on": "2016-11-17 17:27:11+00"
        },
        {
            "assignee": null,
            "content": "
When generating the angular-momentum dependent augmentation functions (following equations 26-33 in PRB 47 10142), there is a bug which causes that some of the resulting functions do not conserve the appropriate radial moment of the original augmentation function.


In Source/Fundamental/ion_atom.f90, ion_atom_construct_psp_paw() aroud lines 11936-11965, ion_atom_Q_pseudise() takes the original augmentation function (qfunc) on a radial grid, and returns the coefficients of the L-dependent function (qfcoef) in the last argument. ion_atom_Q_pseudise() also provides the L-dependent function on the radial grid as its return value. The problem is that in the inner loop over the angular momentum channels, qfunc is replaced by its L-dependent counterpart in each iteration, therefore there is no guarantee that the (L+1)-th and onwards moments are conserved.


 


 
",
            "content_updated_on": "2017-04-05 14:38:22+01",
            "created_on": "2017-02-15 10:27:13+00",
            "id": 1692,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bug in on-the-fly ultrasoft pseudopotential generation",
            "updated_on": "2017-04-05 14:38:22+01"
        },
        {
            "assignee": null,
            "content": "
At the moment warnings can be reported in the .castep file - for some users this is not an issue because they read carefully the .castep file. However many users are not paying enough attention to this, particularly Materials Studio users, some of whom never look at the .castep file(!!!). These warnings, which could indicate a serious problem with the calculation, can then be missed. Therefore, the warning messages should be standardised to include a given string (e.g. 'WARNING') which can then easily be searched for and MS could also pick up on this and pass the warning onto the 'black-box' user. In addition to this, we could introduce a global logical variable 'warning_issued' which can be set to true when such an event occurs. If set true, at the end of a calculation castep can issue a (big!) message telling the user to pay attention (MS can also pick up on this).
",
            "content_updated_on": "2014-05-22 10:20:09+01",
            "created_on": "2009-10-22 17:04:36+01",
            "id": 193,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "Standardise Warnings",
            "updated_on": "2014-05-22 10:20:09+01"
        },
        {
            "assignee": null,
            "content": "
Chris Pickard brought up the case where a variable cell optimization with %BLOCK EXTERNAL_STRESS fails if the specifid stress breaks the crystal symmetry. 

But in fact the most probable case for this is not that the stress is wrong, but that the deformation has to break the crystal symmetry.  But such a calculation is awkward to set up requiring a manual specification of %BLOCK SYMMETRY_OPS.

Should CASTEP lower the symmetry itself in such cases, either by default or with an additional keyword?

 

More generally I do wonder if there is a case for a more general "subgroup symmetry" option.  For example a
SPACEGROUP : n
keyword in cell.  This could allow optimization allowed to break symmetry, eg in response to a particular imaginary phonon mode.

 

This needs some more thought about the desired behaviour to work into a proposed change.

 
",
            "content_updated_on": "2014-05-23 16:46:38.006732+01",
            "created_on": "2014-05-23 16:46:38+01",
            "id": 1025,
            "kind": "proposal"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Allow symmetry brealing by "EXTERNAL_STRESS" and explicit keyword?",
            "updated_on": "2014-05-23 16:46:38.006732+01"
        },
        {
            "assignee": null,
            "content": "
This is a good idea. We have experimented with &amp;quot;task-farm&amp;quot;
level parallelism in the past, but found that the different
computational effort required for different perturbations and
q-points made MPI parallelism inefficient. However &amp;quot;job-scheduler&amp;quot;
task farming as you suggest would certainly be possible and probably
more effective. This would require some additional code development
to set up and merge the results of the independent calculations.
There's no support for this at present, but it's worth bearing in
mind as a possible development project.
Keith Refson
On Mon, 2009-03-23 at 17:37 +0000, Kilian Frensch wrote:
&amp;gt; Hi,
&amp;gt;
&amp;gt; I'm performing DFPT calculations for the phonon frequencies in large cells
&amp;gt; of bulk crystals containing single defects, where the number of
&amp;gt; perturbations resulting from these defects can be very large. Running such a
&amp;gt; DFPT calculation is very consuming due to the high tolerances required.
&amp;gt;
&amp;gt; I was wondering if there is a way of performing these phonon calculations
&amp;gt; just for a given set of perturbations? The advantage to this would be that,
&amp;gt; instead of having to resubmit a single job repeatedly until all the
&amp;gt; perturbations have been calculated, I would be able to submit dozens of
&amp;gt; jobs, each performing one or two perturbations, and then piece together the
&amp;gt; information gained. Since I am effectively limited to using only up to 16
&amp;gt; processors for any given job, but can run numerous 16 processor jobs
&amp;gt; simultaneously, this would help greatly!
&amp;gt;
&amp;gt; Thank you for any help,
&amp;gt; Kilian Frensch
",
            "content_updated_on": "2014-05-22 10:23:30+01",
            "created_on": "2009-03-25 14:02:43+00",
            "id": 115,
            "kind": "task"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Add facility to combine partial phonon calcs from separate runs",
            "updated_on": "2014-05-22 10:23:30+01"
        },
        {
            "assignee": null,
            "content": "Currently computing the energy surface along a mode is a manual
process, although &amp;quot;mode_follow&amp;quot; will generate the basic .cell files.

This could be nicely integrated to perform actual calculations and
make this feature more usable.
",
            "content_updated_on": "2010-12-01 10:36:41.496854+00",
            "created_on": "2010-12-01 10:36:41+00",
            "id": 423,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Integrated mode-follow functionality",
            "updated_on": "2010-12-01 10:36:41.496854+00"
        },
        {
            "assignee": null,
            "content": "
Following a request from Philippe Zeller for this, I realise that it
would be quite easy to implement magnetic symmetry. This would allow
calculations on to handle antiferromagnetic (and some ferrimagnetic)
systems with full crystallographic symmetry, use reduced k-point
sets and perform geometry optimization under symmetry.
The changes required would be
1) A new public variable array in cell
logical, dimension(num_symmetry_operations) :: symmetry_spin_inversion
and mirrors for any other copies of spin operations.
2) Updates to all variants of cell_reduce_symmetry and cell_set_symmetry,
cell_set_supercell_symmetry.
3) Modules which change symmetry would have to know about and handle this
array along with symmetry_disps and symmetry_equiv_atoms. Notably
secondd.F90 and secondd_symmetry.F90.
4) There may be implications for the lattice dynamics symmetry
handling of AFM systems - atomic perturnations will break the
magnetic as well as the lattice symmetry. Further thought required on this.
5) The most important bit. Density symmetrise would be the one module
to actually use this. It would impose the combined spin+matrix symmetry
on the spin density - very easy.
6) The values of the symmetry_spin_inversion array could be determined
automatically in cell_read from the SPIN= input variables.
7) cell_find_related_magn_atoms would *not* be used to reduce the
symmetry operation set found by SYMMETRY_GENERATE and nor would
explicit symmetry operations be marked as inconsistent with spin.
I don't think any additional input would be required. Aside from the
(unimportant in practice) case of enforcing AFM symmetry but starting
with no spin, I can't see a need for this.
[There is one further optimization which would be possible in principle
only for pure antiferromagnets, which would be to exploit the spin-up/
spin down symmetry of the wavefunctions and only use a spin dimension
of 1 in wvfn%coeffs. That would require more substantial work in
density_calculate to calculate the 2-component density frpm a 1-component wavefunction and the spin symmetry, and all of the XC driver routines to
implement LSDA or s-GGA.
But I think for this latter optimisation the cost/benefit ratio is not so
favourable. The only gain here would be speed and not functionality.",
            "content_updated_on": "2014-05-22 10:29:14+01",
            "created_on": "2010-07-15 18:36:59+01",
            "id": 307,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "open",
            "title": "Add spin symmetry operations",
            "updated_on": "2014-05-22 10:29:14+01"
        },
        {
            "assignee": null,
            "content": "
For some applications, one could need a set of very special constrained to be applied during lattice optimization. One of the examples is a random alloy which is constructed a supercell with non-symmetric occupations. 


 


It looks desirable to do optimization keeping a shape of original cell intact.


There are two modes I see - either keeping full shape (i.e. only allow for the volume to relax) or keeping the symmetry of original cell  which can be a bit trickier.


I suggest  implementing the first  constraint as a simple fix_shape constraint (which would effectively mean keeping all the angles fixed together with b/a and c/a ratios) 


And the second one as a generic way of introducing any desirable constraint - via a set of symmetry operations to be applied to the strain, i.e.:


CASTEP got \hat\sigma


provided set of symmetry operations \hatO^n


Effective tensor to be used in BFGS


\hat\sigma'=(\sum_n O^n\hat\sigma)/N


==


The input could be something like this 


%BLOCK STRESS_SYMMETRY_OPS


1.000000000000000       0.000000000000000       0.000000000000000
  -0.000000000000000       1.000000000000000       0.000000000000000
   -0.000000000000000       0.000000000000000       1.000000000000000
      -1.000000000000000      -0.000000000000000       0.000000000000000
       0.000000000000000      -1.000000000000000      -0.000000000000000
      -0.000000000000000      -0.000000000000000       1.000000000000000


       0.000000000000000       1.000000000000000       0.000000000000000
      -1.000000000000000      -0.000000000000000      -0.000000000000000
      -0.000000000000000      -0.000000000000000       1.000000000000000


...


%ENDBLOCK STRESS_SYMMETRY_OPS


 


 


 


 


 
",
            "content_updated_on": "2017-04-03 19:23:20+01",
            "created_on": "2016-12-13 10:28:30+00",
            "id": 1677,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Desire to have user defined constraints on the lattice vectors.",
            "updated_on": "2017-04-03 19:23:20+01"
        },
        {
            "assignee": null,
            "content": "
USP files distributed with MS generate strange bond populations for Mg and Ba (OTFG is fine).
SPE runs for the primitive cell of MgO give bond overlap of 1.33 from OTFG, 1.27 from NCP and -3.28 from USP. The same story with BaO: 0.75 with OTFG, 0.73 with NCP and -2.66 with USP.
Another interesting question – BaO runs print the bond length as 4.78, which is between Ba and O in different cells (the shortest distance is actually 2.76). This is an error, and MgO – with the same structure – works correctly.
",
            "content_updated_on": "2016-09-19 12:44:01+01",
            "created_on": "2011-01-12 11:36:13+00",
            "id": 467,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "MgO and BaO potentials produce strange negative bond order populations",
            "updated_on": "2016-09-19 12:44:01+01"
        },
        {
            "assignee": null,
            "content": "
As the value of the fine_grid parameter is increased, pot1d starts to produce electrostatic potentials with non-physical features.


As an example, the electrostatic potential for a supercell of diamond is plotted, with two values of fine_grid. The potential is plotted along v[Nx/2, Ny/2, :",
            "content_updated_on": "2017-08-08 15:23:34+01",
            "created_on": "2017-05-03 12:59:10+01",
            "id": 1733,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "pot1d produces noisy electrostatic potentials when fine_grid keyword is used",
            "updated_on": "2017-08-08 15:23:34+01"
        },
        {
            "assignee": null,
            "content": "
BIOVIA  customers found a problem with castep (see attached files). The problem is easily reproducible, on Windows the stack is 


forrtl: severe (408): fort: (8): Attempt to fetch from allocatable variable REAL


_FINE_POT when it is not allocated


 


Image PC Routine Line Source


castepexe.exe 04107C51 Unknown Unknown Unknown


castepexe.exe 02F763FB _LOCPOT_mp_LOCPOT 368 locpot.f90


castepexe.exe 02818645 _ELECTRONIC_mp_EL 2500 electronic.f90


castepexe.exe 027F4403 _ELECTRONIC_mp_EL 333 electronic.f90


castepexe.exe 00E0A97D _CASTEP_ip_CHECK_ 1121 castep.f90


castepexe.exe 00E076C7 _MAIN__ 650 castep.f90


castepexe.exe 0492320F Unknown Unknown Unknown


castepexe.exe 04AB46FA Unknown Unknown Unknown


castepexe.exe 04AB484D Unknown Unknown Unknown


kernel32.dll 75A2343D Unknown Unknown Unknown


ntdll.dll 77799832 Unknown Unknown Unknown


ntdll.dll 77799805 Unknown Unknown Unknown


 


 


And indeed debugger says that poten%real_fine_pot which is used there is not yet allocated....
",
            "content_updated_on": "2018-03-16 00:38:12+00",
            "created_on": "2018-02-26 16:46:27+00",
            "id": 1815,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP with Electric Field crashes",
            "updated_on": "2018-03-16 00:38:12+00"
        },
        {
            "assignee": null,
            "content": "
Bjoern Winkler filed a report about a problem with a phonon calculation of MgCO3 in 17.2.


This run gives large-amplitude oscillations in the dispersion, with excursions to large negative and positive frequencies.


I traced this to a regression in


changeset:   7013:d2a70b6b796c
user:        Keith Refson &lt;Keith.Refson@stfc.ac.uk&gt;
date:        Sat Apr 23 13:40:58 2016 +0100
summary:     Added new field in unit_cell type to hold offsets of primitive cell within a supercell.


The new computation of the cell-offset vector within the supercell was coded (in several places) as


-       dist_supercell(:,nc) = matmul(current_cell%real_lattice, mdl%phonon_supercell_origins(:,nc))


when it should have read


+       dist_supercell(:,nc) = matmul(transpose(current_cell%real_lattice), mdl%phonon_supercell_origins(:,nc))



This means that the Fourier interpolation will fail in  any calculation where the unit cell matrix is non-diagonal - which includes trigonal, monoclinic and triclinic systems.  Fortunately the effects of the failure will almost always be such a gross error that they will be noticed.


 


 


 


 
",
            "content_updated_on": "2017-08-09 12:43:02+01",
            "created_on": "2017-05-09 14:58:12+01",
            "id": 1734,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Regression in phonon Fourier interpolation for rhombohedral systems",
            "updated_on": "2017-08-09 12:43:02+01"
        },
        {
            "assignee": null,
            "content": "
If you attempt to use cell_read_wrapped with a passed 'mycell' then the call to cell_generate_qpoints will fail as 'mycell' is not propagated and hence it defaults to using 'current_cell' instead.
",
            "content_updated_on": "2018-03-21 11:08:44+00",
            "created_on": "2018-03-20 15:58:43+00",
            "id": 1818,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bug in cell_read",
            "updated_on": "2018-03-21 11:08:44+00"
        },
        {
            "assignee": null,
            "content": "
Occasionally a finite basis set correction calculation fails because the energy is numerically non-variational.  Usually this can be solved by increasing finite_basis_spacing.  The error message should be updated to include this advice.
",
            "content_updated_on": "2015-04-09 11:35:03.0565+01",
            "created_on": "2015-04-09 11:35:03+01",
            "id": 1270,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Improve error message when finite basis correction fails",
            "updated_on": "2015-04-09 11:35:03.0565+01"
        },
        {
            "assignee": null,
            "content": "
Feedback from Beta tester Bjoern Winkler @ Frankfurt


In phonon calculations, there regularly is a warning:


Warning in parameters_validate: current value of ELEC_EIGENVALUE_TOL = 0.100000E-08eV is too large to achieve desired level of convergence of response properties. This may cause convergence failures and/or inaccuracy of results of PHONON+EFIELD calculations - recommend you use a smaller value, e.g. ELEC_EIGENVALUE_TOL = 0.212121E-10eV


Now, during job preparation, that values is changed anyhow.


Info: ELEC_EIGENVALUE_TOL modified from 0.1060606060606061E-06 eV to 0.1000000000000000E-08 eV


Can this not be set by default to some value which gets rid of the warning ?
",
            "content_updated_on": "2017-04-03 13:11:49+01",
            "created_on": "2017-01-03 16:45:06+00",
            "id": 1683,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Suppress regular warning from Phonons",
            "updated_on": "2017-04-03 13:11:49+01"
        },
        {
            "assignee": null,
            "content": "
I was looking at the SECD source code for the new custom parameters, and spotted a vulnerable case which will almost certainly fail.

%BLOCK SEDC_CUSTOM_PARAMS

allows the specification of SEDC parameters on a per-atom, not just a per-species basis. Using this is likely to violate symmetry, which will give unexpected (wrong) results.  There is currently no checking for  the consistency of the specified parameters with the supplied or generated symmetry.

Should we perhaps use the extended-species functionality for this instead as the relevant symmetry checking is already there?
",
            "content_updated_on": "2014-06-22 10:17:06.961959+01",
            "created_on": "2014-06-22 10:17:07+01",
            "id": 1046,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "SEDC_CUSTOM_PARAMS incompatible with symmetry",
            "updated_on": "2014-06-22 10:17:06.961959+01"
        },
        {
            "assignee": null,
            "content": "
Reported by a customer in Japan. Apparently this is a one-off, he has run other similar systems without a problem. This test has a suspicious line in Ferro_PhonDisp.castep:


%       SEDC PBC Initialization Warning:
%       One or more PBC setting arrays not properly allocated - PBC reset.


And the main errors are in std_err.txt


 


Fatal error in PMPI_Gather: Internal MPI error!, error stack:
PMPI_Gather(1303).........: MPI_Gather(sbuf=0x2abbbc22c010, scount=8252, MPI_DOUBLE_COMPLEX, rbuf=0x9e3f230, rcount=8252, MPI_DOUBLE_COMPLEX, root=
0, comm=0x84000005) failed
MPIR_Gather_impl(728).....:
MPIR_Gather(682)..........:
I_MPIR_Gather_intra(830)..: Failure during collective
I_MPIR_Gather_intra(814)..:
MPIR_Gather_advanced(1090):
MPIC_Send(358)............:
MPIC_Wait(282)............:
PMPIDI_CH3I_Progress(780).:


 
",
            "content_updated_on": "2017-07-27 13:48:27+01",
            "created_on": "2017-05-24 11:20:15+01",
            "id": 1738,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "DFT-D phonon failure with internal MPI error",
            "updated_on": "2017-07-27 13:48:27+01"
        },
        {
            "assignee": null,
            "content": "Attached run (taken as a continuation run) crashes with  divide by zero. Interesting enough the same run if run in one shot works fine and reaches the end without any problem...
Initially reported for 5.5 running on 2 nodes",
            "content_updated_on": "2011-09-20 18:24:38+01",
            "created_on": "2011-09-19 16:39:17+01",
            "id": 562,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Efield run crahes with integer  divide by zero",
            "updated_on": "2011-09-20 18:24:38+01"
        },
        {
            "assignee": null,
            "content": "
Someone very kindly ran the parameterization for the TS van der Waals correction for a number of XC functionals, getting the optimal scheme parameters into place in each case. See below for paper, table 1 is the interesting result.
I think it would be a good idea to add these to our codes – we just have to teach CASTEP about the numbers and maybe also let DMol3 know what the functionals are called in CASTEP, such that it can look up the correct values from the CASTEP library. There are a few new combinations that we don’t have yet, and our customers always love additional van der Waals corrections…https://arxiv.org/pdf/1704.00761.pdf


From the current list of functionals we’d add PBESOL, RPBE and PW91; also, BLYP value is slightly different from what we have now. 


One would need an update in parameters.F90 to allow new combinations (essentially allow TS for PBESOL, RPBE and PW91). 


Also mbd_disp_corr.f90 needs a similar change in this block (adding SR values for PBESOL, RPBE and PW91):


    ! set global_Sr for pairwise energy terms - uses TS value


    select case(mbdc_xc)


    case("PBE")


       global_Sr = 0.94_dp


    case("PBE0","PBE1PBE","HSE03","HSE06")


       global_Sr = 0.96_dp


    case("BLYP")


       global_Sr = 0.62_dp


    case("B3LYP","AM05")


       global_Sr = 0.84_dp


    case default


       call io_abort("MBDC Initialization ERROR! Requested functional is not implemented for many-body schemes.")


       return


    end select


Unless manybody needs more parameters (I think it does) in which case those functionals will remain unavailable for MBD
",
            "content_updated_on": "2017-08-08 15:40:02+01",
            "created_on": "2017-06-16 10:11:55+01",
            "id": 1741,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Add recently developed DFT-D parameters for TS scheme and PBESOL, RPBE, PW91 functionals",
            "updated_on": "2017-08-08 15:40:02+01"
        },
        {
            "assignee": null,
            "content": "
Attached run fails with the message about unacceptable symmetry breaking. The traceback is very strange, though, it doesn't make much sense.


Error in geometry_symm_check: unacceptable symmetry breaking


Current trace stack:


geom_symm_check


geom_get_forces


geom_precon_exp_initialize


geom_precon_initialize


geom_BFGS


geometry_optimise


castep


There is no call to geom_get_forces from geom_precon_exp_initialize ...


 
",
            "content_updated_on": "2018-04-10 12:17:01+01",
            "created_on": "2018-03-13 09:17:59+00",
            "id": 1817,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "EXP preconditioner breaks symmetry when optimizing urea",
            "updated_on": "2018-04-10 12:17:01+01"
        },
        {
            "assignee": null,
            "content": "
These features are currently triggered by devel_code settings; could we please move those to the mainstream set of input parameters?
",
            "content_updated_on": "2018-04-18 17:40:53+01",
            "created_on": "2018-04-18 17:40:53+01",
            "id": 1828,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Move DeltaSCF and MolPDOS functionality into proper parameters",
            "updated_on": "2018-04-18 17:40:53+01"
        },
        {
            "assignee": null,
            "content": "
Move the solver into Hamiltonian:
consult on the interface
- inc making it more similar to ham_diag
move other tasks from magres_utils into wave (&amp;amp; basis?)
",
            "content_updated_on": "2014-05-22 10:29:47+01",
            "created_on": "2011-12-21 17:53:39+00",
            "id": 630,
            "kind": "task"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "Move magres solver to Hamiltonian",
            "updated_on": "2014-05-22 10:29:47+01"
        },
        {
            "assignee": null,
            "content": "
As per discussion on 20th Dec meeting
",
            "content_updated_on": "2014-05-22 10:30:21+01",
            "created_on": "2011-12-21 17:54:34+00",
            "id": 631,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Make supercell keyword public",
            "updated_on": "2014-05-22 10:30:21+01"
        },
        {
            "assignee": null,
            "content": "Add a devel code to write out matrix elements into the castep file during a pectral run - so we can add this to the test suite.",
            "content_updated_on": "2011-12-21 17:51:10.642133+00",
            "created_on": "2011-12-21 17:51:10+00",
            "id": 629,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Test case for spectral",
            "updated_on": "2011-12-21 17:51:10.642133+00"
        },
        {
            "assignee": null,
            "content": "
Range of input files used to both test machine performance, and castep algorithmic developments.

Ideas included using supercell keyword to generate range of size.

Phil to coordinate and KR/JRY to send phonon/NMR examples.",
            "content_updated_on": "2011-12-21 18:00:43.074834+00",
            "created_on": "2011-12-21 18:00:43+00",
            "id": 632,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Benchmark suite",
            "updated_on": "2011-12-21 18:00:43.074834+00"
        },
        {
            "assignee": null,
            "content": "
The test Geometry/Si-GeomOpt/si2-tpsd segments after the latest big merge. We use TCM version plus Matt Probert's version of geometry.f90. The end of the file is:


 +------------+-------------+-------------+-----------------+ &lt;-- min TPSD
 |    Step    |   lambda    |   F.delta'  |    enthalpy     | &lt;-- min TPSD
 +------------+-------------+-------------+-----------------+ &lt;-- min TPSD
 |  previous  |    0.000000 |    0.142586 |     -216.985635 | &lt;-- min TPSD
 | trial step |    0.184187 |    0.140587 |     -216.986185 | &lt;-- min TPSD
 +------------+-------------+-------------+-----------------+ &lt;-- min TPSD


 TPSD: finished iteration     1 with enthalpy= -2.16986185E+002 eV


 +-----------+-----------------+-----------------+------------+-----+ &lt;-- TPSD
 | Parameter |      value      |    tolerance    |    units   | OK? | &lt;-- TPSD
 +-----------+-----------------+-----------------+------------+-----+ &lt;-- TPSD
 |  dE/ion   |   2.751631E-004 |   2.000000E-005 |         eV | No  | &lt;-- TPSD
 |  |F|max   |   6.482033E-001 |   5.000000E-002 |       eV/A | No  | &lt;-- TPSD
 |  |dR|max  |   4.214827E-004 |   1.000000E-003 |          A | Yes | &lt;-- TPSD
 +-----------+-----------------+-----------------+------------+-----+ &lt;-- TPSD


forrtl: severe (174): SIGSEGV, segmentation fault occurred
",
            "content_updated_on": "2017-08-02 21:37:30+01",
            "created_on": "2017-07-26 13:41:18+01",
            "id": 1757,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "TPSD test segments in the latest build (25 July 2017)",
            "updated_on": "2017-08-02 21:37:30+01"
        },
        {
            "assignee": null,
            "content": "
All the tests in Excitations/Si2-spectral hang on 2 or 4 cores (k-point parallel) but happily run on 1 or 3 (G-vector parallel). 
",
            "content_updated_on": "2017-08-15 17:47:09+01",
            "created_on": "2017-07-26 13:46:50+01",
            "id": 1758,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Tests from Excitations hang in parallel (build 25 July 2017)",
            "updated_on": "2017-08-15 17:47:09+01"
        },
        {
            "assignee": null,
            "content": "The attached calculation from Abhijit Chatterjee attempts a calculation
where the electron count is odd and fix_occupancy=T.  Unfortunately
this has the appearance of a successful calculation, although the results
are of course nonsense.



I have seen many calculations over the years fail where a metallic system is
treated with fix_occupancy=T, and am coming to the conclusion that this 
parameter is very dangerous!

We can't catch all such cases, but can we include a test for odd nelectrons with fix_occupancy=T and perform an error abort?
",
            "content_updated_on": "2012-08-28 13:40:54+01",
            "created_on": "2011-05-10 16:15:45+01",
            "id": 527,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Calculation with odd electron count apparently succeeds with fix_occupancy=T",
            "updated_on": "2012-08-28 13:40:54+01"
        },
        {
            "assignee": null,
            "content": "
Hi there,
for some reason it seems impossible to avoid the follwoing error message... any idea what can be done about it? The calculation involves a zeolite strucutre with and the strucuture optimisation works well... but it just doesn't want to work with CASTEP NMR.
Error: hamiltonian_diagonalise in magres_efg_calc_aug not converged
Current trace stack:
magres_efg_calc_aug
magres_efg_calculate
magres_run
castep
Thanks for your help in advance.
Best wishes,
Eike
",
            "content_updated_on": "2016-09-06 15:46:19+01",
            "created_on": "2012-02-01 10:42:55+00",
            "id": 688,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Error: hamiltonian_diagonalise in magres_efg_calc_aug not converged",
            "updated_on": "2016-09-06 15:46:19+01"
        },
        {
            "assignee": null,
            "content": "
Hi,


I'm performing ELNES calculation for a system with multiple O atoms in, and I need to produce the spectra for each O as I need to make an average over the whole unit cell to compare with an experiment produced by a collaborator. At the moment the best way of doing this is to produce a script and then run each simulation independently.


I was wondering whether it would be possible to implement a way that having provided  CASTEP with the two pseudopotentials to then tell it to cycle over all the atoms of interest making each one the excited one in turn rather than having to run each individually. 


Many Thanks,


Rob Lawrence
",
            "content_updated_on": "2017-12-20 11:59:35+00",
            "created_on": "2016-08-17 14:49:29+01",
            "id": 1617,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Multiple core hole sites in an EELS calculation.",
            "updated_on": "2017-12-20 11:59:35+00"
        },
        {
            "assignee": null,
            "content": "
The recent change from Stewart (see below) has broken some of the OTFG runs, where the input string is longer than 80 characters. There is no good reason to assume such limit - as it is, OTF definition gets cut in a strange place.


7284:1d94c726794b Stewart Clark &lt;s.j.clark@durham.ac.uk&gt; Allowed fractions and simple arithmetic/trig functions in block_data read by io_freeform_block.
",
            "content_updated_on": "2017-10-12 14:30:15+01",
            "created_on": "2017-07-27 11:30:03+01",
            "id": 1760,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "io_parse_arithmetic shouldn't assume 80 character limit for the string",
            "updated_on": "2017-10-12 14:30:15+01"
        },
        {
            "assignee": null,
            "content": "This bug is a belated report of a longstanding saga.  The attached testcase is a standalone distillation by Chris Armstrong of a failure which occurred in a long run after a basis-re-initialisation.  This fails ONLY when the Sys V stared memory is used and only on some machines (eg the STFC cluster, SCARF).

The symptoms are simply that after many instances of giving the right answer, the FFT stops and gives the wrong answer.

This bug replaces #625
",
            "content_updated_on": "2012-09-20 17:19:31.04623+01",
            "created_on": "2012-09-20 17:19:33+01",
            "id": 779,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "FFT with num_proc_in_smp &gt; 1 sometimes fails on some machines",
            "updated_on": "2012-09-20 17:19:31.04623+01"
        },
        {
            "assignee": null,
            "content": "
The output in .castep has a minor formatting problem for f-states:


 


     Pu     1      Fyyy         0.621     0.033     0.588


     Pu     1      Fzzz         0.835     0.017     0.818


     Pu     1      Fxyz         0.742     0.009     0.733


     Pu     1      Fz(xx-yy     0.942     0.002     0.939


     Pu     1      Fy(zz-xx     0.844     0.015     0.829


     Pu     1      Fx(yy-zz     0.841     0.015     0.827


     Pu     1      Dzz          0.183     0.141     0.042


     Pu     1      Dzy          0.115     0.057     0.058


     Pu     1      Dzx          0.186     0.051     0.135


     Pu     1      Dxx-yy       0.133     0.103     0.030


     Pu     1      Dxy          0.446     0.244     0.202


 


It looks like one more symbol needs to be added, to close those brackets
",
            "content_updated_on": "2017-08-03 15:14:33+01",
            "created_on": "2017-08-02 14:06:23+01",
            "id": 1761,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Slight misalignment in reporting of f-orbital PDOS charges",
            "updated_on": "2017-08-03 15:14:33+01"
        },
        {
            "assignee": null,
            "content": "
we now have a few requests for Becke-Johnson (J Chem Phys 124 221101 (2006)) and modified BJ (PRL 102 226401 (2009)) functionals from people who believe this would give better band gaps.
",
            "content_updated_on": "2017-12-20 11:47:09+00",
            "created_on": "2012-03-13 10:53:08+00",
            "id": 715,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Request for Becke-Johnson and Tran-Blaha functionals",
            "updated_on": "2017-12-20 11:47:09+00"
        },
        {
            "assignee": null,
            "content": "
The latest version produces different geometry from the 2017 R2 release, see attached
",
            "content_updated_on": "2017-08-07 17:36:20+01",
            "created_on": "2017-08-07 10:28:00+01",
            "id": 1763,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Si2-cellopt-fix_vol: fixed volume optimization converges to a slightly different answer",
            "updated_on": "2017-08-07 17:36:20+01"
        },
        {
            "assignee": null,
            "content": "
Attempting to read pseudopotential strings from an external library file *.otfglib fails in parallel, with IO_ABORT from ione or more of the non-root processes failing to parse the configuration.


As only the root node should be generating pseudopotentials in any case, this looks at first sight like a simple case of an if statement followed by an MPI broadcast missing.


Assigned initially to Chris, though the fault could also be in cell.f90.
",
            "content_updated_on": "2017-10-20 12:24:05+01",
            "created_on": "2017-08-09 12:32:36+01",
            "id": 1765,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "External ".otfglib" pseudo library fails in parallel",
            "updated_on": "2017-10-20 12:24:05+01"
        },
        {
            "assignee": null,
            "content": "
Spectral calculations fail in parallel if the distribution is explicitly selected by


%BLOCK devel_code
  PARALLEL:GVECTOR=19:ENDPARALLEL
%ENDBLOCK devel_code


(as may be necessary to limit k-point parallelism to keep memory requirements within sane limits).


Actually the initial SCF and spectral calculations do use the requested distribution and succeed, but the parallel distribution reset at the end of spectral fails to restore the original distribution.  This causes a failure (IO_abort or segfault)  in the subsequent force calculation after leaving spectral.


I have a fix for this which I will check in soon.


P.S. note to self/all. Pure k-point parallelism is a disaster in terms of memory requirement, whereas mixed can use an order of magnitude less per process.  Perhaps we should change the behaviour of comms_parallel_strategy to favour mixed parallelism, adapted to multicore.  Ian Bush's FreeIPC library can determine the number of cores on a shared memory node, which could be used to favour gvector up to this limit.


P.P.S. We really need to fix k-point parallelism to use less memory too!


 
",
            "content_updated_on": "2017-10-20 12:28:17+01",
            "created_on": "2017-08-09 12:42:16+01",
            "id": 1767,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Spectral calculation fails if explicit gvector count is selected by devel_code.",
            "updated_on": "2017-10-20 12:28:17+01"
        },
        {
            "assignee": null,
            "content": "
Which is because in the method 
popn_calculate_populations
not all printing is under if(on_root) . It looks it is enough to change line  2619 form 
    if (current_params%popn_write=='ENHANCED') then
to 
    if (on_root.and.current_params%popn_write=='ENHANCED') then
 


to fix it
",
            "content_updated_on": "2017-08-14 12:23:07+01",
            "created_on": "2017-08-14 11:41:46+01",
            "id": 1772,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PopAn output for mpi job is also printed into the std_err.txt",
            "updated_on": "2017-08-14 12:23:07+01"
        },
        {
            "assignee": null,
            "content": "It would be nice to have effective mass evaluated and reported as part of band structure calculations.",
            "content_updated_on": "2013-05-07 09:59:13+01",
            "created_on": "2012-07-03 09:20:13+01",
            "id": 750,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Calculate effective mass",
            "updated_on": "2013-05-07 09:59:13+01"
        },
        {
            "assignee": null,
            "content": "Some parallel output and error messages still refer, misleadingly, to a process as a &amp;quot;node&amp;quot;.  The code should be combed to find and change these.

",
            "content_updated_on": "2013-04-30 18:18:50+01",
            "created_on": "2013-04-02 09:46:16+01",
            "id": 878,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Correct use of word &quot;node&quot; in all parallel messages",
            "updated_on": "2013-04-30 18:18:50+01"
        },
        {
            "assignee": null,
            "content": "
The second cutoff energy calculation produces NaN and stays at NaN.
",
            "content_updated_on": "2016-09-01 09:30:50+01",
            "created_on": "2015-05-22 09:34:05+01",
            "id": 1291,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "FBSC calculation for AgCl fails with NaN when using spin-orbit coupling",
            "updated_on": "2016-09-01 09:30:50+01"
        },
        {
            "assignee": null,
            "content": "
Using %BLOCK POSITIONS_NOISE on a cell file with a hexagonal unit cell discards the actual cell vectors and replaces them with a cubic cell of the original a parameter.  Completely changing the structure counts as unexpected behaviour.


This is a regression from 16.1.2 which at least aborted with the mysterious 


Error in ga_mutate: attempt to fix |b|=|c|, but |b| /= |c|
Current trace stack:
cell_random_noise
cell_read
castep
The attached test case demonstrates the effect on a dryrun.


 
",
            "content_updated_on": "2017-08-20 12:06:09+01",
            "created_on": "2017-08-20 12:06:09+01",
            "id": 1778,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "%BLOCK positions_noise garbles cell vectors",
            "updated_on": "2017-08-20 12:06:09+01"
        },
        {
            "assignee": null,
            "content": "
It would be nice to have a single command to fix all the ions of a particular species in the ionic_constraints block, or at least set a set of constraints to apply to all ions of a particular species.

e.g.

%block ionic_constraints

Si 1.0 0.0 0.0

Si 0.0 1.0 0.0

Si 0.0 0.0 1.0

%endblock ionic_constraints

to fix all silicon while allowing other ions to vary.
",
            "content_updated_on": "2015-07-15 12:58:36+01",
            "created_on": "2015-07-10 18:46:50+01",
            "id": 1322,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Single command to fix constraints for species",
            "updated_on": "2015-07-15 12:58:36+01"
        },
        {
            "assignee": null,
            "content": "
One of our regular regression tests segments in the build 25 July 2017. The way it's run SmO has to be run first, check file copied into SmO_PhonDOS, and the latter run as continuation. This now causes segfault very early on:


 Pseudo atomic calculation performed for O 2s2 2p4


 Converged in 22 iterations to a total energy of -429.1639 eV



 Pseudo atomic calculation performed for Sm 4f6 5s2 5p6 6s2


 Converged in 43 iterations to a total energy of -2198.6964 eV


forrtl: severe (174): SIGSEGV, segmentation fault occurred


 


The problem seems to be Hubbard alpha; debug build produces the following trace:


forrtl: severe (408): fort: (2): Subscript #1 of the array CHANNEL_L has value 8 which is greater than the upper bound of 4 Image PC Routine Line Source castepexe.exe 04106491 Unknown Unknown Unknown castepexe.exe 02E7E91F _HUBBARD_mp_HUBBA 770 hubbard.f90 castepexe.exe 0337D23B _HAMILTONIAN_mp_H 2165 hamiltonian.f90 castepexe.exe 033654BD _HAMILTONIAN_mp_H 1190 hamiltonian.f90 castepexe.exe 0278FF34 _ELECTRONIC_mp_EL 496 electronic.f90 castepexe.exe 01CD2910 _PHONON_mp_PHONON 4132 phonon.f90 castepexe.exe 01C147EE _PHONON_mp_PHONON 666 phonon.f90 castepexe.exe 00E37C9C _MAIN__ 683 castep.f90 castepexe.exe 049218BF Unknown Unknown Unknown castepexe.exe 04AB2C7A Unknown Unknown Unknown castepexe.exe 04AB2DCD Unknown Unknown Unknown kernel32.dll 75F3336A Unknown Unknown Unknown ntdll.dll 77889902 Unknown Unknown Unknown ntdll.dll 778898D5 Unknown Unknown Unknown
",
            "content_updated_on": "2017-10-12 14:26:55+01",
            "created_on": "2017-07-26 13:54:06+01",
            "id": 1759,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "LDA+U test segments in phonon calculation",
            "updated_on": "2017-10-12 14:26:55+01"
        },
        {
            "assignee": null,
            "content": "
Parameters_reread sometimes adjusts convergence tolerances and other parameter values for consistency and safety.

In general it does not report that it has done this.  Most of the time this is perfectly OK, as the effect is signalled in the "parameters_output" report.  But there is one circimstance in which this can get a user into trouble, namely when a parameter change on a continuation results in valid data from a checkpoint being discarded.  In that case the puzzled end user is left with a message that the wavefunction data has been marked as unconverged. (See account at end of this report).

I suggest changes which could result in data invalidation be reported as a warning. This could either be done in "parameters_reread" or in "model_check_dependencies".  Based on the general principle of user transparency I favour not restricting the report to the continuation and therefore adding the warnings to parameters_reread.  The parameter changes affected are

elec_energy_tol,  line 5527-5540, 6545-6551

elec_eigenvalue_tol line 5558, 6563

efermi_tol line 5619, 7419

md_ion_t line 6204

 

If the warning message contains the changed value (to sufficient precision) then the user can add the old value back into the .param file for the continuation, to allow the run to proceed.  I think this is sufficient remedial action.

 

More detailed report on failure case:

This got me into trouble, in a job which attempted to run a "task=Thermodynamics" continuation from a "phonon+efield" checkpoint file, unexpectedly invalidated the wavefunction data. This discarded the results of the run which recommenced from scratch.
On investigation this turned out to be a consequence of the sequence of steps below
Now this is a pretty rare combination of circumstances, but the reason I think it significant is that the consequences are pretty user-unfriendly - the code prints no warning and gives no hint of *why* the wavefunctions, phonons etc were all discarded and the expensive calculation restarted from the beginning.  I can think of 2 courses of action to help, though it may be that this can be considered a sufficiently rare issue that no action is needed.
a. add further logic (ouch) to the tests
   "if (keyword_modified(ikey_task))"
   to only change parameters if the task is changed from a
   non-phonon-like task to a phonon-like task, and not between one
   phonon-like task and another.
b. Perhaps parameters_reread should print a warning in this case and
   other where it auto-modifies a significant value upon continuation.
   This would at least give the user some help at run-time to deal with
   the issue.
I think that option (b) is more compelling, as the logic for (a) could be nasty and prone to introduce more errors and edge cases.
The exact sequence of logic causing the issue is.
1. The checkpoint was written with CASTEP 7.0.2 and the attempted
   restart with a task change used 8.0.
2. The task was changed from "phonon+efield" to "thermodynamics".
3. Consequently the logic at line 5559 in "parameters_read" reset
   "elec_energy_tol" to the default - which in fact was not a change
   to the value restored from the checkpoint.
4. The setting of   keyword_modified(ikey_elec_energy_tol)=.true.
   had some knock-on consequences, particularly in lines 5582 and
   5643 where elec_eigenvalue_tol and efermi_tol were also reset.
5. These would have been harmless null changes except that the default
   of efermi_tol changed between 7.0 and 8.0, so this parameter
   suffered a large change.
6. Consequently "model_check_dependencies" invalidated the
   wavefunctions.
7. Neither parameters_reread nor model_check_continuation print any
   warning of WHICH parameter changed causing frustration and requiring
   resort to debugging the source to pin down the problem.

 
",
            "content_updated_on": "2015-05-29 12:37:08.332399+01",
            "created_on": "2015-05-29 12:37:08+01",
            "id": 1294,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Parameters_reread fails to report when it adjusts a tolerance value",
            "updated_on": "2015-05-29 12:37:08.332399+01"
        },
        {
            "assignee": null,
            "content": "Would it be possible to implement spin-polarised linear response phonon calculations?
I hope this is the appropriate place for this request.

Many thanks,
Patrick",
            "content_updated_on": "2013-08-19 16:28:53+01",
            "created_on": "2013-07-26 14:48:34+01",
            "id": 932,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Spin-polarised LR calc",
            "updated_on": "2013-08-19 16:28:53+01"
        },
        {
            "assignee": null,
            "content": "There are multiple requests for a feature like the one provided by Thonhauser et al, Phys Rev B76 125112 (2007). It might be enough to provide a post-SCF option as in M. Dion et al., Phys. Rev. Lett. 92, 246401 (2004); 95, 109902(E)
(2005) although I don't see how it could be sufficient to modify energies but not forces/stresses.",
            "content_updated_on": "2013-09-25 09:59:09+01",
            "created_on": "2010-03-03 12:57:47+00",
            "id": 236,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Implement Thonhauser (2007) vdW functional",
            "updated_on": "2013-09-25 09:59:09+01"
        },
        {
            "assignee": null,
            "content": "
This is for some reason hardwired in the code


 


 
",
            "content_updated_on": "2016-09-02 08:41:27+01",
            "created_on": "2015-06-10 11:59:34+01",
            "id": 1304,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SPECTRAL module writes zero instead of the actual Fermi energy",
            "updated_on": "2016-09-02 08:41:27+01"
        },
        {
            "assignee": null,
            "content": "
Another regression in 17.2, which I didn't spot before the 17.2.1 release.


Checkpointing from a supercell phonon calculation erroneously writes a model containing the supercell, instead of the primitive cell model which it ought.  It is not possible to restart from this checkpoint.


 
",
            "content_updated_on": "2017-08-25 18:50:17+01",
            "created_on": "2017-08-09 12:55:28+01",
            "id": 1768,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Checkpointing from supercell phonon calculation fails in 17.2",
            "updated_on": "2017-08-25 18:50:17+01"
        },
        {
            "assignee": null,
            "content": "As pointed out to me by Edgar Engel, the WRITE_ORBITALS keyword 
has no effect - the .orbitals file is written whatever its value. 

",
            "content_updated_on": "2013-10-15 08:09:31+01",
            "created_on": "2013-10-14 17:49:09+01",
            "id": 952,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Write_orbitals keyword is not honoured",
            "updated_on": "2013-10-15 08:09:31+01"
        },
        {
            "assignee": null,
            "content": "It would be nice if we had along with continuation keyword an optional continuation, which would decide what to do depending on the 
presence and content of the continuation file.
Something like this:
if file is absent - do normal run instead of complaining
if it contains contradicting information: try reuse
it or do continuation if everything is fine....
",
            "content_updated_on": "2013-10-15 08:16:25+01",
            "created_on": "2009-11-03 15:26:43+00",
            "id": 200,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Would be nice to have optional continuation",
            "updated_on": "2013-10-15 08:16:25+01"
        },
        {
            "assignee": null,
            "content": "
In the SCF loop in electronic.f90, CASTEP checks if a calculation is converged. If the user has specified an elec_force_tol, the forces are calculated and are also checked for convergence. However, this is done independently of whether the energy tolerance has been reached. If that is not the case, then the force calculation is wasted as it is irrelevant for the outcome of the convergence check.
This could be improved by checking for electronic convergence before calculating forces. A patch that implements this change is attached.
Hope that helps,
Peter
",
            "content_updated_on": "2014-08-24 11:37:01+01",
            "created_on": "2013-12-05 12:10:27+00",
            "id": 963,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "In SCF loop with check_forces, calculate forces only when converged",
            "updated_on": "2014-08-24 11:37:01+01"
        },
        {
            "assignee": null,
            "content": "
Hi,
there's currently a conflict between use of LDA+U and Spectral task. I understand that there is a fundamental theoretical problem with calculating matrix elements for solutions of the Hubbard Hamiltonian, but currently, running this kind of calculation produces a crash after system convergence with an error message that is hardly informative. My suggestions:
SHORT TERM - add a check fase during the dryrun that identifies the conflict between the &amp;quot;Spectral&amp;quot; task and the existence of a non zero Hubbard U, and quits the calculation immediately with a meaningful error message.
LONG TERM - implement the Spectral task with Hubbard U for those parts that are not affected by matrix elements - DOS, PDOS etc.
",
            "content_updated_on": "2014-08-24 11:37:24+01",
            "created_on": "2013-12-09 17:09:42+00",
            "id": 964,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Conflict between LDA+U and Spectral task",
            "updated_on": "2014-08-24 11:37:24+01"
        },
        {
            "assignee": null,
            "content": "
For the sake of the record, reporting this bug after the fix checked in.


This affects phonon supercell calculations where the supercell vectors break the symmetry. In that case the set of k-points generated from a SUPERCELL_KPOINT_MP_GRID or SUPERCELL_KPOINT_MP_DENSITY were wrong.


The error was in the code in cell_read, which attempted the usual procedure of generating a full set of k-points, and using symmetry to reduce to the IBZ. Unfortunately that code assumed the conventional cell input set of symmetry operations. This is a tricky case for cell_read, as unlike all the other k-point sets, it mush generate the sampling in a different cell from the input cell.


Bizarrely on the input testcase the number of k-points generated for the supercell was 7 in CASTEP 17.2 and 2 in CASTEP 18, whereas it ought to be 18.  Even more bizarelly the change in behaviour occurred on an unrelated checkin - the update of constants to CODATA2014.


Fixed by code change.


 
",
            "content_updated_on": "2017-09-21 18:19:14+01",
            "created_on": "2017-09-21 15:42:33+01",
            "id": 1785,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon supercell kpoints wrong for symmetry-breaking supercell",
            "updated_on": "2017-09-21 18:19:14+01"
        },
        {
            "assignee": null,
            "content": "
Our customers found a system which does not want to do TDDFT, I made it a bit smaller but actually is from them....
",
            "content_updated_on": "2017-10-09 15:51:33+01",
            "created_on": "2017-10-06 17:34:00+01",
            "id": 1788,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Error in tddft_orthogonalise_to_lower: File for tddft state missing for search_dir orthog",
            "updated_on": "2017-10-09 15:51:33+01"
        },
        {
            "assignee": null,
            "content": "From the &amp;quot;coders&amp;quot; mailing list

This is not the first time such a request has come up.  As we
presumably wish to encourage users to perform convergence
testing, I have a suggestion.  How about two new tasks?

task : cutoff_test

   perform a series of singlepoint runs using FINITE_BASIS_NPOINTS
   and FINITE_BASIS_SPACING, printing the force and stress at each
   cutoff energy.  Better still, have some new variables to define the
   range.

task : kpoint_test

   perform a series of singlepoint runs for a range of MP grid
   sizes/spacings.  Re-using the density could make this reasonably
   efficient if elec_method=DM is used. (I assume that wave_reassign
   would not help in this case??)

Keith
-------------------------------------------------------------------------
I don't think this is quite what we want as this will fix the grids, which 
isn't the same as if the user performed a series of single-point energy 
runs. However I agree with the spirit of the suggestions.


&amp;gt; task : kpoint_test
[snip",
            "content_updated_on": "2009-02-11 17:17:12+00",
            "created_on": "2008-10-14 14:12:08+01",
            "id": 67,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "New tasks CUTOFF_TEST and KPOINT_TEST",
            "updated_on": "2009-02-11 17:17:12+00"
        },
        {
            "assignee": null,
            "content": "
Following yet another conversation on this topic in the pub, I thought
I would record this thought for some consideration.
It would greatly facilitate converged calculations if the OTF generator
were to establish an approximate FINE_GMAX. Perhaps this could be done
from the tail integral of the G-space representation of the atomic
augmentation density in the reference or test atomic configuration.
A little heuristics ought to establish an appropriate COARSE/MEDIUM/FINE
levels which could be stored in the ps defined type (and a new field in the
.usp file) and used for the
default when initialising the basis.
It would also be useful to retroactively generate FINE_GMAX values for
the old .usp libraries - though this would be a bit of a dull chore.
",
            "content_updated_on": "2014-05-22 10:26:05+01",
            "created_on": "2009-08-24 06:31:22+01",
            "id": 181,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "OTF pseudopotential generation could compute specific FINE_GMAX ",
            "updated_on": "2014-05-22 10:26:05+01"
        },
        {
            "assignee": null,
            "content": "

For example, when The following string was given
Ce 2=-0.1|1.8|1.8|1.2|10.3|12.1|13.6|43UU:50U:60U:51U1.8U1.8{4f1,5s2,5p6,5d1,6s2}[4f1,5s2,5p6,5d1,6s2",
            "content_updated_on": "2016-09-19 12:44:13+01",
            "created_on": "2009-08-30 09:56:19+01",
            "id": 183,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "OTFG eigenvalue test and initial pseuo atomic calculation do not honour the input string ",
            "updated_on": "2016-09-19 12:44:13+01"
        },
        {
            "assignee": null,
            "content": "
And we should for the current release suppress printout with e.g.


if(current_cell%num_symmetry_operations.gt.0) then


...


 
",
            "content_updated_on": "2017-10-12 14:56:14+01",
            "created_on": "2017-10-12 14:54:53+01",
            "id": 1790,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Orbital-resolved population analysis results is not implemented non-P1 symmetry ",
            "updated_on": "2017-10-12 14:56:14+01"
        },
        {
            "assignee": null,
            "content": "
It seems that P1 and non-P1 results for the same system are quite different. As Sasha says, for cubic systems we expect e.g. pp sub-block to be the unity matrix. It is obviously not the case with e.g. bcc AF Fe :


Orbital Populations


---------------------------------------------------------------


Ion Atom Orbital Up Down Spin


---------------------------------------------------------------


Fe 1 Dzz 0.488 0.958 -0.470


Fe 1 Dzy 0.382 0.808 -0.426


Fe 1 Dzx 0.544 0.812 -0.269


Fe 1 Dxx-yy 0.277 0.823 -0.547


Fe 1 Dxy 0.726 0.825 -0.099


Fe 1 S 0.286 0.423 -0.137


Fe 1 Px 0.059 0.206 -0.147


Fe 1 Py 0.125 0.167 -0.042


Fe 1 Pz 0.038 0.052 -0.015


Fe 2 Dzz 0.958 0.488 0.470


Fe 2 Dzy 0.808 0.382 0.426


Fe 2 Dzx 0.812 0.544 0.268


Fe 2 Dxx-yy 0.823 0.277 0.546


Fe 2 Dxy 0.825 0.726 0.099


Fe 2 S 0.423 0.286 0.137


Fe 2 Px 0.206 0.059 0.147


Fe 2 Py 0.167 0.125 0.042


Fe 2 Pz 0.052 0.038 0.015


---------------------------------------------------------------


Total: 8.000 8.000 -0.001


MS 2018 will use GUI file writer to set PopAn output to non-orbital if there is symmetry. In future it would be good to figure out what is the right thing for symmetrical calculations
",
            "content_updated_on": "2017-10-12 23:47:19+01",
            "created_on": "2017-10-12 14:53:39+01",
            "id": 1789,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Orbital-resolved population analysis results are suspect for non-P1 symmetry",
            "updated_on": "2017-10-12 23:47:19+01"
        },
        {
            "assignee": null,
            "content": "
Each task-oriented module should have a subroutine to perform cross-checks between the various possible input parameters, which can be called from top-level code (e.g. in castep.f90). This will avoid parameters needing to know all the allowed and forbidden parameter combinations for each task.
",
            "content_updated_on": "2015-03-17 15:51:55.610075+00",
            "created_on": "2015-03-17 15:51:55+00",
            "id": 1252,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Task and parameter cross-checks",
            "updated_on": "2015-03-17 15:51:55.610075+00"
        },
        {
            "assignee": null,
            "content": "
The partial DOS of Ta (in TaFeSb) are almost non-existent when computed with ultrasoft pseudopotentials. (example files TaFeSb-usp.zip) This bug is not present when NCP17 potentials are used. (example files TaFeSb-NCP17.zip)
",
            "content_updated_on": "2017-12-20 14:34:49+00",
            "created_on": "2017-11-03 13:48:50+00",
            "id": 1792,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Incorrect Ta DOS when calculated with ultrasoft pseudopotentials",
            "updated_on": "2017-12-20 14:34:49+00"
        },
        {
            "assignee": null,
            "content": "
Please add support for picometers to the Length_Unit options.
",
            "content_updated_on": "2017-04-03 23:15:00+01",
            "created_on": "2015-04-13 14:54:10+01",
            "id": 1271,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Support for Length_Unit Picometer",
            "updated_on": "2017-04-03 23:15:00+01"
        },
        {
            "assignee": null,
            "content": "
There is n attached example that ran happily on 1 and 2 threads, but failed on 4 threads with the following:

	Fatal error in PMPI_Bcast: Message truncated, error stack:

	PMPI_Bcast(2112)....................: MPI_Bcast(buf=0x7fffc24e7eb8, count=1, MPI_INTEGER, root=0, comm=0x84000005) failed

	MPIR_Bcast_impl(1670)...............: 

	I_MPIR_Bcast_intra(1887)............: Failure during collective

	MPIR_Bcast_intra(1461)..............: 

	MPIR_Bcast_binomial(147)............: 

	MPIC_Recv(108)......................: 

	MPIDI_CH3U_Request_unpack_uebuf(618): Message truncated; 8 bytes received but buffer size is 4

 
",
            "content_updated_on": "2015-03-17 14:05:22+00",
            "created_on": "2015-01-07 17:40:31+00",
            "id": 1212,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "open",
            "title": "J-coupling calculation (see attached) failed in parallel",
            "updated_on": "2015-03-17 14:05:22+00"
        },
        {
            "assignee": null,
            "content": "
Attached calculation fails with:

 

Attached is a folder produced by our GUI. The actual J-coupling run fails with:

	
		Starting Calculation of J-coupling Spin-dipole and Fermi-contact|&lt;-- NMR Starting k-point: 1 of 1 on this node |&lt;-- NMR Starting k-point: 1 of 1 on this node |&lt;-- NMR Error: ion_augment_charge_first_order_jc_nospin_kp : nspins /= 1 Current trace stack: ion_augment_charge_first_order_jc_nospin_kp magres_first_order_den magres_jcoupling_sc_solve magres_jcoupling_spin_total magres_jcoupling_spin magres_run castep


 
",
            "content_updated_on": "2015-03-17 11:23:11+00",
            "created_on": "2015-02-18 16:45:47+00",
            "id": 1226,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "J-coupling calculation failed with "Error: ion_augment_charge_first_order_jc_nospin_kp : nspins /= 1"",
            "updated_on": "2015-03-17 11:23:11+00"
        },
        {
            "assignee": null,
            "content": "From Peter Haynes: 

If I specify some random phonon k-points using %BLOCK PHONON_KPOINT_LIST rather than PHONON_KPOINT_MP_* then CASTEP halts in the interpolation with the following error:

Invalid phonon MP grid in phonon_recip_to_real
Current trace stack:
 phonon_recip_to_real
 phonon_calculate
 castep


-------------------------------------------------------------------
It appears that cell_detect_MP is failing to find a grid for the
single k-point (0.25,0.25,0.25), although this point is generated with

 KPOINT_MP_GRID 1 1 1
 KPOINT_MP_OFFSET 0.25 0.25 0.25

This applies to electronic as well as phonon k-points.
",
            "content_updated_on": "2013-03-10 14:08:26+00",
            "created_on": "2011-03-15 16:20:43+00",
            "id": 506,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "cell_detect_MP fails to detect 1x1x1 grid offset by 1/4,1/4,1/4 ",
            "updated_on": "2013-03-10 14:08:26+00"
        },
        {
            "assignee": null,
            "content": "Sometimes in a &amp;quot;difficult&amp;quot; optimization in the case of a mixture of strong and weak bonds (eg a H-bonded system like ice) the BFGS will take a large trial step,
which results in an SCF convergence failure.

In that case the run aborts, writing a checkpoint containing the bad geometry (the run aborted before this poor trial step could be backed out).  And the
optimization must be restarted from scratch as the BFGS history and optimization is lost.

The failure handling logic could probably be improved, eg it might be better NOT to save the checkpoint for a trial step if there is a history and a &amp;quot;good&amp;quot; one has been recently written.  The aim ought to be to leave behind a best attempt at a &amp;quot;recoverable&amp;quot; checkpoint file.

The attached example is not a good test case, as something else is going catastropically wrong with the optimization, but it does illustrate the point.  
If I come across a better example I will add it, but this report is really a &amp;quot;sub-optimal failure handing&amp;quot; case, and could be fixed without one.
",
            "content_updated_on": "2012-12-28 14:10:28.248946+00",
            "created_on": "2012-12-28 14:10:28+00",
            "id": 835,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "SCF failure during geometry optimization writes bad checkpoint",
            "updated_on": "2012-12-28 14:10:28.248946+00"
        },
        {
            "assignee": null,
            "content": "
We decided at or around the time of Codefest 2015 to rationalize the units handling for spin values.


I think the output units in the .castep and input in .param are done, which leaves the specification of initial spins in the .cell file still outstanding.
",
            "content_updated_on": "2015-10-13 16:58:54+01",
            "created_on": "2015-10-13 16:58:54+01",
            "id": 1390,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Add physical input units for spin initialization",
            "updated_on": "2015-10-13 16:58:54+01"
        },
        {
            "assignee": null,
            "content": "
When one specifies multiple Hubbard U for same species but for symmetry unique atoms, using the format of BLOCK HUBBARD_U in the cell file for example as:

%BLOCK HUBBARD_U
Mn 1 d: 3.500000000000000
Mn 2 d: 3.500000000000000
Mn 3 d: 2.500000000000000
Mn 4 d: 2.500000000000000
%ENDBLOCK HUBBARD_U

However, the actual Hubbard U used in the LDA+U calculation with this cell file is:

Mn 1 0.00000 0.00000 2.50000 0.00000
Mn 2 0.00000 0.00000 2.50000 0.00000
Mn 3 0.00000 0.00000 2.50000 0.00000
Mn 4 0.00000 0.00000 2.50000 0.00000

So, the same Hubbard U is used for same species.

The desired values are used when the following format of BLOCK HUBBARD_U is used:

%BLOCK HUBBARD_U
Mn:1 1 d: 3.500000000000000
Mn:1 2 d: 3.500000000000000
Mn:2 3 d: 2.500000000000000
Mn:2 4 d: 2.500000000000000
%ENDBLOCK HUBBARD_U

It looks like a server bug; we can work around it by using labels as in the last example above, but probably CASTEP should accept that the U values are per atom, not per species. This functionality is needed for say mixed valence compounds; in other words, setting different U on atoms with different chemical environment is a normal requirement. 
",
            "content_updated_on": "2015-07-15 13:05:16+01",
            "created_on": "2015-03-19 09:23:35+00",
            "id": 1253,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Multiple Hubbard U for same species but symmetry unique atoms are not accepted",
            "updated_on": "2015-07-15 13:05:16+01"
        },
        {
            "assignee": null,
            "content": "
The k-point reduction algorithm could fail in cases where the simulation cell vectors form a very skewed cell.

This could manifest in a phonon calculation with an abort:

   Error in secondd_kpoint_strict_superset: irreducible set is not a subset of full set

see the attached test case.  The problem was in routine "cell_sort_kpoints_with_recip" which sorts the k-point list by the image with the closest physical distance from the origin.  To find which image it searched exactly one surrounding shell of reciprocal space cells which is not enough if the cell vectors are very skew.

Fix in Mercural 6735:22a5ccf8fa35 adds additional shells determined from the elements of the transformation matrix to the Niggli-reduced cell.  I am not 100% sure that the fix is guaranteed to work always, but it is failsafe.

 

 
",
            "content_updated_on": "2015-07-24 17:37:23.974461+01",
            "created_on": "2015-07-24 17:37:24+01",
            "id": 1328,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Kpoint reduction on phonon calculation fails for very skew cells",
            "updated_on": "2015-07-24 17:37:23.974461+01"
        },
        {
            "assignee": null,
            "content": "
The functionality that is implemented in the fullrelax AIRSS scripts might now be able to be implemented within CASTEP using Keith's kpoint reassignment code. Very useful for high throughput projects.
",
            "content_updated_on": "2015-08-21 14:04:18+01",
            "created_on": "2015-08-21 14:04:18+01",
            "id": 1345,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Adaptive kpoint and basis grids for geometry optimisation",
            "updated_on": "2015-08-21 14:04:18+01"
        },
        {
            "assignee": null,
            "content": "
As per the title.
",
            "content_updated_on": "2015-08-21 14:07:14+01",
            "created_on": "2015-08-21 14:07:14+01",
            "id": 1346,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Kpoint offset as fraction of mesh increment",
            "updated_on": "2015-08-21 14:07:14+01"
        },
        {
            "assignee": null,
            "content": "
Add in md_ensemble=HUG, md_hug_method=xdir/iso &amp; md_hug_compression


Set md_hug_freq from md_ion_t


Support in md.f90 for hugoniostat.


Discussion with Jacob Wilkins.
",
            "content_updated_on": "2016-09-02 18:20:45+01",
            "created_on": "2015-03-31 14:28:46+01",
            "id": 1265,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Hugoniostat support",
            "updated_on": "2016-09-02 18:20:45+01"
        },
        {
            "assignee": null,
            "content": "
It would be nice to be able to enter a single command in order to change the units of all of CASTEP output to atomic units, such as "output_unit=atomic", rather than having to assign all of the units manually, i.e.


length_unit=bohr


force_unit=hartree/bohr


energy_unit=hartree


etc.
",
            "content_updated_on": "2015-08-27 16:02:47+01",
            "created_on": "2015-03-12 16:08:43+00",
            "id": 1248,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Single command to set units",
            "updated_on": "2015-08-27 16:02:47+01"
        },
        {
            "assignee": null,
            "content": "
Request from Ming-Shien Lee to add output unit &amp;quot;esu&amp;quot; for polarisability
tensor.
1esu = (4 pi epsilon_0) cm^3
",
            "content_updated_on": "2015-08-21 14:08:11+01",
            "created_on": "2008-05-14 06:31:15+01",
            "id": 21,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Add new unit "esu" for polarisability",
            "updated_on": "2015-08-21 14:08:11+01"
        },
        {
            "assignee": null,
            "content": "
With the new update, the Castep pseudopoentail generates a quite diferent potential for Cl.


Version 7: "2|1.7|1.7|1.2|6|7|8|30:31:32LGG"


Version 8: "3|1.8|3|6|8|30:31:32"


When this new potential is generated, the following warning is raised by Castep:


Warning: ion_atom_descreen_psp: negative charge density encountered
",
            "content_updated_on": "2016-09-19 12:43:20+01",
            "created_on": "2015-06-10 18:33:59+01",
            "id": 1307,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Castep 8 generates a pseudopotential for Cl with negative charge density",
            "updated_on": "2016-09-19 12:43:20+01"
        },
        {
            "assignee": null,
            "content": "
The transition-state stearch module contributed by Accelrys uses substandard coding practices and is in violation of CASTEP coding standards.


In particular


(a) the default TSSEARCH_FORCE_TOL is super-coarse at 0.2571  eV/A


(b) there is a bug in the convergence test which actually compares the RMS force against the tolerance not the maximum force.


     This is particularly dimwitted in the case of a transition state search where the commonest case of a single ion migrating will result on a large force on the hopping ion and small everywhere else. 


(c) the CASTEP coding standard of using a convergence window is not implemented.


 


The upshot is that a transition-state search with default parameters will almost certainly never work.


 


 
",
            "content_updated_on": "2015-09-15 17:48:29+01",
            "created_on": "2015-03-27 09:42:54+00",
            "id": 1262,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Transition-state search convergence criteria and defaults violate CASTEP coding standards",
            "updated_on": "2015-09-15 17:48:29+01"
        },
        {
            "assignee": null,
            "content": "
An Accelrys user asks the following:


https://community.accelrys.com/thread/7811?tstart=0


I have performed the Raman spectra calculation by using the module CASTEP on some small molecules which have been put into a 15A box. I found that the raman activity given in the result file (.castep) can not be calculated directly from the corresponding Raman tensor, but must be multiplied by a factor of 3.57. I want to know where does this factor comes from? Is it a bug?


Looking at the Raman output is seems that subroutine "raman_write_tensors" is performing an output conversion assuming dimensions of L**3.  But the dimensions of the Raman tensor are d(volume)/d(length) so this ought to be L**2 not L**3.  The orientationally averaged intensities are correctly converted as the square - L**4.  And the factor of 3.57 cited by the user is very close to 1/a_0**2.
",
            "content_updated_on": "2015-09-14 10:10:36+01",
            "created_on": "2014-07-18 09:41:40+01",
            "id": 1085,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Output conversion of Raman tensors is wrong",
            "updated_on": "2015-09-14 10:10:36+01"
        },
        {
            "assignee": null,
            "content": "
I have created this "feature" tracker as a clearing house/aide memoir for CASTEP 8 cell requirements.


 


OTFG_LIBRARY - character - the default library name or ".otfglib" filename to use if pseudopotentials not


specified in %BLOCK SPECIES_POT.  Should also auto-complete name from PSPOT_DIR as for potential files.


SPIN= - allow new spin units. on keyword in %BLOCK POSITIONS_XXX


cell_output should use parameter "spin_unit" when writing spins.


 


 
",
            "content_updated_on": "2015-10-13 16:54:40+01",
            "created_on": "2014-09-08 15:36:16+01",
            "id": 1118,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "New Cell input keywords for 8.0",
            "updated_on": "2015-10-13 16:54:40+01"
        },
        {
            "assignee": null,
            "content": "
This comes from an experience had during the CASTEP School. If a species_pot block has invalid alphanumeric lines they will be interpreted as "atomic symbols" and never blocked as an error. This led to awkward results like the following, erroneous block definition:
%BLOCK SPECIES_POT
H_00.recpot
%ENDBLOCK SPECIES_POT
actually resulting in a successful calculation carried out with ultrasoft pseudopotentials rather than in an error message. This can easily be source of confusion and mistakes. I suggest adding a validity check for all lines in such a block in the cell.f90 files - for example checking that all atomic symbols are actually used/belong to the current system/are valid chemical symbols at all.
",
            "content_updated_on": "2017-04-05 15:09:49+01",
            "created_on": "2014-08-28 12:08:06+01",
            "id": 1113,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "Stricter checks needed in SPECIES_POT block",
            "updated_on": "2017-04-05 15:09:49+01"
        },
        {
            "assignee": null,
            "content": "
If you set up a default calculation with one of the relativistic .uspso potentials, but without setting "spin_treatment=noncollinear" or "spin_orbit_coupling" in .param, the run aborts with


Error: nlpot_calculate_d_cmplx: nl_d%cmplx_nl_d is not allocated.
Current trace stack:
 nlpot_calculate_d_unscreened
 nlpot_calc_eigenvals_nkns_c
 nlpot_calc_eigenvalues_nkns
 electronic_apply_H_energy_local
 electronic_minimisation
 check_elec_ground_state
 castep


If the case of no spin or collinear spin is not implemented with these pseudopotentials, could we have a higher level check and more informative abort message please.


 


 
",
            "content_updated_on": "2015-11-10 11:56:01+00",
            "created_on": "2015-11-10 11:56:01+00",
            "id": 1444,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Run fails with relativistic pseudopotentials",
            "updated_on": "2015-11-10 11:56:01+00"
        },
        {
            "assignee": null,
            "content": "
At the end of a CASTEP run, the program writes a BibTeX file called &amp;lt;seedname&amp;gt;.bib that in principle lists all relevant citations for this run. The references are pulled from an array using the bib_add subroutine. While the array contains a large number of references, the code does not contain the appropriate bib_add commands to actually include them in the bibliography.
Currently, only the efield, ewald, geometry, magres, md, phonon and tssearch functional modules contain any bib_add calls at all. The following bibliography array entries are not referenced in the main CASTEP code:
CUMULANT
Ceperley-Alder
FBSC
MPgrid
PBE
PZ-LDA
USP
eff_bs (referenced in bs_sc2pc)
non-local recpot
recpot-MHL
recpot-TM
recpot-opt
recpot-opt2
It would be really great, if the bibliography would also contain the appropriate references for functionals and pseudopotenials.
 
",
            "content_updated_on": "2016-03-29 15:12:33+01",
            "created_on": "2013-09-19 16:04:24+01",
            "id": 942,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Add approriate bibliography hooks to pseudopotentials and XC functionals",
            "updated_on": "2016-03-29 15:12:33+01"
        },
        {
            "assignee": null,
            "content": "
It would be helpful if the parameter "calculate_stress" was honoured for fixed cell geometry optimizations (particularly for initial and final structures).
",
            "content_updated_on": "2017-04-06 22:17:47+01",
            "created_on": "2015-12-03 12:23:47+00",
            "id": 1475,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Caclulating stress tensor during fixed cell geometry optimization if calculate_stress=true",
            "updated_on": "2017-04-06 22:17:47+01"
        },
        {
            "assignee": null,
            "content": "
This came from Enrico Lombardi in South Africa:


"Ability to use Hybrid functionals for metallic and/or defect structures (especially important for 3d transition metals point defects in semiconductors) – although isolated defects in a semiconductor are not ‘conducting’ or ‘metals’ in the usual sense, they do have bands crossing the Fermi level and cannot be treated with fixed electronic level occupancies (i.e. orbital occupancy should not be fixed). Being able to use Hybrid functionals with optimization of orbital occupancy is essential in these cases."


Any comments/suggestions?
",
            "content_updated_on": "2017-02-03 11:12:27+00",
            "created_on": "2016-02-10 15:52:39+00",
            "id": 1524,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Request hybrid functionals with optimization of orbital occupancy",
            "updated_on": "2017-02-03 11:12:27+00"
        },
        {
            "assignee": null,
            "content": "Add an io routine to parse devel_code for int/real/char eg nbands=7.
 This would remove a lot of code duplication at higher levels.",
            "content_updated_on": "2011-02-16 16:08:02+00",
            "created_on": "2010-08-21 14:35:44+01",
            "id": 311,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "devel_code handling",
            "updated_on": "2011-02-16 16:08:02+00"
        },
        {
            "assignee": null,
            "content": "
When castep encounters an error it normally print diagnostic. Unfortunately it looks there is no well established way of doing this.


Just recently I've got two failures


Error in PHONON_LINEAR_RESPONSE.  DFPT convergence failed - aborting


and


Error: magres_apply_green_function_s2: not converged


It is trivial for a human being to find them out, but if you wanted to use it in scripting it would be much better if we could have a standard for this. 


This way we could help Material Studio user a lot....


 
",
            "content_updated_on": "2017-07-27 15:10:28+01",
            "created_on": "2015-12-11 13:55:49+00",
            "id": 1489,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Would be nice to standardise castep error message",
            "updated_on": "2017-07-27 15:10:28+01"
        },
        {
            "assignee": null,
            "content": "
From VICTOR:


 


We have switched to using SPECTRAL module instead of OPTICS, and it apparently has a different approach to nonlocal exchange-correlation functionals. We used to get a warning:


write(stdout,*) 'Warning: a nonlocal functional has been used.'


write(stdout,*) 'Optical properties may be incorrect.'


 


 


Now calculations terminate with an error:


select case (current_params%spectral_task)


case('CORELOSS')


calc_core=.true.;calc_dome=.true.;calc_ome=.false.


if(nlxc_on) call io_abort('spectral_calculate_dft: Cannot compute coreless spectra with nonlocal exchange')


case('OPTICS')


calc_core=.false.;calc_dome=.false.;calc_ome=.true.


if(nlxc_on) call io_abort('spectral_calculate_dft: Cannot compute coreless spectra with nonlocal exchange')


There are various issues here:


The second io_abort is a copy/paste piece of code and its error message is incorrect


In the first clause, “coreless” should be core-loss”


Is it possible to remove the second io_abort and replace it with the warning as before, or will the calculation actually die in that path through the code?
 
",
            "content_updated_on": "2016-09-11 21:35:50+01",
            "created_on": "2015-12-11 13:26:20+00",
            "id": 1486,
            "kind": "task"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Optics with nonlocal XC functionals behaves differently from earlier releases",
            "updated_on": "2016-09-11 21:35:50+01"
        },
        {
            "assignee": null,
            "content": "
Currently there are two parameters which govern convergence in 


magres_apply_green_function:


magres_conv_tol and magres_max_CG_steps


The names are very misleading ...
",
            "content_updated_on": "2016-09-23 16:09:25+01",
            "created_on": "2015-12-11 13:44:47+00",
            "id": 1488,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "open",
            "title": "parameters for magres_apply_green_function should not have magres_ in their name",
            "updated_on": "2016-09-23 16:09:25+01"
        },
        {
            "assignee": null,
            "content": "
The attached set is a smalle example I was trying out as art of the work around Sally Price's use for the crystal structure prediction challenge.


The initial geometry run uses the TPSD geometry optimiser, and the second run is an attempted continuation with a switch to LBFGS.  The first run performes the requested 10 TPSF cycles and writes a checkpoint.  Any attempt to start from this checkpoint with a switch of GEOM_METHOD to LBFGS results in an abort with


Error in geom_mdl_to_fvec - cell inconsistency?
Current trace stack:
 geom_mdl_to_fvec
 geom_BFGS
 geometry_optimise
 castep


This behaviour appears quite general and occurs in more complex cells too.


 


 
",
            "content_updated_on": "2016-07-26 17:21:24+01",
            "created_on": "2016-01-14 22:04:35+00",
            "id": 1507,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Continuation with switch of GEOM_METHOD fails",
            "updated_on": "2016-07-26 17:21:24+01"
        },
        {
            "assignee": null,
            "content": "
For BS runs the Eigenvalues for the bands at the single k-points are not printed any more in the *._BandStr.castep file this was the case for earlier versions.


ATTENTION: I (cmenke) also saw cases where at least the info for k-points for the root process was printed -&gt; it has to be doubled checked that this is not the case and really all k-points are printed?


The keyword spectral_write_eigenvalues apparently has no effect on anything; it is accepted by parameters.f90 but not used anywhere in the code.
",
            "content_updated_on": "2016-11-14 17:40:43+00",
            "created_on": "2016-04-01 10:30:30+01",
            "id": 1548,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "For BS runs the Eigenvalues for the bands are not printed in the *._BandStr.castep file",
            "updated_on": "2016-11-14 17:40:43+00"
        },
        {
            "assignee": null,
            "content": "
 TDDFT run with attached input produce different results (matrix elements) each time castep is run. Two examples attached. Note that not just matrix element are different which can be expected because of degeneracy, but, also, the sum of M^2 over all the  degenerated transitions. (Perl script which extracts this is also attached)
",
            "content_updated_on": "2016-03-29 14:55:44+01",
            "created_on": "2016-03-14 14:43:15+00",
            "id": 1536,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "TDDFT results for solids are not reproducible",
            "updated_on": "2016-03-29 14:55:44+01"
        },
        {
            "assignee": null,
            "content": "Some of Accelrys' ARTS tests and examples specify explicit symmetries with
a symmetry_disp of 1.0 or greater.  This could cause errors in the symmetrization
of mixed derivatives used for off-diagonal elements of the dynamical matrices.


Eq 29 is actually wrong.
Let me try to explain in conceptual terms how the argument goes.

The idea in Eq 29 is to sum the symmetry-transformed matrix elements for
each symmetry operation.  The individual terms transform as

   &amp;lt;u(0)|V(k,b)|u(k',a)&amp;gt; = exp(-2 pi i q . (R x(k) + v - x(k'))
                              &amp;lt;u(0)|V(k',b')|u(k,b)&amp;gt;     (A)

where the symmetry operation S{R,v} transforms atom k with co-ordinates
x(k) into k' with co-ordinates x(k') including non-symmorphic translation v.

  x(k') = R x(k) + v + T                  (B)

where T is the lattice vector which arises if the symmetry operation
rotates an atom in the central cell to a different cell.

The matrix elements in A above are NOT periodic with the real lattice
and the phase factor has the effect of transforming the matrix element
in one cell to that in the related cell and therefore has value exp( 2
pi i q.T).  This is because the symmetry operations can transform an
atom into the adjacent cell but the actual (or virtual) calculation of
u(k',a) and v(k,b) presume atomic co-ordinates in the range [0,1).

To derive (A) you need to apply the symmetry transformations to the
response potential V(k,b) as well as the response and ground-state
wavefunctions, though this is not mentioned explicitly in my paper.

The problem in the Ge case arises from including an additional,
arbitrary lattice vector in &amp;quot;v&amp;quot; in (B) above.  This clearly includes
an additional phase corresponding to the symmetry transformation of
atoms into cells further than the adjacent one, and for q == 0 the
corresponding phase is non-zero.

The point I am still stuck on is coming up with a rigorous criterion to
decide which v is &amp;quot;correct&amp;quot; in this context, ie the one (and there is
only one) which gives the correct lattice shift T.  Greater than one
or less than one is clearly wrong, and I think, but have not yet proved
that for non-symmorphic operations the values ±1 are also always
wrong (which is why my first attempt at a fix broke other, previously
correct cases). But for non-symmorpic operations which of -0.5 or
+0.5 is the correct value? Or -0.25, +0.75?

As I have discussed previously, CASTEP's internal symmetry code, K290
always seems to get this correct, (as does Jim's M.S. code if the atoms
are within a single cell) which is why the Ge case stands out.  I have
attached a test patch which uses the same renormalization as K290 - that
is v = mod(v,1.0) which never shifts a zero to a 1 and therefore
will never break a symmorphic case.  This works for a few simple tests
for me, and I am running on some more serious examples.  So please
include this patch and run it through your test suite.


",
            "content_updated_on": "2010-09-09 09:33:19.248049+01",
            "created_on": "2010-09-09 09:33:19+01",
            "id": 407,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Out of range symmetry-disps give incorrect off-diagonal (mixed) E(2) for F3-3m and q/=0",
            "updated_on": "2010-09-09 09:33:19.248049+01"
        },
        {
            "assignee": null,
            "content": "
They are so huge that often they do not fit often rather limited  slow accessed nfs mounted home directories, especially if one is running calculations in parallel i.e.  simultaneously…


Whether they really must be there? Or they can be moved somehow to the scratch folder.


---


Using current directory located not on the nfs mounted disk does not look as an option as


a) Materials studio gateways relies on the fact that job directory is accessible from any node


b) Even if  I  a standalone job   from a local drive it works only for non-continuation runs, for continuation runs castep crashes for whatever reason:


With diagnostic like this:


Fatal error in PMPI_Bcast: Other MPI error, error stack:


PMPI_Bcast(2112)........: MPI_Bcast(buf=0x7fff96207218, count=12, MPI_CHARACTER, root=0, MPI_COMM_WORLD) failed


MPIR_Bcast_impl(1670)...:


I_MPIR_Bcast_intra(1887): Failure during collective


MPIR_Bcast_intra(1461)..:


MPIR_Bcast_binomial(156): message sizes do not match across processes in the collective application called MPI_Abort(MPI_COMM_WORLD, 1) - process 3 Fatal error in PMPI_Comm_split: Other MPI error, error stack:


PMPI_Comm_split(535)......: MPI_Comm_split(MPI_COMM_WORLD, color=0, key=1, new_comm=0x69a3f38) failed


PMPI_Comm_split(512)......:


MPIR_Comm_split_impl(148).:


MPIR_Allgather_impl(887)..:


MPIR_Allgather(836).......:


MPIR_Allgather_intra(238).:


dequeue_and_set_error(628): Communication error with rank 3 rank = 2, revents = 25, state = 8 Assertion failed in file ../../socksm.c at line 2963: (it_plfd-&gt;revents &amp; POLLERR) == 0


And works only if I copy  checkfiles into the directory with the same name on other hosts... 
",
            "content_updated_on": "2016-02-01 12:38:03+00",
            "created_on": "2015-12-11 14:06:18+00",
            "id": 1490,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "It should be possible to write huge files with extensions staring with dfpt_* in the scratch area",
            "updated_on": "2016-02-01 12:38:03+00"
        },
        {
            "assignee": null,
            "content": "
When doing spin-orbit coupled calculations with Dirac pseudopotentials, all the symmetry operators in the cell need to be released. After finishing the calculation, running the orbitals2bands binary returns me this error message:


Error: MDL%wvfn contains 147 k-points but NUM_BS_KPOINTS = 203
Current trace stack:
 orbitals2bands


I am using the SPECTRAL module for band structure calculations, and Phil Hasnip suggests either the orbitals2bands or the main code is bugged so that NUM_BS_KPOINTS is read/printed instead of NUM_SPECTRAL_KPOINTS. (203 is the number of K-points I am using for the SCF calculations.)


A problem of similar kind was spotted when the .band output used the full K-point mesh instead of the K-point path specified in the .cell file. Apparently the problem was due to using BS_KPOINTS_PATH instead of SPECTRAL_KPOINTS_PATH.
",
            "content_updated_on": "2016-01-22 20:24:58+00",
            "created_on": "2016-01-21 14:43:56+00",
            "id": 1510,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "orbitals2bands reading wrong number of k-points",
            "updated_on": "2016-01-22 20:24:58+00"
        },
        {
            "assignee": null,
            "content": "
Hi, I have been attempting to run this structure in the aligned and "off angle" structure. The aligned unit cell behaves and optimizes, but with the other configuration, I get a SEDC error. I get the same error on 3 machines (ARCHER, and two in house Sheffield machines). And I am unsure why the distortion causes this error.
",
            "content_updated_on": "2016-09-01 08:38:45+01",
            "created_on": "2015-10-12 17:55:38+01",
            "id": 1387,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SEDC error ",
            "updated_on": "2016-09-01 08:38:45+01"
        },
        {
            "assignee": null,
            "content": "
This request from Bjoern Winkler seems reasonable and probably involves just some minor tinkering with the print statements:


Raman calculations wait till the end before printing frequencies and intensities. However, frequencies become available much earlier and can/should be printed before the Raman cycle starts. It is possible that there are large imaginary modes, and so it does not make sense to waste lots more computing power on the intensity calculation.


 


 
",
            "content_updated_on": "2016-09-15 10:32:12+01",
            "created_on": "2014-12-15 14:43:10+00",
            "id": 1207,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Display phonon frequencies before starting on Raman intensities",
            "updated_on": "2016-09-15 10:32:12+01"
        },
        {
            "assignee": null,
            "content": "
For the run attached (actually using MatStudio default settings) the result printed in the castep output is very strange. Something is really wrong there:


Error in density_add: den1 and den2 do not agree about real/cmplx version


--


And this is NOT a continuation run
",
            "content_updated_on": "2016-10-12 09:00:15+01",
            "created_on": "2016-03-24 10:26:00+00",
            "id": 1544,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "TDDFT bug: incompatible real/cmplx densities when using OTF norm conserving PSPs",
            "updated_on": "2016-10-12 09:00:15+01"
        },
        {
            "assignee": null,
            "content": "
For many years we used to request &lt;task&gt;_nextra_bands for bandstructure and dos run to produce bands above the Fermi level. It still works for spectral but only for the no S_O case.


If S_O is on the result is unpredictable.


Attached there are two runs for Ag. If for NoSO case I am clearly getting 4 bands as requested above the Fermi level,  for WithSO there are all together 18 bands returned and it is not enough even to reach Fermi level.
",
            "content_updated_on": "2016-03-29 14:57:27+01",
            "created_on": "2015-06-10 12:02:24+01",
            "id": 1305,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "spectral_nextra_bands with  SO does not work correctly",
            "updated_on": "2016-03-29 14:57:27+01"
        },
        {
            "assignee": null,
            "content": "
Can we automate the generation of k-point paths somehow? This is such a common
case that it would be a time-saver to have.
Keith
",
            "content_updated_on": "2016-03-29 15:08:51+01",
            "created_on": "2013-05-07 10:01:17+01",
            "id": 899,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "Write or obtain tool to generate high-symmetry k-point path",
            "updated_on": "2016-03-29 15:08:51+01"
        },
        {
            "assignee": null,
            "content": "
this is a new functional combining the benefits of the WC’s accuracy for solids, as well as the RPBE’s accuracy for molecules/surfaces. The new functional combines the benefits of both and is good at both solids and molecules. Therefore the new functional is important for systems including both molecules and solids (such as heterogenous catalysis). Previously using only WC treated the solid well, but not so much the molecules, while the RPBE functional treated the molecules better but not the solids.
The reference for the new functional is P. Haas et al., “Construction of an optimal GGA functional for molecules and solids”, Phys Rev B 83, 205117 (2011). http://publik.tuwien.ac.at/files/PubDat_196997.pdf
",
            "content_updated_on": "2016-03-29 15:09:12+01",
            "created_on": "2012-09-14 11:49:39+01",
            "id": 777,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "open",
            "title": "user wants to use HTBS functional (PRB 83 (2011) 205117)",
            "updated_on": "2016-03-29 15:09:12+01"
        },
        {
            "assignee": null,
            "content": "Castep Errors
=============
Note: We believe these are errors in Castep 5.5 (public release) but there is
always the possibility they could be error in the compiler, input files, etc.

Program Version: 5.5 Public Release
Date           : 28 Oct 2010
Machine        : Darwin
                   Ice VIII : Westmere processors
                   Ice IX   : Older processor (which one?)
Compiler       : Probably Intel, version?

Systems:
        Ice VIII and Ice IX


Summary:
        During the course of a number of calculations (different pressures, XC
        functionals, dispersion corrections) on Ice VIII we found a number of
        inconsistencies. The exact nature of the problems encountered probably
        doesn't matter, but they were all associated with the behaviour of
        the Ice structure at high pressure (2 to 15 GPa). We saw unexplainable
        bond length increases, volume decreases, etc. 
        
        A detailed investigation pointed to a problem with Castep. For at
        least one ice structure (Ice VIII) an inconsistency in the dispersion
        energy was discovered the BFGS procedure: the dispersion energy
        calculated at the very first step in Castep was correct (independently
        verified) and consistent with the cell geometry. But the dispersion
        energy calculated at the end - the last step in the BFGS minimization
        - was definitely wrong and inconsistent with the cell parameters
        printed out. On re-starting Castep from the final, optimized structure
        (clean restart) a *different* dispersion energy was obtained in the
        first step, and this time, it is consistent with the cell parameters. 

        The idependent verification of the lattice dispersion energy was done
        with the res2disp program that is part of the CamCASP suite.

Examples:

All data provided below have been obtained with the same run parameters.

Ice VIII
   * 5 GPa using PBE+G06
   * Cutoff 700 eV
   * K-point spacing 0.04  

    Step          DFT energy (eV)   Dispersion Energy (eV)
                   (Castep)          Castep       CamCASP
    ========================================================
    Optimization 1
      * Start     -1894.139964922   -0.8476      -0.8476
      * End       -1893.852282343   -0.8044      -1.0792
    Optimization 2 (start from end of Opt 1)
      * Start     -1893.852282264   -1.0792      -1.0792
      * End       -1893.778684620   -1.0692      -1.1144
    ========================================================

    There clearly is something wrong with the optimization. 
      1) Total lattice energy (DFT+Dispersion) *increases* each time! 
      2) Castep dispersion energies are not self-consistent. We should have
      had Opt1:End = Opt2:Start. 
      3) CamCASP calculations show the starting dispersion energy to be
      correct in Castep.

Ice IX
   * 3 GPa using PBE+G06
   * Cutoff 700 eV
   * K-point spacing 0.04  
   * ***Castep 5.5, but seems to be a slightly older version. Gale and Jochym
     missing in list of Contributors.***
   * Structure already optimized. 
    
    Step          DFT energy (eV)   Dispersion Energy (eV)
                   (Castep)          Castep       CamCASP
    ========================================================
    Optimization 1
      * Start     -5683.350942220    -1.9999    -1.9999    
      * End       No change
    Optimization 2 (start from end of Opt 1)
      * Start     -5683.350943252    -1.9999    -1.9999
      * End       No change
    ========================================================
 
    NOTES:
    This calculation looks fine. There is no change in either the DFT or
    dispersion energies. And Castep and CamCASP are consistent in the latter. 

    It is unsatisfactory that this calculation was done with a different
    version of Castep. This needs to be re-done.

Molecule XVI
   * Pre-release version of Castep 5.5 compiled with Intel 11.x
   * /home/am592/RandomStructureSearch/BlindTest/XVI/1/refine/CrystalPredictor-reruns-1/reruns
   * Structure 258
   * The Castep calculation was re-run from the final structure in a prior
     Castep calculation that was incomplete due to lack of CPU time.
   * Re-run was consistent with prior run.


Summary:
   * At least two systems (Ice IX and molecule XVI) show no problems.
   * Both may have used slightly older versions of Castep.
   * Though I believe we have data to show that problems exist even for these
     older versions of Castep. 
     ---&amp;gt; Do we really? I cannot locate any. But Gareth may as he has all the
     data files for the calculations. So far, all outputs that exhibit the
     problem seem to belong to *one version of Castep* - the latest one!
   * As far as I can tell, all the problems encountered with Castep are
     encountered for Ice VIII.

Questions and To Do:
   * Is there something wrong with the Ice VIII input files?
     ---&amp;gt; If there were any problems with the input (symmetry, k-point
     sampling, etc.) these would effect the DFT energies and hence the end
     result of the minimization, but they would not effect the dispersion
     energy! 
   * Re-run Ice VIII and IX with identical versions of Castep on identical
     processors.


03-Nov-2010
===========
   The problem does seem to be with the Castep source. 
   * 5.5-pre-release-260510 does not exhibit the inconsistency.
   * 5.5, 5.5RC and 5.5RC2 do.
   * Comparison of version 5.5-pre-release-260510 and 5.5 (also 5.5RC and
   5.5RC2) reveals a change in Functional/semp_disp_corr.F90 that has been
   demonstrated to be the cause of the inconsistency. The initialization flag
   sedc_is_initialized in subroutine initialize_main is set to false at the
   start of the subroutine. Done by Matt Probert. This has the effect of
   forcing re-initialization every time this subroutine is called. 
   It is not clear why this was done as initialize_main=.false. in the 
   declaration of the module. Now, forcing re-initialization should not 
   effect the module - if well programmed. But it does. 
   * By reverting this one change, the initialization is done only once and
   the code is made self-consistent. 
   * See results in: Ice_phases/work/Ice-VIII-castep-checks/castep-5.5/opt2/
   * We still do not know if this version of 5.5 - call it 5.5.01 - is
   *correct*. This is something we now need to investigate.

Ice VIII: 
   * PBE+G06
   * 5 GPa
   * Cutoff 700 eV
   * K-point spacing 0.04  

   Compare results of minimizations with results reported above.

   Castep versions:
   * 5.5 : Public release
   * 5.5.01 : Modified 5.5 to prevent re-initialization of semp_disp_corr.F90
   * 5.5-260510 : Pre-release version

   * Re-optimization from the end of an optimization with PBE+G06 (using 5.5). 

                  -----Energies at end of optimization-----
    Castep        DFT energy (eV)   Dispersion Energy (eV)
    version        (Castep)          Castep       CamCASP
    ========================================================
    5.5          -1893.778676209    -1.0692     -1.1144
    5.5.01       -1893.775196130    -1.1160     -1.1160
    5.5-260510   -1893.775182129    -1.1160     -1.1160
    ========================================================

    5.5.01 and 5.5-260510 report final dispersion energies consistent 
    with CamCASP.
    
   * Enthalpy changes during the optimization
     
     Version 5.5 shows yet another (related) problem: the enthalpy *increases*
     during the optimization! 
     $ pwd
     /home/am592/projects/Ice_phases/work/Ice-VIII-castep-checks/castep-5.5/opt2/5.5
     $ grep 'BFGS: finished iteration' *castep
      BFGS: finished iteration     0 with enthalpy= -1.89292555E+003 eV
      BFGS: finished iteration     1 with enthalpy= -1.89290419E+003 eV
      BFGS: finished iteration     2 with enthalpy= -1.89288685E+003 eV
      BFGS: finished iteration     3 with enthalpy= -1.89288949E+003 eV
      BFGS: finished iteration     4 with enthalpy= -1.89288653E+003 eV
      BFGS: finished iteration     5 with enthalpy= -1.89288643E+003 eV

     Both 5.5.01 and 5.5-260510 show a decrease in enthalpy with each BFGS
     step.

Summary:
   * We have found a bug in Castep 5.5 that is the cause of the inconsistency
   in the dispersion energy and increase in enthalpy during the BFGS
   geometry optimization procedure.
   * The proposed fix restores consistency.
   * But we do not know if the program is correct!

To Do:
   * Mail Castep developers.
   * Calculate PES for simple system and compare against surface corrected
   using dispersion energies using CamCASP.
",
            "content_updated_on": "2010-11-11 16:33:06+00",
            "created_on": "2010-11-04 18:28:01+00",
            "id": 419,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SECD gives inconsistent results",
            "updated_on": "2010-11-11 16:33:06+00"
        },
        {
            "assignee": null,
            "content": "
If I run phonons FD as mat studio usually do:


1) Run SPE


2) Run Phonons as continuation CASTEP aborts with the message


0 0 0 0 0 0 0 0 0 Error in cell_supercell: supercell matrix is singular Current trace stack: cell_supercell phonon_force_constant_matrix phonon_calculate castep application called MPI_Abort(MPI_COMM_WORLD, ) - process 0


If the same file runs as standalone everything is fine....
",
            "content_updated_on": "2016-06-02 12:49:16+01",
            "created_on": "2016-04-29 12:26:44+01",
            "id": 1559,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FD_Phonons does not run continuation any more",
            "updated_on": "2016-06-02 12:49:16+01"
        },
        {
            "assignee": null,
            "content": "
I run castep on the files attached


Despite it is clearly said in the param file


spin_polarized : true
spin :        6


Castep complains 


 Info: initial atomic magnetic moments set but spin_polarized=false
     - consider setting spin_polarized=true.


 


and is not printing for example a line


"spin density mixing amplitude : 2.000"


 


Though all the behaviour further is good enough...


 
",
            "content_updated_on": "2016-06-02 13:59:55+01",
            "created_on": "2016-04-29 17:16:14+01",
            "id": 1564,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "There is a confusion with spin_polarised settings",
            "updated_on": "2016-06-02 13:59:55+01"
        },
        {
            "assignee": null,
            "content": "The attached run fails with:

 Internal Error in secondd_find_dmat_symmetry -- repeated analyses disagree
 Please submit a bug report with a copy of your &amp;lt;seedname&amp;gt;.cell file
 Try increasing the precision of the symmetry operations and try again
 *** Failure in phonon dynamical matrix symmetry analysis ***
Current trace stack:
 secondd_find_dmat_symmetry
 phonon_finite_displacement
 phonon_force_constant_matrix
 phonon_calculate
 castep

There is no symmetry (P1) hence the recommendation is not completely useful.",
            "content_updated_on": "2010-06-21 16:24:02+01",
            "created_on": "2010-03-22 13:11:42+00",
            "id": 254,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Internal Error in secondd_find_dmat_symmetry -- repeated analyses disagree",
            "updated_on": "2010-06-21 16:24:02+01"
        },
        {
            "assignee": null,
            "content": "
We run NMR as a continuation of the energy run. After codefest update, the results started to be quite different. Interestingly enough, if one runs cNMR not as a continuation the results are still as before....
",
            "content_updated_on": "2016-06-17 12:02:57+01",
            "created_on": "2016-04-29 13:34:21+01",
            "id": 1560,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "NMR JCoupling if run as continuation produces something different",
            "updated_on": "2016-06-17 12:02:57+01"
        },
        {
            "assignee": null,
            "content": "
For the run attached Fermi energy printed into bands file is zero. Though it is not zero for the great majority of runs....
",
            "content_updated_on": "2016-06-29 23:59:33+01",
            "created_on": "2016-04-29 15:28:49+01",
            "id": 1563,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Fermi lenergy is zero in bands file for some runs",
            "updated_on": "2016-06-29 23:59:33+01"
        },
        {
            "assignee": null,
            "content": "
In our regression tests, we have a continuation from very old prehistoric check files. Nowdays, it crashes either always or just in parallel.


 
",
            "content_updated_on": "2016-09-01 09:18:18+01",
            "created_on": "2016-04-29 13:38:10+01",
            "id": 1561,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Continuation from old check files does not run any longer...",
            "updated_on": "2016-09-01 09:18:18+01"
        },
        {
            "assignee": null,
            "content": "Dear Castep Users.

Thank for the response i got for what i asked. I am trying to use CASTEP now to generate wave functions for QMC (CASINO). I have the ga_pp.data and ga_pp.pwfn. i have the same files for As. I have tried to run a CASTEP calculation but i am getting this error message.

Error: ion_atom_radin: grid should be odd
Current trace stack:
 ion_atom_radin
 ion_atom_read_data
 ion_initialise
 castep

Thanks
Cecil",
            "content_updated_on": "2010-03-20 12:00:46+00",
            "created_on": "2009-07-03 09:03:10+01",
            "id": 144,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "QMC pseudos",
            "updated_on": "2010-03-20 12:00:46+00"
        },
        {
            "assignee": null,
            "content": "Add optional parameter &amp;quot;silent&amp;quot; to e-field functionality so that it produces no output. This will allow Raman to call the routine 'cleanly' and deal with output itself.

",
            "content_updated_on": "2008-08-10 13:00:06+01",
            "created_on": "2008-08-07 12:15:48+01",
            "id": 53,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "EFIELD silent option",
            "updated_on": "2008-08-10 13:00:06+01"
        },
        {
            "assignee": null,
            "content": "Add an optional parameter to electronic_minimise so that an SCF calculation produces no output. Raman calls electronic as part of the finite displacement calculation but does not require electronic to produce output in the .castep file. Raman will deal with output on its own.
",
            "content_updated_on": "2008-11-18 17:20:01+00",
            "created_on": "2008-08-07 12:18:18+01",
            "id": 54,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Electronic 'silent' option",
            "updated_on": "2008-11-18 17:20:01+00"
        },
        {
            "assignee": null,
            "content": "The Ewald regression test crashes when run on 4 (but not 1,2,3) CPUs under both RHEL 5 and SLES 11 Linux. An infinite loop state is entered for all 4 running processes (100% CPU utilisation), requiring a manual kill. ",
            "content_updated_on": "2009-09-10 14:20:07+01",
            "created_on": "2009-08-25 09:29:55+01",
            "id": 182,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Ewald regression test hangs in parallel (e.g. 4 CPUs) ",
            "updated_on": "2009-09-10 14:20:07+01"
        },
        {
            "assignee": null,
            "content": "Let's correct sedc_license_checkout to exit without printing on non-root:

    if (.not.on_root_node) return

At the moment every process produces the header.",
            "content_updated_on": "2010-05-21 12:45:10+01",
            "created_on": "2010-04-21 16:31:46+01",
            "id": 262,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SEDC header shjould be printed only once",
            "updated_on": "2010-05-21 12:45:10+01"
        },
        {
            "assignee": null,
            "content": "Earlier runs were OK, now on all platforms we get a reproducible zheevd error:

 Error in zheevd: status 7; size of problem 8 in hamiltonian_diagonalise_slice
Current trace stack:
 hamiltonian_diagonalise_slice
 secondd_get_u0
 secondd_polarisability
 raman_calculate
 phonon_calculate
 castep 

Attached file contains cell/param files for the SCF calculation and for the Efield, together with results on 1-4 cores. ",
            "content_updated_on": "2010-06-19 15:15:07+01",
            "created_on": "2010-06-15 12:37:16+01",
            "id": 303,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Raman_BN regression started to fail in parallel on 2 and 4 cores from 8th June (zheevd)",
            "updated_on": "2010-06-19 15:15:07+01"
        },
        {
            "assignee": null,
            "content": "
Like some other continuations, b3lyp one is also not successful it crashes. see attached...
",
            "content_updated_on": "2016-09-10 12:08:48+01",
            "created_on": "2016-05-03 10:00:22+01",
            "id": 1565,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "b3lyp crashes on continuation [now just numerical differences",
            "updated_on": "2016-09-10 12:08:48+01"
        },
        {
            "assignee": null,
            "content": "The attached test case contains an input error. The symmetry operations
of the whole group are explicitly specified, in addition to a spin
initialisation - but these are inconsistent as the antiferromagnetic
order breaks the symmetry.

CASTEP ought to detect this condition and abort with an error.  Instead
it appears to perform the spin initialisation, and immediately wipe
out the AFM state by calling density_symmetrise with the full set of
operations.  This is quite hard to spot as the calculation apparently
converges on a nonmagnetic state.

Changing the atom label for the spin down Fe ions (file troilite-afm.cell) causes the run to correctly fail with

ERROR: Symmetry operations not consistent with atomic positions - investigate symmetry_tol

I propose that the SPIN modifier alone should also invoke this abort.

",
            "content_updated_on": "2009-10-14 07:53:09+01",
            "created_on": "2009-08-05 09:21:19+01",
            "id": 168,
            "kind": "proposal"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Failure to detect symmetry/SPIN initialisation incompatibility",
            "updated_on": "2009-10-14 07:53:09+01"
        },
        {
            "assignee": null,
            "content": "Simple Fe test with 44 points runs fine with g-vector (3 cores), k-point (2 or 4 cores), serial, but crashes wit mixed distribution (6 or 8 cores)",
            "content_updated_on": "2010-06-30 08:21:50+01",
            "created_on": "2010-06-29 11:46:15+01",
            "id": 304,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "mixed parallel strategy crash on Hirshfeld spin analysis",
            "updated_on": "2010-06-30 08:21:50+01"
        },
        {
            "assignee": null,
            "content": "Subject says it all.
",
            "content_updated_on": "2008-09-02 12:42:47+01",
            "created_on": "2008-08-08 12:48:31+01",
            "id": 56,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Merge CML branch code with current codebase",
            "updated_on": "2008-09-02 12:42:47+01"
        },
        {
            "assignee": null,
            "content": "Tidy up and release the minimum-image algorithm for supercell
force-constant matrix interpolation in the case of anisotropic
cells.  

Will need new parameter.
",
            "content_updated_on": "2008-09-26 09:15:38+01",
            "created_on": "2008-04-22 09:49:22+01",
            "id": 18,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Release anisotropic minimum image supercell algorithm",
            "updated_on": "2008-09-26 09:15:38+01"
        },
        {
            "assignee": null,
            "content": "
Apparently, a "-a" as an argument added to the "hostname" command is illegal on darwin architectures (well at least on my Mac OS X 10.9.4), and will cause make to spit out a harmless but ugly error message (it might fail on TCM darwin machines, if there are such).

The "-a" was added to line 172 in bin/arch in changeset 8c3fd681241a on Thu Aug 07 18:47:58 2014 +0100. This is not a legal argument to darwin's hostname command, and it will spit out the error message at the beginning of each make command:

$ make install-tools
hostname: illegal option -- a
usage: hostname [-fs",
            "content_updated_on": "2014-08-17 15:51:10+01",
            "created_on": "2014-08-13 14:31:20+01",
            "id": 1093,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "hostname -a illegal option in bin/arch",
            "updated_on": "2014-08-17 15:51:10+01"
        },
        {
            "assignee": null,
            "content": "
If I use snap_to_symmetry then my cell has changed. It would be good if Castep would write out this new cell on a -dryrun so that any related calculations can use this symmetrised geometry.
",
            "content_updated_on": "2016-04-05 01:02:32+01",
            "created_on": "2014-08-21 17:18:14+01",
            "id": 1103,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Add -out.cell on dryrun for snap_to_symmetry changes",
            "updated_on": "2016-04-05 01:02:32+01"
        },
        {
            "assignee": null,
            "content": "I want to allow a thermodynamics calculation for a regular (not fine) calculation.  

Please delete the block of code locking this out at line 6951.  This is the consistency check of PHONON_FINE_METHOD and TASK, which is no longer needed.

The second is, I think an error which has been overlooked for a while.
The default units for THERMO_T_START and THERMO_T_STOP and THERMO_T_SPACING are Ha, but I'm sure they should be Kelvin!

I am not satisfied with the names THERMO_T_START/STOP to
designate a range of temperatures.  I wonder if you have any suggestions
for a more intuitive alias? (perhaps along the lines of THERMO_T_RANGE_LOW/THERMO_T_RANGE_HIGH ?)  Or should we just stick with
what we have?

",
            "content_updated_on": "2009-07-13 13:36:35+01",
            "created_on": "2009-06-26 08:23:02+01",
            "id": 138,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Updates to parameters for THERMODYNAMICS",
            "updated_on": "2009-07-13 13:36:35+01"
        },
        {
            "assignee": null,
            "content": "An arbitrary subset of Accelrys collection of molecular crystals produces failures right after the first iteration.
",
            "content_updated_on": "2010-06-04 11:01:56+01",
            "created_on": "2010-04-21 16:36:55+01",
            "id": 263,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "DFT-D fails in cell optimization of molecular crystals",
            "updated_on": "2010-06-04 11:01:56+01"
        },
        {
            "assignee": null,
            "content": "It seems that ELF is generated as all 1.0 values when Gamma point is the only one used; see attached files and formatted ELF in them.",
            "content_updated_on": "2009-05-21 13:21:20+01",
            "created_on": "2009-05-18 10:26:58+01",
            "id": 133,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Incorrect ELF generated with Gamma point",
            "updated_on": "2009-05-21 13:21:20+01"
        },
        {
            "assignee": null,
            "content": "See short description. Attached results:
2EuO: parallel with g-point (failed)
1EuO - serial with G-point (OK)
EuO - parallel with GAMMA_OFF (OK)


We investigated nlxc module and did not spot anything special.
It is very probable that something went wrong in electronic.
",
            "content_updated_on": "2010-06-15 16:08:37+01",
            "created_on": "2010-05-27 08:25:56+01",
            "id": 291,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LDA+U does not work in parallel for Gamma Point",
            "updated_on": "2010-06-15 16:08:37+01"
        },
        {
            "assignee": null,
            "content": "I ran an NMR job with Gamma point. CASTEP crashes with segmentation violation in
nlpot_apply_commutator_wvfn when trying to use wvfn%beta_phi. It is apparently not allocated in this scenario. At the gamma-point the beta_phis are real, not complex, so one has to use beta_phi_at_gamma. 

As Phil says, it may be that there's a bug with the basis re-initialisation and/or wave rather than NMR directly, it might be worth checking wvfn%have_gamma as well as gamma_point, and of course the allocation status of wvfn%beta_phi and wvfn%beta_phi_at_gamma.",
            "content_updated_on": "2009-07-07 14:06:16+01",
            "created_on": "2009-05-12 12:35:00+01",
            "id": 123,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Crash for NMR jobs with Gamma-point only settings",
            "updated_on": "2009-07-07 14:06:16+01"
        },
        {
            "assignee": null,
            "content": "Accelrys reported a number of users being confused about the current &amp;quot;Out of RAM&amp;quot; error message. I thought we had a discussion a while ago and decided to change it to &amp;quot;Insufficient memory&amp;quot; or something? Needs to be done throughout the whole code soon - should be a simple search &amp;amp; replace job.",
            "content_updated_on": "2009-09-03 09:31:32+01",
            "created_on": "2009-08-06 21:54:46+01",
            "id": 169,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "change allocate error message",
            "updated_on": "2009-09-03 09:31:32+01"
        },
        {
            "assignee": null,
            "content": "There is a memory allocation error if you run MD with md_ndof=0. This used to be trapped in md_run by an early return of this code to CASTEP main, but when the cross-check code was moved from md_run to md_crosscheck, the trap was not updated. Hence the current code does an early return from md_crosscheck to md_run which then continues ... with many key arrays unallocated and then crashes. The fix is for md_crosscheck to return an error code in this situation.",
            "content_updated_on": "2010-08-24 18:08:56+01",
            "created_on": "2010-08-24 17:48:39+01",
            "id": 314,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Error with MD and zero degrees of freedom",
            "updated_on": "2010-08-24 18:08:56+01"
        },
        {
            "assignee": null,
            "content": "
Reported originally by Bjoern Winkler (Frankfurt) on a fairly complex system, now reproduced on a smaller one (see attached). The crash from Windows debugger looks like this:

	forrtl: severe (408): fort: (2): Subscript #1 of the array USE_CUSTOM_TS_PARAMS

	has value 3 which is greater than the upper bound of 2

	 

	Image              PC        Routine            Line        Source

	castepexe.exe      0333AC0A  Unknown               Unknown  Unknown

	castepexe.exe      0325112A  Unknown               Unknown  Unknown

	castepexe.exe      0325195E  Unknown               Unknown  Unknown

	castepexe.exe      0319E2A4  _SEMP_DISP_CORR_m         893  semp_disp_corr.f90

	castepexe.exe      031AE9D4  _SEMP_DISP_CORR_m        1397  semp_disp_corr.f90

	castepexe.exe      031AC7E9  _SEMP_DISP_CORR_m        1346  semp_disp_corr.f90

	castepexe.exe      0319D86A  _SEMP_DISP_CORR_m         873  semp_disp_corr.f90

	castepexe.exe      031A3AED  _SEMP_DISP_CORR_m        1112  semp_disp_corr.f90

	castepexe.exe      03196BF5  _SEMP_DISP_CORR_m         496  semp_disp_corr.f90

	castepexe.exe      00ED3F94  _DFTD_mp_DFTD_SED         567  dftd.f90

	castepexe.exe      00ED12EB  _DFTD_mp_DFTD_SED          98  dftd.f90

	castepexe.exe      01C90AED  _ELECTRONIC_mp_EL         741  electronic.f90

	castepexe.exe      0124C1FD  _PHONON_mp_PHONON        4081  phonon.f90

	castepexe.exe      011E9A34  _PHONON_mp_PHONON         615  phonon.f90

	castepexe.exe      004060F9  _MAIN__                   529  castep.f90

This looks like a cell_copy issue - arrays are still dimensioned as 2 when the call for a supercell comes in and tries to fill them up to 54.

The ay to reproduce is to run Si2 fileset, copy Si2.check into Si2_PhonDOS.check and run Si2_PhonDOS  fileset
",
            "content_updated_on": "2014-02-11 16:40:04+00",
            "created_on": "2014-01-20 12:11:31+00",
            "id": 971,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "DFT-D finite displacement calculations crash",
            "updated_on": "2014-02-11 16:40:04+00"
        },
        {
            "assignee": null,
            "content": "
This is a perennial request for CASTEP: there are various reasons, and overall it seems like a fundamental feature to have for studies of say electronic properties of heavy elements or of magnetic properties.
",
            "content_updated_on": "2014-05-22 10:25:08+01",
            "created_on": "2009-07-22 13:45:25+01",
            "id": 161,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Add spin-orbit coupling",
            "updated_on": "2014-05-22 10:25:08+01"
        },
        {
            "assignee": null,
            "content": "
While setting up for the CASTEP workshop using 16 core runs or Darwin (Cambridge HPC resource). The parallel efficiency report gives a negative number:
",
            "content_updated_on": "2014-09-03 13:57:28+01",
            "created_on": "2014-08-18 15:09:56+01",
            "id": 1100,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Very short runs give negative efficiency reports",
            "updated_on": "2014-09-03 13:57:28+01"
        },
        {
            "assignee": null,
            "content": "There is a bug in that the standard calculation for MD ndof subtracts one for each non-linear constraint found. This is fine for bond length constraints, or angle/torsion constraints. However, a fix_atom constraint should reduce this by three and this is what is missed.",
            "content_updated_on": "2010-08-24 18:07:56+01",
            "created_on": "2010-08-24 17:46:07+01",
            "id": 313,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Error with MD number of degrees of freedom and nonlinear constaints",
            "updated_on": "2010-08-24 18:07:56+01"
        },
        {
            "assignee": null,
            "content": "
Dan Jones reported an implementation error in screened exchange with spin

-----------------------------------------------------------------------------------------------

	Can you check this for me, I think there is a bug in xc_shfs_lsda. During the second loop over grid points, i.e. when computing the exchange contribution the variable sprho is not updated. I think it's value remains den%real_spin(num_fine_real_points) throughout this part of the computation.

	 

	There's an obvious and simple fix, I just want to make sure that it isn't intentional.

	 

	--- a/Source/Functional/xc.f90
	+++ b/Source/Functional/xc.f90
	@@ -3215,8 +3215,10 @@
	        ! Make sure charge is sane
	        if(den%have_cmplx_den)then
	           rho = max(real(den%charge(n),dp),dtol)
	+          sprho = real(den%spin(n),kind=dp)
	        else
	           rho = max(den%real_charge(n),dtol)
	+          sprho = den%real_spin(n)
	        end if
	 

	-----------------------------------------------------------------------------------------------------

	Hi,
	
		 
	
		Yes, that seems right.
	
		 
	
		Thanks,
	
		Stewart.


 
",
            "content_updated_on": "2014-01-31 12:36:38+00",
            "created_on": "2014-01-31 12:34:41+00",
            "id": 978,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Implementation bug in spin-polarized sc-LDA",
            "updated_on": "2014-01-31 12:36:38+00"
        },
        {
            "assignee": null,
            "content": "
I think this is related to Keith's bug #14


I want to do a fixed cell, no stress, geometry-optimisation. I don't set finite_basis_corr.

If I start this as a fresh calculation, I get  finite_basis_corr=0 (good)

If I restart from an initial singlepoint calculation I get finite_basis_corr=2 (bad)
(of course I can remember to set finite_basis_corr=0 explicitly)

There is a comment in parameters.F90 about setting finite_basis_corr on restarts, and something to do with MatStu. Anyhow, if it is possible it would be good for CASTEP to treat the above situations consistently. I put a trivial test case below (note this will abort if finite_basis_corr=2)",
            "content_updated_on": "2009-07-14 16:13:11+01",
            "created_on": "2008-12-03 12:44:35+00",
            "id": 84,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "finite_basis_corr on continuation",
            "updated_on": "2009-07-14 16:13:11+01"
        },
        {
            "assignee": null,
            "content": "
This one has absolutely no performance impact, but luckily is also easy to fix.

The following snippet is in README.INSTALL

     Earlier versions and other compilers have also been successfully
     used. However the two above are recommended for performance and avoidance
     of known bugs.

The highlighted part makes no sense, as there are not two [compilers",
            "content_updated_on": "2014-02-06 18:05:18+00",
            "created_on": "2014-02-05 16:54:06+00",
            "id": 979,
            "kind": "bug"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Leftover sentence in README.INSTALL: Unclear reference to earlier versions",
            "updated_on": "2014-02-06 18:05:18+00"
        },
        {
            "assignee": null,
            "content": "The long saga of choosing finer convergence tolerances for certain
tasks, when the task is changed on continuation is not quite over....

The problem
-----------------------------------------
I have a patch for the problem, which is restricted to a very small
change set in parameters. (ie my 3rd suggestion from yesterday) It
works in serial and parallel and passes my small tests.  Please will
you all test this on any continuation runs. There is a small risk of
exposing pre-existing but sleeping bugs in some setup code which was
previously never called, so if anyone has any tests, here is where I
think the behaviour will change:

1. Elec_energy_tol and other parameters should be modified for 
   continuation calculations when switching TASK to PHONON, 
   PHONON+EFIELD,EFIELD, THERMODYNAMICS or MAGRES

2. When switching task on continuation to 
   GEOMETRYOPTIMIZATION,MOLECULARDYNAMICS or GENETICALGOR
   it will now perform a finite basis set correction calculation,
   unconditionally, (ie even for a fixed-cell calculation.  I don't
   think this is the correct thing to do, but it should not affect 
   calculations set up by MS) 


The fix which went into 4.3
----------------------------
I have a patch for the problem, which is restricted to a very small
change set in parameters. (ie my 3rd suggestion from yesterday) It
works in serial and parallel and passes my small tests.  Please will
you all test this on any continuation runs. There is a small risk of
exposing pre-existing but sleeping bugs in some setup code which was
previously never called, so if anyone has any tests, here is where I
think the behaviour will change:

1. Elec_energy_tol and other parameters should be modified for 
   continuation calculations when switching TASK to PHONON, 
   PHONON+EFIELD,EFIELD, THERMODYNAMICS or MAGRES

2. When switching task on continuation to 
   GEOMETRYOPTIMIZATION,MOLECULARDYNAMICS or GENETICALGOR
   it will now perform a finite basis set correction calculation,
   unconditionally, (ie even for a fixed-cell calculation.  I don't
   think this is the correct thing to do, but it should not affect 
   calculations set up by MS) 

--------------------------------------------------------
A little follow up.  I've been exploring the restart behaviour as
occasioned by my fix.  While it achieves the specific objective I don't
think the continuation behaviour is ideal, and a more thorough revision
is called form.

First, a general item of behaviour.  If you restart any calculation
using a .param file consisting of just the line &amp;quot;continuation
&amp;lt;seed&amp;gt;.check&amp;quot; the task reverts to SINGLEPOINT.  This is a consequence
of &amp;quot;preserve=.true.&amp;quot; failing to restore the task from the checkpoint.
Is this really the intended behaviour?  From inspection I think this is
the only parameter for which this is not the expected behaviour.

Second, and on the specific case of resetting defaults on  continuation,
the current behaviour (with my patch) is still not ideal in every case.
This was my fault for not thinking clearly enough about the desired
behaviour when making my request.  The logic is not doing the correct
thing in the case where the task is changed from one of the
&amp;quot;phonon-group&amp;quot; of tasks to another in the same group.  So changing from
PHONON to PHONON+EFIELD or  THERMODYNAMICS resets ELEC_ENERGY_TOL.
A description of my preferred behaviour is that if and only if
the task  was changed from a non-member of this set to a member
of this set should the default be reset on a task-specific basis.
I realise that this is more of a pain to code, so I'll understand if
you think it would make things too ugly.

The other case of the current continuation logic failing to do the
&amp;quot;right thing&amp;quot; occurs when the task changes to MD, GEOMETRYOPTIMISATION
or GENETICALGOR.  In this case the code always performs a finite basis
set correction, irrespective of whether this is a variable-cell
correction.  This code is not active until my patch is applied, but
the behaviour is now revealed.",
            "content_updated_on": "2009-07-14 16:12:19+01",
            "created_on": "2008-04-17 08:35:33+01",
            "id": 14,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Special case code for defaults on continuation still needs work",
            "updated_on": "2009-07-14 16:12:19+01"
        },
        {
            "assignee": null,
            "content": "The BFGS geometry optimiser uses a number of files with
extension &amp;quot;.bfgs_extrap&amp;quot; for temporary storage.  These
are not needed after completion and should be deleted
on successful exit.

(Are they useful for a continuation? should they also be deleted
on an abort condition?)


",
            "content_updated_on": "2008-07-23 10:29:42+01",
            "created_on": "2008-04-17 08:20:29+01",
            "id": 12,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "BFGS geom opt should delete .bfgs_extrap files on successful exit",
            "updated_on": "2008-07-23 10:29:42+01"
        },
        {
            "assignee": null,
            "content": "Reported by Sasha.
&amp;quot;Runs with paging do not converge SCF for the second cutoff energy while &amp;quot;no paging&amp;quot; is perfectly OK (stopped by the user). Note that the random seed was set, so the expectation was of a perfectly reproducible run.

Found while trying to fix bug 09117cmkx01 where I suspect the way wavefunction is dumped can be optimized to use smaller chunks.&amp;quot;",
            "content_updated_on": "2009-09-10 14:17:39+01",
            "created_on": "2009-08-12 08:59:23+01",
            "id": 172,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FBSC runs with and without paging are completely different",
            "updated_on": "2009-09-10 14:17:39+01"
        },
        {
            "assignee": null,
            "content": "the tests in subroutine cell_restore for whether a pseudopotential has
changed on continuation only compares the full names of the pseudopotential files.  This

a) Disallows reading of the XX_OTF.usp file from the initial run on a continuation
b) means that a full pathname in the filename means the check can not be 
   moved between machines and the pseudopotential files can not be moved.

At minimum the test should strip the directory components of the name stored
in current_cell so that check files can be moved where full names/or PSPOT_DIR are used. 

In collaboration with ion, where no pseudopotential file or string is specified
the default should be copied into current_cell%species pot so the check file is
still valid for future releases if the default OTF configuration is changed.

Ideally it would be good to find some way of testing the *contents* of the
files rather than the name, but this seems awfully complicated. 
",
            "content_updated_on": "2008-05-21 10:37:53+01",
            "created_on": "2008-04-16 16:32:57+01",
            "id": 11,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Cell_restore test for pseudopotential changed needs improvement",
            "updated_on": "2008-05-21 10:37:53+01"
        },
        {
            "assignee": null,
            "content": "I am having some problems with the FeO runs apparently hanging
immediately on entry to the bandstructure calculation,  I have traced
this to the loop at line 1965 in nlxc_basis.F90

                      do while(abs(dI)&amp;gt;ppd_tol)

                         gdim=2*gdim

integral_new=ppd_integrate_3(gqk_cart,k_scrn(ns),grid_dim=gdim)
                         dI=integral_new-integral
                         integral=integral_new

                      end do

which is apparently not converging.  I have seen gdim as high as 1024
(and still counting).  This is for a 4x4x4 MP grid on B1 FeO.

One of my collaborators at Imperial is also experiencing a similar
&amp;quot;hang&amp;quot; problem on a different system using PPD integration.

The same problem appears to happen in the development head but I have
not run it under the debugger to check that it's the same issue.",
            "content_updated_on": "2009-09-09 13:07:32+01",
            "created_on": "2008-08-08 12:45:01+01",
            "id": 55,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PPD Integration loops forever for variable occupancy NLXC calculation",
            "updated_on": "2009-09-09 13:07:32+01"
        },
        {
            "assignee": null,
            "content": "The continuation behaviour regarding %BLOCK PHONON_GAMMA_DIRECTIONS
is incorrect.

Subroutine CELL_READ_PHONON_DATA unconditionally sets 
num_phonon_gamma_directions=0. (line 7038 in 4.3).  When
called from MODEL_CONTINUATION via CELL_REREAD This
wipes out the values restored from the .check file.

The result is that a continuation run sets up the global
variables as if the block had not been read from the .cell file.

The solution is probably to move the assignment inside the
conditional   if(keyword_present(ikey_phonon_gamma_directions))
and to ensure a once-only initialisation to zero elsewhere

Keith
",
            "content_updated_on": "2008-07-22 17:11:59+01",
            "created_on": "2008-06-30 11:40:50+01",
            "id": 33,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "BLOCK PHONON_GAMMA_DIRECTIONS deleted on continuation reread",
            "updated_on": "2008-07-22 17:11:59+01"
        },
        {
            "assignee": null,
            "content": "The orbitals2bands program is not coded to work in k-point
parallel - there is a built in assumption that k-points are
all on the same node.  If a run is attempted using k-point
parallelism it fails with a non-intuitive message that the
number of k-points is wrong.

It needs (a) a lock-out against k-point parallel (change
value of DATA_DISTRIBUTION) and (b) testing if gv-parallelism
actually works.
",
            "content_updated_on": "2009-01-06 18:18:49+00",
            "created_on": "2009-01-06 14:54:35+00",
            "id": 96,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Orbitals2bands fails with poor diagnostic in k-point parallel",
            "updated_on": "2009-01-06 18:18:49+00"
        },
        {
            "assignee": null,
            "content": "Our Japanese support people are fighting with BTO - they are very happy
with
the latest potentials Keith provided, as they give dispersion with expected soft modes.
However, for various reasons they are still struggling to put LO-TO in. The latest case led me to
think that perhaps something is not quite right in the restarts. I attached the output/input from
the restart calculation; the main problem as far as I can see is:

- .param reread correctly says
that LO-TO is changed from F to T
-  .castep says: Restarting Phonon calculation: Frequencies for
q-points 1 to      27 recovered from .check file.
- the frequencies as printed do not have LO-TO
splitting, and there is no sign that two Gamma directions from cell file have been used


Comment: KR - on investigation - it looks as if a P_G_D in the interior of this run was not actually ",
            "content_updated_on": "2008-08-10 13:00:33+01",
            "created_on": "2008-07-21 16:31:01+01",
            "id": 52,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Copy of Accelrys 08182vymq02",
            "updated_on": "2008-08-10 13:00:33+01"
        },
        {
            "assignee": null,
            "content": "The simplest input files for a geometry optimization (eg Si2 primitive)
yields a warning

WARNING - user ionic constraints and symmetry specified
        - symmetry has precedence over constraints
        - may lead to a conflict?

because FIX_COM is on. Fixed COM is NEVER in conflict with symmetry, so
perhaps the test logic should exclude this case.  In the case of a
cell-only optimization for the diamond structure it is doubly redundant.
",
            "content_updated_on": "2008-07-23 22:20:11+01",
            "created_on": "2008-05-14 06:42:11+01",
            "id": 23,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Default FIX_COM causes BFGS warning message",
            "updated_on": "2008-07-23 22:20:11+01"
        },
        {
            "assignee": null,
            "content": "The extrapolation scheme for finite displacement phonons currently
enabled by  devel_code SECONDD_DENSITY_SCHEME should be controlled
by a real parameter, and (after some performance testing) made the default.
",
            "content_updated_on": "2008-09-02 12:43:58+01",
            "created_on": "2008-04-17 08:43:35+01",
            "id": 15,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Finite-displacement phonons : devel_code SECONDD_DENSITY_SCHEME needs to be regularised",
            "updated_on": "2008-09-02 12:43:58+01"
        },
        {
            "assignee": null,
            "content": "
The CODATA constants are a vitally important piece of metadata.  As CASTEP 8 can be recompiled with different versions, this *MUST* be recorded in the .castep file

 
",
            "content_updated_on": "2014-09-08 15:36:57+01",
            "created_on": "2014-09-07 16:50:45+01",
            "id": 1116,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Add CODATA version information to header",
            "updated_on": "2014-09-08 15:36:57+01"
        },
        {
            "assignee": null,
            "content": "I'm not sure that the peak memory reported is correct.

in io we have
write(message,'(i20)')vmsize-vmexe

which (on a x86_64 tcm machine) will give the virtual memory used at the end of the castep run (don't trust me on this!).

I'd have thought we'd need vmpeak - to get a number close to the highwater mark of data allocated by castep. (even vmrss would be more useful than vmsize?)


from /proc/self/status

VmPeak:	    2612 kB
VmSize:	    2612 kB
VmLck:	       0 kB
VmHWM:	     424 kB
VmRSS:	     424 kB
VmData:	     164 kB
VmStk:	      84 kB
VmExe:	      20 kB
VmLib:	    1288 kB
VmPTE:	      20 kB
",
            "content_updated_on": "2009-04-13 17:42:23+01",
            "created_on": "2009-02-14 18:01:27+00",
            "id": 110,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "peak memory report",
            "updated_on": "2009-04-13 17:42:23+01"
        },
        {
            "assignee": null,
            "content": "From Bjoern Winkler

CASTEP requires the sum of the weights of k-points to be 1 to some very high 
accuracy.

At the  moment a deviation of 0.25 * 10** -6 is sufficient for a job not to 
run. I am not sure if this is necessary, but the error message at the moment 
reads 

ERROR in cell_read_phonon_fine_data: sum of fine phonon q-point weights is not  
1.0


I would think it useful if this was extended to read
... sum of fine phonon q-point weights (= x.yyyyyyyyyy) is not 1.0

and maybe even state to which accuracy it needs to be given (i.e is not 
1.00000000) ",
            "content_updated_on": "2009-09-09 15:14:50+01",
            "created_on": "2008-12-04 09:43:06+00",
            "id": 85,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Improve some error messages about kpoint_weights",
            "updated_on": "2009-09-09 15:14:50+01"
        },
        {
            "assignee": null,
            "content": "From Stewart Clark

********************************************************************************
     Secondd_symmetry_solve: matrices inconsistent with transformation

             Phase =   1.000000  0.000000

                     Rotation Matrix
             0.670328  0.297802  0.679687
             0.742065 -0.269013 -0.613980
             0.000000  0.915940 -0.401315

            Input matrix                    Output matrix
    -0.3037   -0.5792   -0.2975       -0.2234   -0.4903   -0.2975
    -0.5968    0.5641    1.4157       -0.5079    0.6625    1.4157
    -0.3089    0.0144    0.5079       -0.3089    0.0144    0.5079
     0.0000    0.0000    0.0000        0.0000    0.0000    0.0000
     0.0000    0.0000    0.0000        0.0000    0.0000    0.0000
     0.0000    0.0000    0.0000        0.0000    0.0000    0.0000

********************************************************************************

and the .err file contains:

  Internal error in secondd_symmetry_solve: matrices inconsistent with 
transformation
Current trace stack:
  secondd_symmetry_solve
  secondd_complete_using_solve
  secondd_symmetry_complete_cmplx
  secondd_phonon_linear_response
  secondd_dynamical_matrix
  phonon_calculate_std_kpoints
  phonon_calculate
  castep

The testcase was MgCO3 with the rhombohedral cell oriented in a &amp;quot;lower diagonal&amp;quot; cell matrix, ie not along the major symmetry directions, and with correctly oriented symmetry ops (from Materials Studio)


",
            "content_updated_on": "2009-01-06 16:37:41+00",
            "created_on": "2008-10-24 14:27:10+01",
            "id": 68,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Symmetry completion bug",
            "updated_on": "2009-01-06 16:37:41+00"
        },
        {
            "assignee": null,
            "content": "Earlier versions of the bandstructure code had terrible 
convergence problems, which resulted in the need to set
very high values of parameters BS_MAX_CG_STEPS and BS_MAX_ITER.

Special case code to increase the defaults in a task-dependent
way for phonon tasts was implemented in parameters_read.  With
the new Hamiltonian module this is no longer necessary, and the 
special case code can now be removed.

Perhaps it can be removed for MAGRES DFPT calculations too - ask Jonathan.

The custom defaults to elec_energy_tol should stay however, as we
still nned the accurate density from the initial SCF calculation.
",
            "content_updated_on": "2009-07-13 13:39:23+01",
            "created_on": "2009-04-01 09:11:58+01",
            "id": 116,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Remove special case handling of BS_MAX_CG_STEPS and BS_MAX_ITER from parameters",
            "updated_on": "2009-07-13 13:39:23+01"
        },
        {
            "assignee": null,
            "content": "To optimise phonon calculations and enable K290 to detect symmetries,
it would be useful if a cell specified by a,b,c,alpha,beta,gamma
were orientated with symmetry axes aligned to Cartesian directions.

This could be achieved by detecting the Bravais lattice from the
values of the cell parameters (including the primitive F, I and
face centred cells). Logic to do this in part is in the
cteprouts.pm Tools code.
",
            "content_updated_on": "2009-01-21 11:46:35+00",
            "created_on": "2008-12-02 09:12:24+00",
            "id": 82,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Generate high-symmetry orientations of cell for LATTICE_ABC",
            "updated_on": "2009-01-21 11:46:35+00"
        },
        {
            "assignee": null,
            "content": "PIMD restarts are broken in v4.3 but not in v4.2 and earlier (according to Matt Probert). It is quite possible that by now they have been fixed...",
            "content_updated_on": "2009-07-10 15:30:22+01",
            "created_on": "2009-05-12 15:09:01+01",
            "id": 126,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PIMD restarts are broken",
            "updated_on": "2009-07-10 15:30:22+01"
        },
        {
            "assignee": null,
            "content": "I have noticed that the help output for &amp;quot;castep -help all&amp;quot; is not
working correctly.  The cause appears to be that in the list of cell
keywords, key 91 has no help information at all (and is otherwise
unused).

Obviously the immediate cure is to add some help info for cell keyword
#91, but i wonder too, if io_freeform_help should be coded to skip an
invalid entry instead of aborting.  That would make the help more
robust against future errors.

Actually this has been present since 4.3",
            "content_updated_on": "2008-12-13 17:43:11+00",
            "created_on": "2008-10-28 11:37:52+00",
            "id": 69,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bug in help output - &quot;all&quot; not working",
            "updated_on": "2008-12-13 17:43:11+00"
        },
        {
            "assignee": null,
            "content": "Fourier interpolation runs with no symmetry operations generate nonsensical
output.

The dynamical matrix symmetry handling code in secondd_apply_symmetry_to_dmat
does not handle the case of no symmetry at all.  In that case it silently
returns a dynamical matrix consisting entirely  of zeros.  Because this
can be called with an identity matrix and, for example, an inversion in
the course of Fourier interpolation the constructed force constant matrix can be zero.

Workaround:  Run with 1 symmetry operation, the identity.  The &amp;quot;phonons&amp;quot; code
does this automatically.
",
            "content_updated_on": "2008-12-23 08:29:32+00",
            "created_on": "2008-12-16 10:12:22+00",
            "id": 91,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon Fourier interpolation fails if num_symmetry_operations=0",
            "updated_on": "2008-12-23 08:29:32+00"
        },
        {
            "assignee": null,
            "content": "If a FD phonon calculation has been performed on a large simulation
cell, this allows the calculation of only gamma modes.  But a
continuation calculation could populate the force constant matrix
for a 1x1x1 supercell from the stored gamma point dynamical matrix,
and allow dispersion and DOS.

",
            "content_updated_on": "2009-06-26 10:31:42+01",
            "created_on": "2008-12-02 09:15:05+00",
            "id": 83,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Enable 1x1x1 supercell phonon calculation as continuation of non-supercell",
            "updated_on": "2009-06-26 10:31:42+01"
        },
        {
            "assignee": null,
            "content": "The code in PARAMETERS_REREAD which sets PHONON_METHOD to FINITEDISPLACEMENT
if PHONON_FINE_METHOD=SUPERCELL fails to also update SECONDD_METHOD as it should.

This can cause the propagation of a value LINEARRESPONSE into a supercell calculation and a subseqent (incorrect) abort.

The attached patch fixes the problem.

However, I don't see any point in maintaining separate versions of the variable
under two names, so perhaps a better option would be to eliminate the
module variable SECONDD_METHOD entirely.  Nothing in the phonon code refers to
it any more.  Then the parameter SECONDD_METHOD could be retained as an obsolete
alias only.  And parameters_reread could set variable PHONON_METHOD from
what was SECONDD_METHOD for older check files which included this.  For check
files containing both, then PHONON_METHOD should take precedence (though they
really should be identical).

",
            "content_updated_on": "2009-07-13 13:30:16+01",
            "created_on": "2009-07-06 09:07:21+01",
            "id": 147,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SECONDD_METHOD out of sync with PHONON_METHOD",
            "updated_on": "2009-07-13 13:30:16+01"
        },
        {
            "assignee": null,
            "content": "The anisotropic interpolation method give bad results - huge imaginary
frequencies for a 5x5x5 CaCO3 (trigonal) phonon calculation for certain wavevector directions.  This does not happen with normal, spherical interpolation.  

Curiously wavevectors along the Gamma-Z direction are fine.

",
            "content_updated_on": "2009-04-13 17:11:52+01",
            "created_on": "2009-02-16 10:33:15+00",
            "id": 111,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PHONON_FORCE_CONSTANT_ELLIPSOID=1.0 fails for CaCO3",
            "updated_on": "2009-04-13 17:11:52+01"
        },
        {
            "assignee": null,
            "content": "As of 11 May FD_phonons test case stopped working (it was OK in the 8th May tests). It now stops with:

 Phonon perturbation    1 (of    2): B  ion   1 X at q-point (  0.000  0.000  0.000) :       0.99 s
Wvfn Norms
    1    1  0.9999716480564600  1.0000750522194002  0.9999739576418500  1.0000277496019452
            0.9997863686487219  0.9999401527953855  1.0000720633071851  1.0001826414752859
Error in phonon_wave_read_unfold: Some k-points missing from fd_wvfn file (or are not normalised)
Current trace stack:
 phonon_wave_read_unfold
 phonon_fd_perturbation
 phonon_finite_displacement
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep

This is the same for serial and parallel.",
            "content_updated_on": "2009-05-13 16:44:44+01",
            "created_on": "2009-05-12 15:42:30+01",
            "id": 129,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FD phonon regression test fails phonon_wave_read_unfold",
            "updated_on": "2009-05-13 16:44:44+01"
        },
        {
            "assignee": null,
            "content": "The cell public variables PHONON_KPOINT_MP_GRID, PHONON_KPOINT_MP_OFFSET
and the FINE equivalents are not restored to the correct values by
CELL_RESTORE_GLOBALS and in fact retail their previous values which may
be wrong.

These variables are neither written to nor read from a checkpoint file
by cell_dump_globals/cell_restore globals.  Continuation phonon calculations
performing interpolation require the values and usually fall over unless
the original phonon_kpoint set is propagated identically from the original
.cell file to the continuation .cell file.

It should not be necessary to store the values in the .check file as they can
be regenerated simply.  Eg the code in cell_resore_globals:


        case('PHONON_KPOINTS')
          if (allocated(phonon_kpoints)) then
             deallocate(phonon_kpoints,stat=stat)
             if (stat/=0) call io_abort('Error in deallocating phonon_kpoints in cell_restore_global')
          endif
          allocate(phonon_kpoints(3,num_phonon_kpoints),stat=stat)
          if (stat/=0) call io_abort('Out of RAM for phonon_kpoints in cell_restore_global')
          if(root_node_id.eq.my_node_id)then
             read(unit,iostat=iostat)phonon_kpoints
             if(iostat/=0)call io_abort('ERROR in cell_restore_global: cannot read phonon_kpoints')
          endif
          call comms_gcopy(phonon_kpoints(1,1),3*num_phonon_kpoints)

          ! Attempt to detect MP grid
          call cell_detect_MP(phonon_kpoints,local_grid,local_offset,detected)
          if(detected)then
             phonon_kpoint_mp_grid=local_grid
             phonon_kpoint_mp_offset=local_offset
          endif
          call comms_gcopy(phonon_kpoint_mp_grid(1),3)
          call comms_gcopy(phonon_kpoint_mp_offset(1),3)

appears to work.

A similar problem may apply to other kpoint sets as well.
",
            "content_updated_on": "2009-04-06 08:12:06+01",
            "created_on": "2008-11-11 17:50:04+00",
            "id": 78,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "phonon_kpoint_mp_grid not set up correctly following continuation",
            "updated_on": "2009-04-06 08:12:06+01"
        },
        {
            "assignee": null,
            "content": "ARTS show the following failure in parallel (on 3, not 2 or 4):

Error with zhetrf in nlpot_prepare_precon_ks
Current trace stack:
 nlpot_prepare_precon_ks
 hamiltonian_diagonalise_slice
 magres_efg_calc_aug
 magres_efg_calculate
 magres_run
 castep

Win32 seems to work without this message, but the answers deviate from baseline rather beyond the tolerance.",
            "content_updated_on": "2009-08-09 21:47:41+01",
            "created_on": "2009-07-22 16:25:30+01",
            "id": 162,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Parallel failure in hamiltonian_diagonalise_slice called from NMR/EFG",
            "updated_on": "2009-08-09 21:47:41+01"
        },
        {
            "assignee": null,
            "content": "
There are a few changes in .bands reporting after CASTEP change 6261:0eb1bfe8fda4, and they all seem to be in the NMR regression runs. For example:

C2-1kpt-shield-spd-mag now shows 8 bands, but the last four have zero energy (used to be 4 bands) Similar for C2H5OH-efg-shield-xal-spd-mag, but with 14 bands (last four empty) (used to be 10 bands) H-shield-xal-mem-mag now shows spin up and down, used to have only one spin - probably now correct?

Jonathan's comment is:

	We realised that magres does something 'bad' in that it refines the groundstate wavefunctions. The design philosophy is that they should not be modified from the groundstate run. So I should be making a copy to work on (and paging the scf ones to disk). I will add this to my to-do list. 

	 

	Phil's changes have highlighted this - but is it not a bug, or a real change. (in the past the extra bands were there, just not written out).
",
            "content_updated_on": "2014-09-06 18:56:50+01",
            "created_on": "2014-02-26 13:50:36+00",
            "id": 985,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": ".bands reporting has changed after check-in 6261:0eb1bfe8fda4",
            "updated_on": "2014-09-06 18:56:50+01"
        },
        {
            "assignee": null,
            "content": "FD_phonons test case stops with:

Error, nk &amp;gt; wvfn%nkpts in wave_Snormalise_wv_ks
Current trace stack:
 wave_Snormalise_wv_ks
 phonon_wave_read_unfold
 phonon_fd_perturbation
 phonon_finite_displacement
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep

When I run in debugger (Win32), the code stops earlier:

forrtl: severe (408): fort: (3): Subscript #1 of the array FULL_IRR_MAP has value 0 which is less than the lower bound of 1

The trace is:
	castepexe.exe!SECONDD_SYMMETRY::SECONDD_MAP_IRREDUCIBLE_KPOINTS(INTEGER(4)  NKPTS_FULL= Undefined address, REAL(8)  KPOINTS_FULL= Undefined address, INTEGER(4)  NKPTS_IRR= Undefined address, REAL(8)  KPOINTS_IRR= Undefined address, INTEGER(4)  NUM_SYMMETRY_OPERATIONS= Undefined address, REAL(8)  SYMMETRY_OPERATIONS= Undefined address, REAL(8)  SYMMETRY_DISPS= Undefined address, INTEGER(4)  SYMMETRY_EQUIV_ATOMS= Undefined address, TYPE(KPT_RELATE_MAP)  KPT_SYMM_RELATE= Undefined address)  Line 6273 + 0x328 bytes	Fortran
 	castepexe.exe!PHONON::PHONON_WAVE_READ_UNFOLD(INTEGER(4)  WVFN_UNIT= Undefined address, INTEGER(4)  NKPTS_IRR= Undefined address, REAL(8)  KPOINTS_IRR= Undefined address, REAL(8)  SYMMETRY_OPERATIONS_ORIG= Undefined address, REAL(8)  SYMMETRY_DISPS_ORIG= Undefined address, INTEGER(4)  SYMMETRY_EQUIV_ATOMS_ORIG= Undefined address, TYPE(WAVEFUNCTION)  WVFN= Undefined address)  Line 4584 + 0x73 bytes	Fortran
 	castepexe.exe!PHONON::PHONON_FD_PERTURBATION(INTEGER(4)  NI=1, INTEGER(4)  NSP=1, INTEGER(4)  ALPHA=1, TYPE(MODEL_STATE)  MDL={...}, TYPE(WAVEFUNCTION)  FD_WVFN={...}, INTEGER(4)  DEN_UNIT=15, INTEGER(4)  WVFN_UNIT=14, REAL(8)  INPUT_OCC={...}, REAL(8)  ROW={...}, LOGICAL(4)  CONVERGED=.TRUE., TYPE(ELECTRON_DENSITY)  INPUT_DEN= Undefined pointer/array, REAL(8)  BC_ROW= Undefined address, INTEGER(4)  LOCAL_IPRINT= Undefined pointer/array)  Line 3402 + 0x10e bytes	Fortran
 	castepexe.exe!PHONON::PHONON_FINITE_DISPLACEMENT(TYPE(MODEL_STATE)  MDL={...}, TYPE(ELECTRON_DENSITY)  INPUT_DEN={...}, INTEGER(4)  WVFN_UNIT=14, REAL(8)  INPUT_OCC={...}, REAL(8)  DYNAMICAL_MATRIX={...}, LOGICAL(4)  CONVERGED=.TRUE., INTEGER(4)  LOCAL_IPRINT= Undefined pointer/array)  Line 3099 + 0x131 bytes	Fortran
 	castepexe.exe!PHONON::PHONON_DYNAMICAL_MATRIX(REAL(8)  QPOINT={...}, TYPE(MODEL_STATE)  MDL={...}, COMPLEX(8)  DYNAMICAL_MATRIX={...}, LOGICAL(4)  BORN_CORRECTION= Undefined pointer/array, REAL(8)  BORN_CHARGE= Undefined address, LOGICAL(4)  CONVERGED=.TRUE.)  Line 2421 + 0x50 bytes	Fortran
 	castepexe.exe!PHONON::PHONON_CALCULATE_STD_KPOINTS(TYPE(MODEL_STATE)  MDL= Undefined address, INTEGER(4)  CONVERGENCE_FAIL_COUNT= Undefined address, LOGICAL(4)  WRITE_AS_YOU_GO= Undefined address, INTEGER(4)  FILE_UNIT= Undefined address)  Line 1563 + 0x9d bytes	Fortran
 	castepexe.exe!PHONON::PHONON_CALCULATE(TYPE(MODEL_STATE)  MDL= Undefined address)  Line 926 + 0x2a bytes	Fortran

This seems to be a result of nsymm=4 coming out of the previous loop that calculates kpt_symm_relate(4) - nsymm is then greater than num_symmetry_operations
",
            "content_updated_on": "2009-05-18 14:11:57+01",
            "created_on": "2009-05-18 11:39:32+01",
            "id": 135,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FD phonons broken in parallel (and perhaps in serial too?)",
            "updated_on": "2009-05-18 14:11:57+01"
        },
        {
            "assignee": null,
            "content": "castep_2b example with real-space potentials (8-atom Si) on 8 CPUs stops with

wave_orthonormalise_overlap_wv: zpotrf failed (overlap is not positive definite).
Current trace stack:
 wave_orthonormalise_over_wv_ks
 electronic_wvfn_step
 electronic_line_minimisation
 electronic_iter_diag_H
 electronic_minimisation
 calculate_finite_basis_corr
 check_elec_ground_state
 castep

It runs fine as serial or on 3,4,6 CPUs",
            "content_updated_on": "2009-08-20 08:36:40+01",
            "created_on": "2009-08-10 07:33:40+01",
            "id": 170,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Regression test castep_2b stops on 8 CPUs with zpotrf failure",
            "updated_on": "2009-08-20 08:36:40+01"
        },
        {
            "assignee": null,
            "content": "Running castep help with warnings (eg on ifort) causes a problem as some of the timing variables are not set.

A fix is:
 In check_print_help

set initialisation_time = io_clock() at the start (eg line 3835)

set calculation_time = io_clock() at the end (eg line 3910)

From another point of view, it is a bit odd that calling ./castep writes a file castep.castep containing only some pretty useless information. Is it too much hassle to avoid writing this in the help case? (probably!)",
            "content_updated_on": "2009-06-16 16:54:14+01",
            "created_on": "2009-01-04 00:25:50+00",
            "id": 95,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "castep help and uninitialised timings",
            "updated_on": "2009-06-16 16:54:14+01"
        },
        {
            "assignee": null,
            "content": "It would be useful to know in advance an appropriate number of
k-points to submit a parallel phonon run.  An external command line
standalone utility would be best.

",
            "content_updated_on": "2009-06-24 20:48:31+01",
            "created_on": "2009-02-10 09:21:03+00",
            "id": 104,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Write predictive routine for k-point count/distribution during phonon run",
            "updated_on": "2009-06-24 20:48:31+01"
        },
        {
            "assignee": null,
            "content": "Currently the &amp;quot;thermodynamics&amp;quot; module calculates F and E_zpe following
an interpolation or Supercell calculation phonon only.  It would be useful
to generate estimates for standard calculations too,  but will require
some reworking of the thermodynamics/phonon interface spec.
",
            "content_updated_on": "2009-06-26 09:36:20+01",
            "created_on": "2008-05-12 08:54:40+01",
            "id": 20,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Refomulate ZPE and FE calculation to work without interpolation",
            "updated_on": "2009-06-26 09:36:20+01"
        },
        {
            "assignee": null,
            "content": "
Here is a message from our customer:

Help needed in resolving the program crash problem: The same calculation was attempted twice, and both terminated at the same spot. See attachment.
",
            "content_updated_on": "2014-03-06 17:55:56+00",
            "created_on": "2014-03-03 17:07:24+00",
            "id": 987,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Raman calculation mysteriously terminates",
            "updated_on": "2014-03-06 17:55:56+00"
        },
        {
            "assignee": null,
            "content": "
Add the BLYP functional. This has already been done in a branch - and needs to be merged with the main version.
",
            "content_updated_on": "2016-03-29 15:37:47+01",
            "created_on": "2014-10-13 12:33:16+01",
            "id": 1162,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Add BLYP ",
            "updated_on": "2016-03-29 15:37:47+01"
        },
        {
            "assignee": null,
            "content": "Currently the BFGS warning message says:

BFGS: Warning - trial step suggests complex energy landscape
                 in which simple line minimization will fail.

               - This is usually an indication that the forces/streses
                 are not accurate enough. Consider increasing the cutoff
                 energy and/or the electronic convergence tolerance.

               - Proceeding with a bisection search to find root
instead.

Two other parameters which may have a significant influence here in
addition to electronic convergence and cutoff are grid-scale and
fine-grid-scale.  If either of these is underconverged there will be
inconsistent oscillations in energy and forces as ions are moved
relative to grid points.

I suggest these get a mention in the error message too. Perhaps
mentioning fine grid-scale only if ultrasoft pseudopotentials
are in use [test: if (any(augment)) then ... ",
            "content_updated_on": "2009-07-14 16:21:02+01",
            "created_on": "2008-11-18 17:16:16+00",
            "id": 79,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Mention GRID_SCALE and FINE_GRID_SCALE/GMAX in BFGS warning messages",
            "updated_on": "2009-07-14 16:21:02+01"
        },
        {
            "assignee": null,
            "content": "The customer is running CASTEP on a Windows PC and he is well aware of the 32bit limitation and to use 2 cores in this special case. I think for him this is a principle question.

From the customer:
CASTEP should be changed to make it more insensitive to this kind of problem. 
In fact the SCF part used approximately 1.1 GB (maximum 1.4 GB at some points), so well below the 2GB limit.
The extra memory requirement occurs for the population analysis part, i.e. at the very end, it makes the job crash and the checkfile is not written so that the whole job is lost. One thing would be to - at least - write the checkfile BEFORE entering the population analysis routine.

Victor: I suppose the real issue is with the memory management with the PopAn module - why would it require much more memory than the main calculation?",
            "content_updated_on": "2009-06-30 14:30:26+01",
            "created_on": "2009-06-30 12:39:49+01",
            "id": 141,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Save check file before PopAn calculation (investigate PopAn memory requirements)",
            "updated_on": "2009-06-30 14:30:26+01"
        },
        {
            "assignee": null,
            "content": "(Copied from an exchange on castep-coders):

Keith:
I have just been looking into a problem one of my collaborators has with
bad results from his CASTEP runs (compared to all-electron methods)
which actually turned out to be due to atomic positions significantly
(0.01A) displaced from their symmetry sites.  

With this bad cell CASTEP 4.4 was delivering results which differed by
0.5 eV/atom from a fully symmetrised calculation, but with no other
complaint or warning.  

Energy in P1              : -5671.366722
Energy with symmetry      : -5673.351818
Energy of symmetrised str : -5671.373850

Decreasing symmetry tol causes the startup to fail with 

  ERROR: Symmetry operations not consistent with atomic positions -
investigate symmetry_tol

which is good, but what is bad is that at the default settings 
CASTEP 4.4 uncomplainingly produced a silently wrong energy (by 2eV) 
when fed with bad input.

I suggest that this indicates that the default &amp;quot;symmetry_tol&amp;quot;
needs to be smaller.  Do you agree?  I think this is an opportunity
to guard against input error causing wrong but not obviously wrong
results.

By the way the new symmetry code in 4.5 does now print the degree to
which the symmetry is satisfied, but without a warning that an excessive
value could lead to bad results.

Stewart:
--------
Yes, we should never have Castep fail silently, so symmetry_tol needs looking at. However before doing that, do you have any idea the cause of the error in total energy? In cell, for a given symmetry_tol, the positions are checked against this. If it gets past that then the positions are within the tolerance and cell lets it continue (although now stating the maximum deviation from symmetry). Not sure what else cell can do there.


So, at what point after this is the error occurring? Any idea what's happening in the electronic structure calculation that causes such a large difference? I guess what I might be thinking about is that cell can catch deviations from symmetry, but if we reduce symmetry_tol are we just fixing this one case? What if a smaller deviation is given and cell finds that OK? Where is the total energy actually going wrong? Reducing the default symmetry_tol might not the the correct fix...


NB. In 4.5 (5.0?) cell now has the keyword snap_to_symmetry which does the obvious (and still in testing). Defaulting to true might also be fix (although, again, might not be the correct fix).

and

Agreed. But we are already checking/aborting in cell if the deviation is above symmetry_tol, but your case makes it through. As you said, what value of symmetry_tol can be considered reasonable? If you like, I can reduce this (eg. to 0.001A?) and then write a really BIG warning if it passes but the deviation is bigger than, eg. 1e-10A and suggest the use of snap_to_symmetry.


",
            "content_updated_on": "2009-07-14 15:24:28+01",
            "created_on": "2009-07-04 14:21:19+01",
            "id": 145,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "0.5eV error due to symmetry discrepancy",
            "updated_on": "2009-07-14 15:24:28+01"
        },
        {
            "assignee": null,
            "content": "setting nspins in param file is ingnored

 (either needs to be an alias for spin_polarised, or rejected)",
            "content_updated_on": "2009-08-10 13:30:16+01",
            "created_on": "2009-02-11 17:09:17+00",
            "id": 105,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "nspins is ignored in param file",
            "updated_on": "2009-08-10 13:30:16+01"
        },
        {
            "assignee": null,
            "content": "A CASTEP job with polarizability or phonons and the functional GGA/PBESOL fails with the following in the Efield.castep:

ERROR: XC functional not known PBESOL
Current trace stack:
 xc_calculate_1st_order
 locpot_calculate_1st_order_phon
 secondd_calculate_phonon_E2_var
 secondd_minimise_phonon_E2
 secondd_lr_phonon_perturbation
 phonon_linear_response
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep

",
            "content_updated_on": "2009-07-22 08:48:36+01",
            "created_on": "2009-07-22 08:04:12+01",
            "id": 159,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PBESOL doesn't work with polarizability or phonons jobs",
            "updated_on": "2009-07-22 08:48:36+01"
        },
        {
            "assignee": null,
            "content": "
This string still works with other (GGA) functionals but fails to converge with LDA. This could be related to the changes in changeset 6226:7101a98d63c2 or to MKL changes; could you please check whether this test works in your build?
",
            "content_updated_on": "2014-03-25 18:12:46+00",
            "created_on": "2014-03-04 12:46:54+00",
            "id": 988,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Np OTFG string worked in 7.0 but does not work with the current version",
            "updated_on": "2014-03-25 18:12:46+00"
        },
        {
            "assignee": null,
            "content": "From 08297vymq01 bug report:

nlxc_initialize starts with copying densities, then decides on the values of nlxc_on etc. flags. If it turns out that NLXC is not actually used (as in our test case FD_phonons), then the copying of densities would be a waste of time. Not much, admittedly, but a waste.

",
            "content_updated_on": "2009-07-23 11:55:17+01",
            "created_on": "2009-06-30 12:37:08+01",
            "id": 140,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Improve logic of nlxc_initialize method",
            "updated_on": "2009-07-23 11:55:17+01"
        },
        {
            "assignee": null,
            "content": "BS and NMR calculations have a restart mechanism which depends on having
a .check file containing a converged SCF ground state available in addition
to the application-specific files. But unless the calculation is split into
two as an SPE and a continuation properties calculation there is currently
no mechanism to write the necessary .check file. 

My suggestion was to conditionally call model_write for those calculations which need it.  Stewart's suggestion was to call model_write unconditionally if going onto a properties calculation.  Discuss!

Keith
",
            "content_updated_on": "2009-07-23 14:51:28+01",
            "created_on": "2008-09-02 12:41:59+01",
            "id": 58,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Write .check file after singlepoint in 2-stage calculation",
            "updated_on": "2009-07-23 14:51:28+01"
        },
        {
            "assignee": null,
            "content": "The logic in geometry.F90 (geom_BFGS, line 1462

    !store symmetry operations in current_cell if necessary
    if (.not.fix_all_cell.and.symm_cell) then
       call cell_update_symmetry()
    end if
and 3918 and 3041 in geom_symm_delta

    if (.not.fix_all_cell) then

 [code deleted",
            "content_updated_on": "2009-07-13 13:32:06+01",
            "created_on": "2009-07-04 14:37:18+01",
            "id": 146,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Cell_update_symmetry called incorrectly for ions-only optimisation",
            "updated_on": "2009-07-13 13:32:06+01"
        },
        {
            "assignee": null,
            "content": "The customer is running CASTEP on a Windows PC and he is well aware of the 32bit limitation and to use 2 cores in this special case. I think for him this is a principle question.

From the customer:
CASTEP should be changed to make it more insensitive to this kind of problem. 
In fact the SCF part used approximately 1.1 GB (maximum 1.4 GB at some points), so well below the 2GB limit.
The extra memory requirement occurs for the population analysis part, i.e. at the very end, it makes the job crash and the checkfile is not written so that the whole job is lost. One thing would be to - at least - write the checkfile BEFORE entering the population analysis routine.

Victor: I suppose the real issue is with the memory management in the PopAn module - why would it require more memory than the main calculation?

",
            "content_updated_on": "2009-07-23 14:53:04+01",
            "created_on": "2009-05-12 15:11:54+01",
            "id": 127,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Save check file before population analysis calculation",
            "updated_on": "2009-07-23 14:53:04+01"
        },
        {
            "assignee": null,
            "content": "The regression test case for linear response with interpolation gives platform and CPU dependent answers for the symmetry of Gamma point modes.

There could be also parallel differences - i.e., 2 CPUs differ from 3 CPUs. The issue is with Gamma point along (101) direction - some platforms give this character table

 + -------------------------------------------------------------------------- +
 +  q-pt=   21 (  0.000000  0.000000  0.000000)     0.023256                  +
 +  q-&amp;gt;0 along (  0.707107  0.000000  0.707107)                               +
 + -------------------------------------------------------------------------- +
 +  Acoustic sum rule correction &amp;lt;   3.538502 cm-1 applied                    +
 +     N      Frequency irrep.    ir intensity active            raman active + 
 +                (cm-1)         ((D/A)**2/amu)                               + 
 +                                                                            +
 +     1      -0.018870   a          0.0000000  N                       N     + 
 +     2      -0.018870   a          0.0000000  N                       N     + 
 +     3      -0.018870   a          0.0000000  N                       N     + 
 +     4     534.090110   b          0.0000000  N                       Y     + 
 +     5     534.090110   b          0.0000000  N                       Y     + 
 +     6     534.090110   b          0.0000000  N                       Y     + 
 + .......................................................................... +
 +        Character table from group theory analysis of eigenvectors          +
 + .......................................................................... +

 + Rep Mul |   E   2   2   4   2   I   m   m  -4   m                          +
 +         |----------------------------------------                          +
 +   a   1 |   3  -1  -1   1  -1  -3   1   1  -1   1                          +
 +   b   1 |   3  -1  -1  -1   1   3  -1  -1  -1   1                          +

and some this one:

 + -------------------------------------------------------------------------- +
 +  q-pt=   21 (  0.000000  0.000000  0.000000)     0.023256                  +
 +  q-&amp;gt;0 along (  0.707107  0.000000  0.707107)                               +
 + -------------------------------------------------------------------------- +
 +  Acoustic sum rule correction &amp;lt;   4.399279 cm-1 applied                    +
 +     N      Frequency irrep.    ir intensity active            raman active + 
 +                (cm-1)         ((D/A)**2/amu)                               + 
 +                                                                            +
 +     1      -0.018870   a          0.0000000  N                       N     + 
 +     2      -0.018870   a          0.0000000  N                       N     + 
 +     3      -0.018870   b          0.0000000  N                       N     + 
 +     4     534.083468   c          0.0000000  N                       Y     + 
 +     5     534.083468   c          0.0000000  N                       Y     + 
 +     6     534.083468   c          0.0000000  N                       Y     + 
 + .......................................................................... +
 +        Character table from group theory analysis of eigenvectors          +
 + .......................................................................... +

 + Rep Mul |   E   2   2   4   2   I   m   m  -4   m                          +
 +         |----------------------------------------                          +
 +   a   1 |   2   0  -2   0   0  -2   0   2   0   0                          +
 +   b   1 |   1  -1   1   1  -1  -1   1  -1  -1   1                          +
 +   c   1 |   3  -1  -1  -1   1   3  -1  -1  -1   1                          +

",
            "content_updated_on": "2009-08-16 12:33:48+01",
            "created_on": "2009-05-12 16:15:27+01",
            "id": 130,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Linear response with interpolation gives random symmetry analysis results",
            "updated_on": "2009-08-16 12:33:48+01"
        },
        {
            "assignee": null,
            "content": "Dear Colleagues,

Attached please find a paper with the suggested &amp;quot;Year-2008&amp;quot;
nuclear quadrupole moments. Would it be possible to have
the default Q values inside CASTEP replaced by these later
values? I am happy to help if there are any questions.

Please forward, if necessary.

Regards,

Pekka Pyykko&amp;quot;
I----------------------------------------------------------I
I                    Prof. Pekka Pyykko&amp;quot;                   I 
I                    Department of Chemistry               I
I                    University of Helsinki                I  
I                    P.O.B. 55 (A.I. Virtasen aukio 1)     I
I                 FI-00014 Helsinki                        I  
I                    Finland                               I 
I                                                          I
I  Telephone: 358-9-191 50171                              I  
I  Secretary: 358-9-191 50170                              I 
I  FAX:       358-9-191 50169                              I
I  E-mail:    Pekka.Pyykko@helsinki.fi                     I 
I----------------------------------------------------------I 
I  Did you visit http://rtam.csc.fi/,                      I
I                http://www.chem.helsinki.fi/~pyykko  ?    I
I----------------------------------------------------------I",
            "content_updated_on": "2009-08-10 12:51:07+01",
            "created_on": "2009-08-10 12:49:33+01",
            "id": 171,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "update nuclear quadrupole data",
            "updated_on": "2009-08-10 12:51:07+01"
        },
        {
            "assignee": null,
            "content": "The files attached do a routine CASTEP NMR with spin-polarization (run Fe first, copy check file into Fe_NMR.check, run Fe_NMR). The error exit was originally:

  Starting k-point:   1 of 110                                    |&amp;lt;-- NMR
Error: nb &amp;gt; wvfn_src%nbands_max in wave_copy_wv_bnd
Current trace stack:
 wave_copy_wv_bnd
 magres_nmr_susceptibility
 magres_nmr_current_crystal
 magres_nmr_calculate
 magres_run
 castep

After a fix to magres_nmr.F90 to correct the number of electrons, one gets chemical shift of 1e+8 - I do suspect the problem is with some rubbish in the arrays rather than with physics; it would be great if Jonathan could investigate further.",
            "content_updated_on": "2009-08-20 08:37:16+01",
            "created_on": "2009-05-12 12:51:30+01",
            "id": 124,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Spin-polarized NMR for Fe fails",
            "updated_on": "2009-08-20 08:37:16+01"
        },
        {
            "assignee": null,
            "content": "It took me a while to spot these new messages in Raman_ZrO2 regression test:

 ????????????????????????????????????????????????????????????????????????????????

 ?                                                                             
? 
 ?   INTERNAL ERROR detected in secondd_compute_atom_phases                    
? 
 ?   Some ionic co-ordinates are outside range [0,1)                           
? 
 ?                                                                             
? 
 ?   Please report this error to development team with input files.            
? 
 ?                                                                             
? 
 ?   BEWARE  BEWARE BEWARE BEWARE  BEWARE  BEWARE  BEWARE BEWARE  BEWARE       
? 
 ?     Other linear response and dynamical matrix interpolation (ewald)        
? 
 ?     routines may not test for this error condition.                         
? 
 ?                                                                             
? 
 ?                     RESULTS MAY BE INCORRECT                                
? 
 ?                                                                             
? 
 ?   Please adjust co-ordinates in .cell file into range [0,1) (all inside
cell)? 
 ?   and restart your calculation.                                             
? 
 ?                                                                             
? 
 ????????????????????????????????????????????????????????????????????????????????

Materials Studio does not enforce atoms to be inside 0-1, and all parts of
CASTEP were OK with this before (doing conversions when necessary, I believe).
The results from the regression tests are still correct, but there are too many
such messages in the output. This will scare users; I'd say we have to sort this out. Perhaps atoms have to be translated into cell before this call - as long as the coordinates that eventually go to check file are unchanged.
",
            "content_updated_on": "2009-08-23 07:44:28+01",
            "created_on": "2009-08-21 12:19:59+01",
            "id": 180,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "INTERNAL ERROR detected in secondd_compute_atom_phases",
            "updated_on": "2009-08-23 07:44:28+01"
        },
        {
            "assignee": null,
            "content": "I want to build a new US O pseudopotential with vanderbilt USPP. When I set Rinner value to 0.5, a new pseudopotential could be generated by USPP-a7.3.2. However castep failed to read it. Then I tried the same value to generate the pseudopotential by OTFG, it is OK. When I set a larger Rinner value 0.7, no error message was found. 

Looking at the last block of *.usp files. For those potential files can not be read by CASTEP, there are non-numerical characters (digits to write out is more than space reserved in fortran FORMAT statement, so ***** is given instead).

Some change on the converter for USPP-a73x should be done to cure this problem (or maybe read format from CASTEP side need changing), which should not be allowed to happen.


",
            "content_updated_on": "2009-08-20 11:47:03+01",
            "created_on": "2009-08-20 10:53:27+01",
            "id": 179,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "castep fails to read the pseudopotential with small rinner value generated by the vanderbilt USP",
            "updated_on": "2009-08-20 11:47:03+01"
        },
        {
            "assignee": null,
            "content": "We have accepted the principle of changing defaults for ELEC_ENERGY_TOL
where it is secondary to the primary tolerance, eg a phonon or NMR calculation.

Should we do the same for geometry optimisation?  It is very frequently 
necessary to reduce ELEC_ENERGY_TOL for a geometry optimisation - could
we heuristically relate it to GEOM_FORCE_TOL?

",
            "content_updated_on": "2009-09-03 09:32:31+01",
            "created_on": "2008-05-14 06:34:35+01",
            "id": 22,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Lower default ELEC_ENERGY_TOL for geometry opt calculation",
            "updated_on": "2009-09-03 09:32:31+01"
        },
        {
            "assignee": null,
            "content": "The attached .cell file fails in the phonon symmetry analysis stage,
and hence the phonon calculation can not proceed.

 Internal Error in secondd_find_dmat_symmetry -- repeated analyses disagree
 Please submit a bug report with a copy of your &amp;lt;seedname&amp;gt;.cell file
 Try increasing the precision of the symmetry operations and try again
 *** Failure in phonon dynamical matrix symmetry analysis ***
Trace stack not available

The co-ordinates and cell are highly accurate and the symmetry is satisfied
to 1e-14 or better, so inaccuracy is not the issue.   It seems to be that
the random number generated phase rotation map is not sufficiently discriminating to determine the phase rotation. 

My tests indicate that this works much better with a 64-bit RNG, and indeed
this is the only way I have yet found to fix the problem.
 ",
            "content_updated_on": "2009-09-14 15:32:25+01",
            "created_on": "2009-09-10 17:56:33+01",
            "id": 184,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon calculation fails in symmetry analysis stage",
            "updated_on": "2009-09-14 15:32:25+01"
        },
        {
            "assignee": null,
            "content": "A collaborator reported the following problem:

Run phonon calculation with PHONON_SUM_RULE=.FALSE. with 4.4
Set up continuation run under 5.0 with .param file containing

   PHONON_SUM_RULE = T

In that case the parameters header reports:

   'acoustic phonon sum rule: not explicitly enforced'

indicating that the value of PHONON_SUM_RULE_METHOD read from
the .check file was &amp;quot;NONE&amp;quot;.  (But I can't work out how this
happened.)

Remedy: If PHONON_SUM_RULE is changed to T on continuation
and PHONON_SUM_RULE_METHOD is not but has the value == 'NONE'
then change PHONON_SUM_RULE_METHOD to default.

A second set of continuation errors is that neither FORCE_CONSTANT_CUT_SCALE
nor FORCE_CONSTANT_CUTOFF are correctly set on this continuation either.
This will require further investigation.

The result is that the *default* continuation is nonsense.
",
            "content_updated_on": "2009-09-30 16:22:13+01",
            "created_on": "2009-09-23 08:15:03+01",
            "id": 188,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon parameters incorrectly set on continuation from 4.4 checkfile",
            "updated_on": "2009-09-30 16:22:13+01"
        },
        {
            "assignee": null,
            "content": "Miguel Martinez reports an abort with &amp;quot;zero volume cell&amp;quot; in the case
of a hexagonal cell specified with %BLOCK LATTICE_ABC where the precision
of the hexagonal angle was slightly inaccurate. The attached example
demonstrates the problem.

This is caused by (a) a discrepancy in the tolerance used to establish
that the lattice is hexagonal in  cell_bravais_lattice() with that used
to convert the lattice parameters in cell_abc_to_cart_lattice() and
(b) a logic hole in cell_abc_to_cart_lattice() which failed to compute
any lattice parameters if the angle was outside the tighter tolerances.

Fixed in 5.5
",
            "content_updated_on": "2010-09-09 09:51:45+01",
            "created_on": "2010-09-09 09:51:13+01",
            "id": 408,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "LATTICE_ABC gives wrong vectors due to tolerance discrepancy",
            "updated_on": "2010-09-09 09:51:45+01"
        },
        {
            "assignee": null,
            "content": "The code on line 666 of castep.f90

  call io_initialise(seed,status)

  if (status.ne.io_success) then

     call io_abort('Failed to initialise I/O')
  end if

is wrong, or at least incompatible with the behaviour of io.  
If io_initialise has failed, io_abort can not be called.

*Either* io_abort should not test for io_init OR a normal Fortran exit
should be used in this case.  Preferably the former. 

This results in, for example the error 

   Error: io_abort: module io must be initialised

if there is no permission to open the .castep file.

",
            "content_updated_on": "2009-10-10 09:29:30+01",
            "created_on": "2009-10-07 16:58:44+01",
            "id": 192,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "IO_initialise failure not correctly reported",
            "updated_on": "2009-10-10 09:29:30+01"
        },
        {
            "assignee": null,
            "content": "There is an error in pot_copy in pot.F90.

In the circumstances where

1. fine /= std
2. poten1%have_std_pot = T
3. poten2%have_std_pot = F

on exit poten2%have_std_pot = T but poten2%std_pot (and real_std_pot) is unallocated, which causes a serious crash later on. 

The most straightforward fix is to leave poten2%have_std_pot = F
if neither poten2%std_pot/poten2%real_std_pot are allocated on
entry.  I have tested this, and the attached patch implements this.
A theoretically more efficient solution would be for pot_copy to
explicitly allocate %std_pot or %real_std_pot if needed.  But one
additional FFT may be insignificant.
",
            "content_updated_on": "2010-03-15 10:18:34+00",
            "created_on": "2010-03-08 08:04:46+00",
            "id": 239,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Pot_copy can return poten2%have_std_pot=T but poten2%std_pot unallocated",
            "updated_on": "2010-03-15 10:18:34+00"
        },
        {
            "assignee": null,
            "content": "If you start a trivial (see attached files) job on 16 processors castep quickly come to the point of writing check file and hangs there forever.
It looks that for the given case it decides to use actually 15 nodes with one being idle. And probably this idle one is going out of sync...
",
            "content_updated_on": "2009-12-16 16:18:15+00",
            "created_on": "2009-12-14 10:50:31+00",
            "id": 223,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Catsep hangs on writing check file of number of nodes is too big",
            "updated_on": "2009-12-16 16:18:15+00"
        },
        {
            "assignee": null,
            "content": "Regression tests with B3LYP now produce very different total energies, most likely as a result of a bug introduced by the latest checkin (rev 1.79) of xc.F90. I attached the results of a recent run; baseline is also part of the tar file. Please check which results are correct - we'd have to issue some sort of statement if the new ones are right and the released version was wrong.",
            "content_updated_on": "2010-06-18 16:34:57+01",
            "created_on": "2010-06-14 14:08:37+01",
            "id": 302,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "B3LYP regression is broken by latest changes in xc.F90",
            "updated_on": "2010-06-18 16:34:57+01"
        },
        {
            "assignee": null,
            "content": "If you do a constrained MD calculation with multiple constraints of different types, e.g. mix fix_com with FIX and/or BOND constraints then the RATTLE routines very rarely converge and the dynamics can be poor. 

Test calculation on H2O dimer, with mix of all 3 types of constraints, can produce RATTLE warnings with position errors ~ 10^-3 whereas target tolerance is 10^-8.

Matt",
            "content_updated_on": "2010-06-30 14:47:49+01",
            "created_on": "2010-06-30 11:43:40+01",
            "id": 305,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "RATTLE convergence failure",
            "updated_on": "2010-06-30 14:47:49+01"
        },
        {
            "assignee": null,
            "content": "Moreover it does not show decent behavior as to minimizing energy step by step. 
The only difference with standard run: I asked for an extra band.
All the same for pure lda works fine. All the input/output files are attached.",
            "content_updated_on": "2011-01-30 12:12:27+00",
            "created_on": "2011-01-25 12:10:30+00",
            "id": 473,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "B3lyp for H2 in the big box does not converge",
            "updated_on": "2011-01-30 12:12:27+00"
        },
        {
            "assignee": null,
            "content": "
From Matt Probert:

I was doing a large Raman calculation and exceeded the run-time on our queueing system. So I copied the check file, castep &amp; castep_bin &amp; phonon files, did a restart and got this:
 Error restarting in phonon_linear_response: Partial dynamical matrix data present but corresponding Born charges are missing
Calculation will be restarted from beginning
 Perturbation    1 (of  321): S     1 X at q=( 0.000, 0.000, 0.000):   73.03s

 

This is due to a logic error in phonon_linear_response.  Logical flag  "born_charge_efield" is FALSE on a continuation run because the Born charges were already computed in the original and mdl%have_born_charges=TRUE.  Consequently phonon_dynamical_matrix was called WITH the born_charges optional argument, and a false inconsistency between partial dynamical matrix and partial born charge data was incorrectly diagnosed.

 

 
",
            "content_updated_on": "2014-05-17 10:21:24.592212+01",
            "created_on": "2014-05-17 10:21:24+01",
            "id": 1021,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Continuation phonon calculations unnecessarily discard partial dynamical matrix data",
            "updated_on": "2014-05-17 10:21:24.592212+01"
        },
        {
            "assignee": null,
            "content": "Some new output from thermodynamics (entropy and specific heat) needs

(a) a new parameter

   entropy_unit: string, intermediate, physical

      Allowed values : &amp;quot;&amp;quot;

   Help Text : &amp;quot;Controls the default units for reporting entropy and specific heat - many different units are supported.&amp;quot;
   Default Value &amp;quot;J/mol/K&amp;quot;.

(b) New I/O physical units for entropies

    'J/mol/K'
    'R'            (ie Gas constant)
    'c/mol/K'
    'eV/K'

In hartree atomic units I believe this is actually dimensionless - I'm
not completely sure how we handle this.  Any suggestions?

Keith
",
            "content_updated_on": "2010-05-21 12:05:32+01",
            "created_on": "2010-01-06 12:59:28+00",
            "id": 226,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "New parameter &quot;entropy_unit&quot;",
            "updated_on": "2010-05-21 12:05:32+01"
        },
        {
            "assignee": null,
            "content": "
From Matt

 

Stage 2: the other calculation of this kind died with this error:
Error: secondd_born_charges_u1_t called with gamma_point wavefunctions - not supported
Current trace stack:
 secondd_born_charges_u1_t
 secondd_lr_phonon_perturbation
 phonon_linear_response
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep

 

This ought not to happen!

 
",
            "content_updated_on": "2014-09-10 17:43:44+01",
            "created_on": "2014-05-17 10:52:37+01",
            "id": 1022,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Error in Gamma-point raman calculation?",
            "updated_on": "2014-09-10 17:43:44+01"
        },
        {
            "assignee": null,
            "content": "From Andrew Walker:

I've just run into a  
runtime crash using the castep -help facility you may want to look at  
(this is with gfortran again). If I look up help for keywords with  
particular length 'title' lines I get an exception out of the fortran  
runtime, e.g:

$ ~/Code/CASTEP_5.0.2-bin/castep-serial -help   
PHONON_FORCE_CONSTANT_CUT_SCALE
Help information on CELL keywords:

  None found

Help information on PARAMETERS keywords:

At line 4190 of file ../../Source/Utility/io.F90 (unit = 6, file =  
'stdout')
Fortran runtime error: Expected P edit descriptor in format
( 0x,a80)
    ^

Backtrace for this error:
   + function data_transfer_init (0xB400C8)
     from file fft_gpfa.F90
   + function __io_MOD_io_freeform_help (0xB08255)
     at line 4190 of file io.F90
   + function __parameters_MOD_parameters_help (0xA1E028)
     at line 13635 of file parameters.F90
   + function check_print_help (0x410761)
     at line 3962 of file castep.f90
   + function castep (0x41482C)
     at line 691 of file castep.f90
   + /lib/libc.so.6(__libc_start_main+0xfd) [0x7f29f6353abd",
            "content_updated_on": "2010-06-14 15:19:00+01",
            "created_on": "2010-05-27 14:25:59+01",
            "id": 292,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "runtime crash in 'CASTEP -help' with gfortran",
            "updated_on": "2010-06-14 15:19:00+01"
        },
        {
            "assignee": null,
            "content": "
A new keyword to set how spin is modelled:
string : spin_treatment :: No spin set by NONE
                                         :: standard collinear spins set by SCALAR
                                         :: non-collinear spins set by VECTOR
spin_polarised keyword is retired, although spin_polarised = false should equal 'no spin' and spin_polarised = true should equal scalar spin.

Removing NSPINS as a global variable from parameters is probably a good idea to do in conjunction with this.
",
            "content_updated_on": "2015-03-31 14:25:12+01",
            "created_on": "2014-01-24 11:42:28+00",
            "id": 974,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Add spin_treatment keyword for setting spin in parameters",
            "updated_on": "2015-03-31 14:25:12+01"
        },
        {
            "assignee": null,
            "content": "An attached NPH-MD job ran without any problems when &amp;quot;opt_strategy : Default&amp;quot; was specified, it failed with the following error when &amp;quot;opt_strategy : Speed&amp;quot; was specified.

Error in deallocating wvfn%beta_phi in wave_allocate_wv
Current trace stack:
 wave_allocate_wv
 md_extrapolate
 md_update_cell
 md_run
 castep

This failure disappears with fixed_npw : true",
            "content_updated_on": "2010-06-16 15:55:01+01",
            "created_on": "2010-02-15 17:36:52+00",
            "id": 231,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "NPH MD fails with opt_strategy=SPEED  and fixed_npw=false",
            "updated_on": "2010-06-16 15:55:01+01"
        },
        {
            "assignee": null,
            "content": "CASTEP stops rather strangely in the attached calculation. It was started through a script, there is nothing special about this particular run (lots of similar ones happily completed).
The error at the end is:
 Error in zheevd: status          53; size of problem           26 in electronic_find_eigenslice
Current trace stack:
 electronic_find_eigenslice
 electronic_iter_diag_H
 electronic_minimisation
 geom_get_forces
 geom_BFGS
 geometry_optimise
 castep

This is reproducible with the specific random number seed (145556836)
",
            "content_updated_on": "2010-06-14 20:55:29+01",
            "created_on": "2009-11-27 13:05:40+00",
            "id": 218,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "zheevd error in a routine calculation ",
            "updated_on": "2010-06-14 20:55:29+01"
        },
        {
            "assignee": null,
            "content": "There was a fairly big code merge now that the work on new release has started, and regression tests show that the total energies and gradients with sX have changed - I attached recent result and the baselines. We'd like to think that the old results were correct; otherwise there is some explaining to users to do. Could you please investigate?",
            "content_updated_on": "2010-06-29 10:52:54+01",
            "created_on": "2009-11-18 09:58:37+00",
            "id": 207,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Total energies with sX have changed",
            "updated_on": "2010-06-29 10:52:54+01"
        },
        {
            "assignee": null,
            "content": "The following type of errors became too common in CASTEP 5.5:

Error diagonalising matrix in wave_diagonalise_matrix_ks
Current trace stack:
 wave_diagonalise_matrix_ks
 wave_diagonalise_matrix
 electronic_find_occupancies
 electronic_minimisation
 geom_get_forces
 geom_BFGS
 geometry_optimise
 castep
",
            "content_updated_on": "2010-07-16 13:31:37+01",
            "created_on": "2010-05-19 09:39:45+01",
            "id": 286,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Diagonalization failures became common",
            "updated_on": "2010-07-16 13:31:37+01"
        },
        {
            "assignee": null,
            "content": "The combination of DFT+D and a phonon supercell calculation causes CASTEP
to crash with memory errors

*** glibc detected *** double free or corruption (out): 0x00000000088b7e00 ***

Running a debug build indicates that various saved arrays in the sedc module
are not being correctly resized for the supercell calculation and generate array bounds violations.

Possible solutions

1. Lock out this combination of functionality
2. Fix the initialisation in dftd.F90 and semp_disp_corr.F90 to
   re-initialise all of the array sizes if the number of ions
   and cell change during the run.
",
            "content_updated_on": "2010-09-09 18:05:28+01",
            "created_on": "2010-08-25 10:58:38+01",
            "id": 315,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Crash when DFT+D used for phonon supercell calculation",
            "updated_on": "2010-09-09 18:05:28+01"
        },
        {
            "assignee": null,
            "content": "There is some illegal F90 in semp_disp_corr.F90 which can cause problems. It seems that ifort is OK but pathscale is not. I don't know about other compilers.

There are several places where there are code constructs like:

if (allocated(a).and.size(a)/=b) then

which cause problems if a is not allocated and the compiler tries to evaluate the 'size' test! The solution is to split the one 'if' into a nested pair.

Matt",
            "content_updated_on": "2010-09-27 18:14:45+01",
            "created_on": "2010-09-27 16:53:19+01",
            "id": 414,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "compiler dependent crash in semp_disp_corr.F90",
            "updated_on": "2010-09-27 18:14:45+01"
        },
        {
            "assignee": null,
            "content": "NAG Hector query q126456

Reported by Mayami Abdulla and investigated by Yodong Sun from NAG.  In a debug
build the code comms.mpi.F90:15054

    if (num_x_columns.gt.max_x_columns) then
       
       write(*,*) 'Error comms_map_transpose: Illegal value of num_x_columns.'
       call comms_abort()
    end if

is activating and aborts.  With the GNU fortran compiler's bounds checking
on this is picked up as

  At line 2489 of file ../../Source/Fundamental/basis.F90
Fortran runtime error: Array reference out of bounds for array 'x_weight', upper bound of dimension 1 exceeded (630 &amp;gt; 629)

                        x_weight(num_x_columns) = 0

which also fingers num_x_columns.

The job is running on 168 MPI processes (4/node on HECToR 2b)



",
            "content_updated_on": "2010-11-06 15:46:05+00",
            "created_on": "2010-11-04 18:21:58+00",
            "id": 418,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Basis error: num_x_columns.gt.max_x_columns",
            "updated_on": "2010-11-06 15:46:05+00"
        },
        {
            "assignee": null,
            "content": "
The Cumulant method for PHONON_FINE_CUTOFF_METHOD sometimes fails,
giving broad Fourier ringing. I have seen this in some (large) planar force-constant calculations on MnSi, where one setting failed and another worked.
The beta-Sn structure of Si here is a more tractable example, but I have seen
cases for primitive bcc (reported on JISCMAIL) where the convergence of the
Cumulant method is worse than for spherical. That might just be an example of the same phenomenon.
Could it be that the algorithm only works for a &amp;quot;reduced&amp;quot; basis for the
lattice?http://www.tcm.phy.cam.ac.uk/~mdt26/talks/zoltan/min_image_slides.ps.gz
Changing to spherical at the interpolation restart gives correct results.
",
            "content_updated_on": "2014-05-29 16:20:12+01",
            "created_on": "2011-04-15 09:56:42+01",
            "id": 516,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Cumulant force constant method fails for skew primitive cell settings",
            "updated_on": "2014-05-29 16:20:12+01"
        },
        {
            "assignee": null,
            "content": "
Phonon supercell calculations with a supercell defined by

%block PHONON_SUPERCELL_MATRIX
  1   1  -1
  1  -1   1
 -1   1   1
%endblock PHONON_SUPERCELL_MATRIX
 

or any other matrix that was not diagonal would sometimes generate badly erroneous results with large wiggles to "negative" frequency.  This was caused by  an erroneous call to "cell_rationalise_coordinates" added in phonon_real_to_fine in revision



				
				Changeset:
			
			
				
				4926 (cf52a8df3c18) More performance optimization of phonon_real_to_fine. …
			
		
The algorithm relies on the interatomic distances tracking the cell-cell vectors, and wrapping individual ions defeated this.

 
",
            "content_updated_on": "2014-05-29 16:33:44.359367+01",
            "created_on": "2014-05-29 16:33:44+01",
            "id": 1031,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon supercell calculations fail with off-diagonal supercell matrix.",
            "updated_on": "2014-05-29 16:33:44.359367+01"
        },
        {
            "assignee": null,
            "content": "Rather standard FD phonon run (started from Materials Studio) stops in a rather annoying way:
Error in phonon_rationalise_kpoints: irreducible set is not a subset of full set
Current trace stack:
 phonon_rationalise_kpoints
 phonon_fd_perturbation
 phonon_finite_displacement
 phonon_force_constant_matrix
 phonon_calculate
 castep


(see attached files)",
            "content_updated_on": "2011-01-17 10:09:24+00",
            "created_on": "2010-12-09 15:23:15+00",
            "id": 450,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Error in phonon_rationalise_kpoints",
            "updated_on": "2011-01-17 10:09:24+00"
        },
        {
            "assignee": null,
            "content": "
The case of a supercell phonon calculation of a polar system using norm-conserving pseudopotentials appears to be incorrectly handled.  A long ranged dipole tail correction is added to the reciprocal-space dynamical matrices if Born charges and dielectric tensor are present in the model.  But the corresponding term is not subtracted from the real-space force constant matrix which is directly calculated in real space.

 

This will give incorrect results in this (admittedly uncommon) use case.

 

Question.  Is it possible to re-use the Ewald DD routine for this purpose by running it with the supercell at q=0 as input?

Formally the equations look right. (Eqs 70-74 in Gonze and Lee.)

 
",
            "content_updated_on": "2014-06-03 10:46:57+01",
            "created_on": "2014-03-17 16:05:19+00",
            "id": 990,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Phonons: Long-range tail correction logic wrong for supercell with NC pseudopotentials",
            "updated_on": "2014-06-03 10:46:57+01"
        },
        {
            "assignee": null,
            "content": "The testcase demonstrates a reproducible failure which occurs
whenever nextra_bands &amp;gt; 0, elec_method='none' and fix_occupancy=.true.

$ cat Si2-k222-spe-eb.0001.err
Error, slice_1 and slice_2 are at different kpoints
Current trace stack:
 wave_dot_all_slice_slice
 electronic_proj_grad_slice
 electronic_SD_direction_slice
 electronic_step_direction_slice
 electronic_find_eigenslice
 electronic_iter_diag_H
 electronic_minimisation
 check_elec_ground_state
 castep


The stack traceback is

Function
main
  castep (castep.f90:971)
    check_elec_ground_state (castep.f90:1382)
      electronic_minimisation (electronic.F90:1820)
        electronic_mp_electronic_iter_diag_h_ (electronic.F90:2493)
          electronic_find_eigenslice (electronic.F90:15535)
            electronic_step_direction_slice (electronic.F90:6205)
              electronic_sd_direction_slice (electronic.F90:6465)
                electronic_proj_grad_slice (electronic.F90:7381)
                  wave_dot_all_slice_slice (wave.F90:9125)
                    io_abort (io.F90:1807)

and the problem appears to be with S_wvfn_slice not being set up
in electronic_iter_diag_h.  It appears to be uninitialised in this code path an the %kpoint value is 0, hence the error abort.

However this code is sufficiently complex that I can't figure out what the &amp;quot;correct&amp;quot; answer is.

Keith

",
            "content_updated_on": "2011-02-07 10:15:02+00",
            "created_on": "2010-12-22 13:48:18+00",
            "id": 459,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "All-bands minimizer fails if unoccupied bands present",
            "updated_on": "2011-02-07 10:15:02+00"
        },
        {
            "assignee": null,
            "content": "

I think cif file is the most portable out of easy to use file formats (and understood by materials studio).
It can be done either via some parameter or even as command line option, let's say it would read cell file, check file if present and output cif file.
One simple example of the code is attached...

",
            "content_updated_on": "2011-02-22 13:48:23+00",
            "created_on": "2009-11-03 15:26:04+00",
            "id": 199,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "would be nice to export cif file as a result of castep calculations. ",
            "updated_on": "2011-02-22 13:48:23+00"
        },
        {
            "assignee": null,
            "content": "The calls to electronic_minimisation from phonons contain an optional argument local_iprint which essentially suppresses output of SCF energies (it's set iprint-1). This takes effect in electronic_scf_footer; however, in DFT-D calculations an additional code is called, dftd_print_corrected_energies. The comments to this routine claim that it's based on electronic_scf_footer, but the optional argument for output verbosity is not available here. Hence the output always contains corrected energies and looks strange. I think that this reporting should be made more similar to electronic_scf_footer by adding that optional argument. Current output is:

 + Mode    10: performing Raman intensity calculation                         +

Dispersion corrected final energy* =  -13999.26909480     eV

 * not corrected for finite basis set


Dispersion corrected final energy* =  -13999.26911707     eV

 * not corrected for finite basis set

 + Mode number:  10 completed;                   time taken:  2633.37 seconds +
",
            "content_updated_on": "2011-03-01 17:29:17+00",
            "created_on": "2011-01-10 09:38:34+00",
            "id": 466,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Raman: SCF energy reporting is not fully suppressed, DFT-D energies are printed out",
            "updated_on": "2011-03-01 17:29:17+00"
        },
        {
            "assignee": null,
            "content": "I thought it might be useful to keep track of requests for new parameters
for 6.0 in one place.  Hopefully this tracker item will fit the bill. It also
allows for some discussion in the comments.",
            "content_updated_on": "2011-08-24 20:02:30+01",
            "created_on": "2011-04-20 09:28:53+01",
            "id": 518,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "New parameters for CASTEP 6.0",
            "updated_on": "2011-08-24 20:02:30+01"
        },
        {
            "assignee": null,
            "content": "whatever I try, all bands, dm, metal, semiconductor...",
            "content_updated_on": "2011-10-28 01:56:55+01",
            "created_on": "2010-11-29 17:14:49+00",
            "id": 421,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Si100/Ge0 VCA does not converge",
            "updated_on": "2011-10-28 01:56:55+01"
        },
        {
            "assignee": null,
            "content": "It would be very useful if the computed value of fine_gmax
were printed if &amp;quot;fine_grid_scale&amp;quot; was specified.  FINE_GMAX
is the &amp;quot;transferrable&amp;quot; parameter between different calculations
with a different mix of pseudopotentials, while FINE_GRID_SCALE
is the easiest to manipulate for convergence studies. So the convenient
approach to convergence would be to perform convergence tests using
FINE_GRID_SCALE and copy and re-use FINE_GMAX, if the latter were printed.
 
This  unfortunately does not seem to fit anywhere nicely in terms of output.
Parameters_output can not do the calculation as it doesn't have access to
cell.  Perhaps castep.f90 or basis_initialise can compute and reset the variable
in parameters, so the &amp;quot;parameters_output&amp;quot; call can print it.

This would involve the ugliness of something outside parameters changing
parameters data.  Worth it?  Should we prefer structural elegance or
functionality?

Keith


 ",
            "content_updated_on": "2011-04-26 16:56:58+01",
            "created_on": "2010-10-08 11:13:59+01",
            "id": 416,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Parameters output should report fine_gmax when fine_grid_scale specified",
            "updated_on": "2011-04-26 16:56:58+01"
        },
        {
            "assignee": null,
            "content": "From our support:
&amp;quot;Description

I have received an error report in CASTEP DFPT and Phonon calculation.
The error message is as follows, please see attachment for detail.

Internal Error in secondd_find_dmat_symmetry – repeated analyses disagree
Please submit a bug report with a copy of your &amp;lt;seedname&amp;gt;.cell file
Try increasing the precision of the symmetry operations and try again

I found a related bug report (MS-28619), but this bug has been already fixed.
Is present error message related to this bug? Or is there any other reason?
If we need to increase the precision of the symmetry operations, could you tell me how to do this?&amp;quot;

Attached is the run with iprint=3.
",
            "content_updated_on": "2011-07-15 14:17:13+01",
            "created_on": "2011-06-20 16:39:36+01",
            "id": 543,
            "kind": "bug"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Internal Error in secondd_find_dmat_symmetry ",
            "updated_on": "2011-07-15 14:17:13+01"
        },
        {
            "assignee": null,
            "content": "A few of Accelrys regression tests now fail with very different frequencies (see castep_9a as an example), and Raman_ZrO2 even produces an error output:

  Warning: Band structure did not converge for 3 out of 16 kpoints
   - Consider increasing BS_MAX_ITER or BS_EIGENVALUE_TOL.
Error: magres_apply_green_function_s2: not converged
Current trace stack:
 magres_apply_green_function_s2
 secondd_calculate_u1_k
 secondd_get_u1_k
 secondd_polarisability
 raman_calculate
 phonon_calculate
 castep

These two examples are attached. castep_9a is also attached separately (see later comment) with iprint=2 outputs from old and new executables. Running in the debugger makes no difference (hence not a compiler optimization problem - and not array bounds or anything like that).",
            "content_updated_on": "2011-05-31 11:20:20+01",
            "created_on": "2011-04-20 10:10:31+01",
            "id": 520,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Various regression failures for phonons after LR for metals addition",
            "updated_on": "2011-05-31 11:20:20+01"
        },
        {
            "assignee": null,
            "content": "Jonathan's adaptive smearing for electronic DOS based on the
band gradient appears to work extremely well.  Can we do the
same for phonon DOS?  It ought in principle to be possible to
get the branch gradients from the Fourier interpolation
scheme. I suspect the formalism will be terribly simple
once worked out.  

Could be done in phonons or in CASTEP itself?


",
            "content_updated_on": "2013-09-26 17:10:48+01",
            "created_on": "2011-05-19 10:23:43+01",
            "id": 530,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon DOS with adaptive smearing",
            "updated_on": "2013-09-26 17:10:48+01"
        },
        {
            "assignee": null,
            "content": "LR calculation with (nonsensical) input (attached) fail with 
Error: secondd_calculate_e2_mixed called with u0_kq%nkpts != u1_kq%nkpts  and u0_kq%nkpts != 2*u1_kq%nkpts
Current trace stack:
 secondd_calculate_e2_mixed
 secondd_phonon_scf_solve
 secondd_lr_phonon_perturbation
 phonon_linear_response
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep
====
I think there is a problem in logic somewhere....",
            "content_updated_on": "2011-09-15 07:44:04+01",
            "created_on": "2011-09-14 17:13:01+01",
            "id": 560,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LR  G-point only calculation   fails in secondd_calculate_e2_mixed",
            "updated_on": "2011-09-15 07:44:04+01"
        },
        {
            "assignee": null,
            "content": "
I get, for example:

	 Doing a self consistent calculation for the test configuration

	Error: ion_atom_ps_diag: DSYGV: non positive definite l=0

	Current trace stack:

	 ion_atom_ps_diag

	 ion_atom_pseudo_scf_test

	 ion_atom_generate_psp

	 ion_initialise

	 castep

	 

	As far as I can see, the only difference w.r.t. the previous string was the addition of another 6s projector : from 60U to 60 in the string.

  
",
            "content_updated_on": "2014-09-06 18:36:33+01",
            "created_on": "2014-07-01 10:05:04+01",
            "id": 1047,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "New Er string does not converge",
            "updated_on": "2014-09-06 18:36:33+01"
        },
        {
            "assignee": null,
            "content": "The attached MD simulation shows a failure to conserve the Hamiltonian.
While the drift may be tolerable, there are many significant 
instantaneous jumps of between 70 meV and 0.5 eV.

Is there a problem with the MD integration of the Nose - Hoover equations?

",
            "content_updated_on": "2011-08-24 20:14:22+01",
            "created_on": "2011-01-18 14:09:30+00",
            "id": 469,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Jumps in conserved Hamiltonian for Nose-Hoover chain MD",
            "updated_on": "2011-08-24 20:14:22+01"
        },
        {
            "assignee": null,
            "content": "This issue came up with respect to the behaviour of DFPT calculation,
but it is also true of geometry optimisation calculations.  Should
we change the behaviour?

Currently if an optimisation calculation fails to converge within 
GEOM_MAX_ITER the run proceeds to a normal exit.  This means that the
convergence failure is not apparent to a user who does not carefully
examine the .castep file - including many materials Studio users.

It does seem odd that an SCF convergence failure generates an abort
exit but a geometry convergence failure does not.

In the case of phonon calculations Keith and Victor came up with the
idea of distinguishing a &amp;quot;soft&amp;quot; from a &amp;quot;hard&amp;quot; fail.  The former is
when the tolerance is nearly but not quite achieved.  In this case
the run is allowed to complete with a warning.  Otherwise a &amp;quot;hard&amp;quot; fail
is generated where the result is nowhere near convergence, leading to
a &amp;quot;io_abort&amp;quot; termination.  Would this be a sensible thing to apply to
geometry calculations?
",
            "content_updated_on": "2011-08-24 20:22:20+01",
            "created_on": "2009-10-01 15:42:22+01",
            "id": 190,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Geometry optimisation calculations do not abort if convergence failure detected",
            "updated_on": "2011-08-24 20:22:20+01"
        },
        {
            "assignee": null,
            "content": "Attached files fail to produce a pseudopotential with the message:

Error: ion_atom_ps_solve: ninf=3829 too big for mesh=3819
Current trace stack:
ion_atom_ps_solve
ion_atom_descreen_psp
ion_atom_generate_psp
ion_initialise
castep

The same works fine with other functionals",
            "content_updated_on": "2011-08-30 10:37:26+01",
            "created_on": "2011-08-26 17:46:35+01",
            "id": 558,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Sn OTFG does not work with WC exchange-correlation",
            "updated_on": "2011-08-30 10:37:26+01"
        },
        {
            "assignee": null,
            "content": "Hi Matt,

I spent yesterday tracking down a quite serious bug in the LBFGS code; it was a result of the serialisation. I had called geom_update_inv_hessian on_root only, which was fine because it's a routine that manipulates the inverse Hessian, only, however I failed to take into account that it sets reset_iter / previous_reset_iter. This can cause a crash a few iterations later, if all but the root node ends up doing a gcopy. The fix is simply to gcopy the three global variables which might be set within the routine, just subsequently. (Grep for &amp;quot;ja531 --&amp;gt; bugfix 2011/09/18&amp;quot;)

Joly",
            "content_updated_on": "2011-09-19 13:16:19+01",
            "created_on": "2011-09-19 11:38:21+01",
            "id": 561,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "parallel bug in LBFGS",
            "updated_on": "2011-09-19 13:16:19+01"
        },
        {
            "assignee": null,
            "content": "In a CASTEP supercell phonon calculation the details of the supercell
used are reported by a call to &amp;quot;cell_output&amp;quot;.  But in the specific line
detailing the Monkhorst Pack grid under &amp;quot; k-Points For BZ Sampling&amp;quot;
it prints the value of array &amp;quot;kpoint_mp_grid&amp;quot;.  That is incorrect as the
supercell calculation uses  &amp;quot;supercell_kpoint_mp_grid&amp;quot;.

The actual list of kpoints is correct.
",
            "content_updated_on": "2011-09-26 15:40:12+01",
            "created_on": "2011-02-09 11:37:29+00",
            "id": 492,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Supercell phonon calculations report wrong M-P grid",
            "updated_on": "2011-09-26 15:40:12+01"
        },
        {
            "assignee": null,
            "content": "Original message from Victor:

One of the performance benchmarks nowadays refuses to run on 24 or 64 cores - stops with

 
 ???????????????????????????????????????????????????????????????????????????????? 
 ?                                                                              ? 
 ?                 ERROR detected in secondd_efield_linmin_E2                   ? 
 ?             Line minimiser found a MAXIMUM in variational E(2)               ? 
 ?   trial step                   =   -23.037734                                ? 
 ?   step to stationary point     =     0.759135                                ? 
 ?   E(2)     before line step    =   -1916549.7     A**3                       ? 
 ?   dE(2)/dx before line step    =    6424319.8     A**3                       ? 
 ?   E(2)     after trial step    =  -0.26133850E+10 A**3                       ? 
 ?   E(2)     at stationary point =    743720.40     A**3                       ? 
 ?                                                                              ? 
 ?   This can be caused by the system having no or very small band gap.         ? 
 ?   We suggest running a bandstructure calculation to investigate.             ? 
 ?                                                                              ? 
 ?      CONVERGENCE OF FIRST ORDER DFPT WAVEFUNCTIONS HAS FAILED                ? 
 ?                                                                              ? 
 ???????????????????????????????????????????????????????????????????????????????? 

This example ran happily earlier in the year (including with IMPI). If something has changed, it's got to be in the code itself.

===========================================================================
I (ap) run those calculation once again with iprint=5 (after the crash). The runs where continuation of the crashed runs. The results are attached.",
            "content_updated_on": "2011-10-25 17:12:10+01",
            "created_on": "2011-10-05 10:00:57+01",
            "id": 587,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Efiled calculation fails on 24 nodes but  succeeds  on 16",
            "updated_on": "2011-10-25 17:12:10+01"
        },
        {
            "assignee": null,
            "content": "A  4-way band-parallel run with 6 bands aborts with

 Problem with band-to-node mapping in wave_write_all_par

in the attached run.  Dominik has a fix for this - patch is also
attached.",
            "content_updated_on": "2011-10-25 12:24:31+01",
            "created_on": "2011-10-09 12:50:33+01",
            "id": 589,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Wave_write_all_par failure in unbalanced band parallel",
            "updated_on": "2011-10-25 12:24:31+01"
        },
        {
            "assignee": null,
            "content": "An attached Efield calculation specified real space representations of the pseudopotentials, and it terminated with the following error.

Error, V_slice%realspace_nbands_max&amp;lt;slice%realspace_nbands in pot_gamma_apply_real_slice

The job finished successfully when reciprocal space representation was specified. This branch of the code results in V_slice%realspace_nbands_max=4 which then throws as shown above. The test case attached is a cut down version of customer's case, fails in the same way.
",
            "content_updated_on": "2011-10-28 01:50:14+01",
            "created_on": "2011-02-21 12:01:27+00",
            "id": 496,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Error in  real space representations in  Efield calculation",
            "updated_on": "2011-10-28 01:50:14+01"
        },
        {
            "assignee": null,
            "content": "From Phil:&amp;quot;The problem is that nlpot_apply_S only works in reciprocal space. When applying Sinv you can call nlpot_apply_Sinv or nlpot_apply_Sinv_real as appropriate, but the real-space version of nlpot_apply_S doesn't exist. It'll take a day to fix properly, so I'll just make old_dm the default for real-space for now.&amp;quot;

later - real-space case is forced to use old minimiser. This bug is to investigate the combination of new minimiser and real space projectors.
",
            "content_updated_on": "2011-10-31 12:32:14+00",
            "created_on": "2009-05-12 15:21:19+01",
            "id": 128,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Real space path uses old style DM minimizer",
            "updated_on": "2011-10-31 12:32:14+00"
        },
        {
            "assignee": null,
            "content": "Dear Matt,

I noticed that new version of CASTEP have changed:

&amp;quot;BFGS: Final&amp;quot; to  &amp;quot;BFGS : Final&amp;quot;

Is this intentional? It has broken some of our output parsing scripts
- easy to fix once I figured out what had happened, but probably not
good to have to do too often.

Chris

",
            "content_updated_on": "2011-11-30 17:57:28+00",
            "created_on": "2011-11-30 17:54:53+00",
            "id": 621,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "BFGS formatting change",
            "updated_on": "2011-11-30 17:57:28+00"
        },
        {
            "assignee": null,
            "content": "
Similar to issue 1047 - the latest string for OTFG Ac potential adds one more 7s projector (70U became 70), and now I get:

	Error: ion_atom_ps_diag: DSYGV: non positive definite l=0

	Current trace stack:

	 ion_atom_ps_diag

	 ion_atom_pseudo_scf_test

	 ion_atom_generate_psp

	
		 ion_initialise
	
		 castep
	
		 
	
		FWIW, MatStudio currently uses this string: 2|2.2|2.2|1.5|7.4|9.5|11.5|60U:70U:61UU:62P(qc=6)[",
            "content_updated_on": "2014-09-06 18:36:52+01",
            "created_on": "2014-07-02 11:09:35+01",
            "id": 1053,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "New Ac string does not converge",
            "updated_on": "2014-09-06 18:36:52+01"
        },
        {
            "assignee": null,
            "content": "A space has been added to &amp;quot;BFGS: Final Enthalpy&amp;quot;, which breaks external parsing scripts. ",
            "content_updated_on": "2011-12-01 17:28:01+00",
            "created_on": "2011-12-01 16:49:24+00",
            "id": 624,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "&quot;BFGS: &quot; changed to &quot;BFGS :&quot;",
            "updated_on": "2011-12-01 17:28:01+00"
        },
        {
            "assignee": null,
            "content": "
I get, for example:
Doing a self consistent calculation for the test configuration
Error: ion_atom_ps_diag: DSYGV: non positive definite l=0
Current trace stack:
ion_atom_ps_diag
ion_atom_pseudo_scf_test
ion_atom_generate_psp
ion_initialise
castep

Looks like the change was to add 7s projector - 70U became 70UU
",
            "content_updated_on": "2014-09-06 18:37:07+01",
            "created_on": "2014-07-02 11:40:50+01",
            "id": 1054,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "New Pu string does not converge",
            "updated_on": "2014-09-06 18:37:07+01"
        },
        {
            "assignee": null,
            "content": "If all atoms are constrained (eg by symmetry) the geom file will not contain any coordinates. This stops jmol visualising the structure.
 (as per discussion in Oxford 20th Dec)",
            "content_updated_on": "2012-07-23 19:35:12+01",
            "created_on": "2011-12-21 18:02:50+00",
            "id": 633,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Missing coordinates in geom file",
            "updated_on": "2012-07-23 19:35:12+01"
        },
        {
            "assignee": null,
            "content": "A suggestion from Stewart Parker. As the Raman calculation is so expensive,
and as for comparison with experimental data only a restricted frequency
range is needed, can we add some options to restrict the range of modes
for which the Raman calculation is performed.

Something like

  raman_range_low
  raman_range_high

- probably in physical units rather than mode indexes.  

This would make Raman more practical and would be trivial to implement.",
            "content_updated_on": "2012-01-15 13:15:25+00",
            "created_on": "2011-03-08 12:25:09+00",
            "id": 504,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Raman range selection",
            "updated_on": "2012-01-15 13:15:25+00"
        },
        {
            "assignee": null,
            "content": "There is a provision in the code for calculating those, as per Porezag paper, but the corresponding branch is never called. Let's expose these numbers since someone finds them relevant.",
            "content_updated_on": "2012-01-15 13:16:03+00",
            "created_on": "2011-04-04 14:06:20+01",
            "id": 512,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "User would like to get depolarization ratios from Raman calculations",
            "updated_on": "2012-01-15 13:16:03+00"
        },
        {
            "assignee": null,
            "content": "
Add a write_otfg logical paramter (default .true.)

This will allow the output of OTFG to be suppressed if it is not required (for example, in a high throughput computation).
",
            "content_updated_on": "2015-06-26 11:22:52+01",
            "created_on": "2015-04-27 14:11:02+01",
            "id": 1281,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Add write_otfg logical parameter",
            "updated_on": "2015-06-26 11:22:52+01"
        },
        {
            "assignee": null,
            "content": "
After the change of handling of castep stderr files (open on demand) whatever errors produced by DFTD are going to the system stderr (or may be somewhere else if unit is not 7) as sedc error iunit is set be castep stderr but the file is not opened..
",
            "content_updated_on": "2014-08-01 17:11:35+01",
            "created_on": "2012-02-03 13:02:59+00",
            "id": 689,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "DFTD (sedc) module dumps errors in a wrong file",
            "updated_on": "2014-08-01 17:11:35+01"
        },
        {
            "assignee": null,
            "content": "
There are three elements in the sedc module( In, Sn, Sb) which have two out of three necessary parameters defined.
It has alpha_ts and C6i_ts, but not R0i_ts.
As we understand the parameters are result of some fitting and it is hard to imagine the very specific parameters were fitted while some radius were not defined. Could it be it just disappeared during some merge?
Or may be there is an idea how to fill those three positions with reasonable numbers?
 
",
            "content_updated_on": "2014-07-17 10:42:28+01",
            "created_on": "2012-02-06 10:22:27+00",
            "id": 692,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "DFTD TS scheme can be extended to describe In, Sn, Sb ",
            "updated_on": "2014-07-17 10:42:28+01"
        },
        {
            "assignee": null,
            "content": "Dan Wilson's Python scripts for setting up and analysing finite-strain
calculations of elastic constants need to be packaged, documented and 
made available
",
            "content_updated_on": "2012-04-04 10:37:29+01",
            "created_on": "2008-04-17 08:45:59+01",
            "id": 16,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Elastic constant calculations without MS interface",
            "updated_on": "2012-04-04 10:37:29+01"
        },
        {
            "assignee": null,
            "content": "We can gain a bit in efficiency by calculating Raman intensities only once for symmetry degenerate modes. One has to think what to do with Raman tensors; if they are needed for something, then there should be a symmetry transformation for those. However, since the main interest is in intensities, I am not too concerned about reported tensors. Raman can be (and usually is) fairly expensive compared to other routine tasks like geometry optimization, so any speed-up will be gratefully acknowledged.

I am not sure if this technically comes as a bug or feature request, and not too concerned about classification as long as there is a solution. Would be ever so noce to have this implemented in the current release.",
            "content_updated_on": "2012-04-04 10:39:28+01",
            "created_on": "2009-11-17 09:29:51+00",
            "id": 206,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Do not calculate Raman intensities for degenerate modes",
            "updated_on": "2012-04-04 10:39:28+01"
        },
        {
            "assignee": null,
            "content": "There is no lock-out code to prevent a DFPT phonon calculation with
SEDC_APPLY=true, and the result is not well-defined. Add a test and abort in this case.
 ",
            "content_updated_on": "2012-06-29 11:41:33+01",
            "created_on": "2012-06-13 07:35:26+01",
            "id": 740,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SECD not locked out for DFPT phonon calculations",
            "updated_on": "2012-06-29 11:41:33+01"
        },
        {
            "assignee": null,
            "content": "Two cases of the header output in parameters_output use &amp;quot;equlibration&amp;quot; instead of &amp;quot;equilibration&amp;quot;",
            "content_updated_on": "2012-07-22 13:52:50+01",
            "created_on": "2012-02-16 16:14:01+00",
            "id": 704,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Typo in parameters.F90 header for MD: equlibration",
            "updated_on": "2012-07-22 13:52:50+01"
        },
        {
            "assignee": null,
            "content": "NHL MD currently contains this line; suggestion is to decide whether indeed any further parameters are to be displayed, and get rid of the scary line.",
            "content_updated_on": "2012-07-22 13:53:14+01",
            "created_on": "2012-02-16 16:10:53+00",
            "id": 703,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "DO WE NEED ANYTHING MORE HERE??? in .castep output",
            "updated_on": "2012-07-22 13:53:14+01"
        },
        {
            "assignee": null,
            "content": "From Graeme Ackland:

If I run MD with pressure 250 GPa, it prints out a  seedname-out.cell file with the pressure block


%BLOCK external_pressure
GPA
      0.00849733      0.00000000      0.00000000
      0.00849733      0.00000000
      0.00849733
%ENDBLOCK external_pressure

i.e. it says its in GPa, but actually its in Hartree/bohr^3.
",
            "content_updated_on": "2012-08-27 18:23:59+01",
            "created_on": "2012-07-29 20:20:14+01",
            "id": 754,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Units for pressure in -out.cell are wrong ",
            "updated_on": "2012-08-27 18:23:59+01"
        },
        {
            "assignee": null,
            "content": "
From Enrique Sanchez Marcos
In my continuous progress on the CASTEP keyword
masterization, yesterday I started using the option:
RUN_TIME to get a smoother end of the current computation.
This morming I have realized that the restart from a job finished in this way deletes the current md file!
You can find an example of it in the following directory:
/home/e89/e89/esmarcos/work/Cubis/w80disp/Production_Broken
This has been the case with our long trajectory of Cu(bis)2*80H2O
molecules without dispersion. Hopefully that yesterday I had made a tar
of the results just to work with the results in local.
I will restart the trajectory from the last step of the previous file.
Comment by KR: This needs to be checked out as it seems possible to lose
the entire trajectory file so far by accident. I have not yet verified this
behavior.
 
",
            "content_updated_on": "2014-07-28 15:30:57+01",
            "created_on": "2011-05-31 11:23:43+01",
            "id": 537,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "MD run ended by RUN_TIME deletes .md file",
            "updated_on": "2014-07-28 15:30:57+01"
        },
        {
            "assignee": null,
            "content": "Attached continuation run fails with the following diagnostic:

Initialising basis set for model.
Reinitialising basis set for current geometry.
Continuing from previous run with ground state wavefunction.
Continuing from previous run with ground state density.
 Info: CALCULATE_STRESS modified from T to F
 Info: CALCULATE_DENSDIFF modified from T to F
 Info: CALCULATE_ELF modified from T to F
 Info: CALCULATE_HIRSHFELD modified from T to F
 Info: POPN_CALCULATE modified from T to F
 Info: PDOS_CALCULATE_WEIGHTS modified from T to F
 Info: BS_EIGENVALUE_TOL modified from    0.100000E-05 eV to    0.100000E-04 eV
Error in parameters file: missing BASIS_DE_DLOGE with FINITE_BASIS_CORR
Current trace stack:
 parameters_error_dump
 parameters_reread
 model_continuation
 castep
",
            "content_updated_on": "2012-08-25 00:02:55+01",
            "created_on": "2012-08-14 09:59:23+01",
            "id": 764,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "BS run fails as a continuation of cell optimization",
            "updated_on": "2012-08-25 00:02:55+01"
        },
        {
            "assignee": null,
            "content": "On 07/02/11 17:12, Jonathan Yates wrote:
&amp;gt; Hi Matt,
&amp;gt;
&amp;gt; I've had a question about geometry optimisation sent to me. It's an edge
&amp;gt; case to do with restarts - so I thought I'd check it with you.
&amp;gt;
&amp;gt; Take a geometry optimisation in which the forces are below the tolerance
&amp;gt; after the first scf minimisation. dE/ion and |dR| max are zero as
&amp;gt; nothing is known about the previous step. The geom-opt is set to
&amp;gt; converged. This seems to have been a change in 2005. For an initial
&amp;gt; structure this seems sensible.
&amp;gt;
&amp;gt; However, the code doesn't make any distinction between a restart and a
&amp;gt; new run, so this also happens for a restart.
&amp;gt;
&amp;gt; The user claimed this was a bug, as he expect a restart to continue the
&amp;gt; minimisation as if it had not been interrupted. I suppose we could
&amp;gt; always do at least one step if it's a restart? What do you think? (the
&amp;gt; obvious fix in this case was to just lower the force tol a bit)
&amp;gt;
&amp;gt; Thanks
&amp;gt; Jonathan 

Thinking about it, I think this user is right and that CASTEP is not doing the correct thing. If the force is below the tolerance but NOT dE or dR [rarely happens in my experience",
            "content_updated_on": "2012-08-25 00:17:17+01",
            "created_on": "2011-02-08 12:19:23+00",
            "id": 489,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "wrong behaviour in geom restart",
            "updated_on": "2012-08-25 00:17:17+01"
        },
        {
            "assignee": null,
            "content": "
When continuing a singlepoint calculation as a geometryoptimization, the ionic constraints are not implemented for the first few BFGS step, causing constrained atoms to move. The workaround is to &amp;quot;reuse&amp;quot; rather than &amp;quot;continue&amp;quot;, but this wastes a perfectly good wave function.
In geometry.f90, line 7080ff, the condition
if ((.not.fix_all_ions).and.(.not.mdl%found_forces))
is false on continuation, as the forces were read in with the model. This implies that in line 7085, the call to firstd_constrain_forces is not run. The forces stored in the model (and read on continuation) are however *NOT* constrained (even when the constraints were already there for the singlepoint calculation).
These unconstrained (and thus incorrect) forces are then used to initialize the Hessian and thus for the first step. In the following BFGS steps, the unconstrained old_f_vec and the displacements resulting from the bad first step &amp;quot;poison&amp;quot; the Hessian at the update step with off block-diagonal elements until the Hessian is recalculated completely (if for example the params change, or too many BFGS steps have been taken). This carries over a continuation of BFGS over several runs.
In my opinion the bug can be fixed by inserting the following code (copied from line 1250 which treats a restart from a previous BFGS run):
!NB The final forces saved by main are UNCONSTRAINED so we always need to add the contraints in here
if (constrain_ions) call firstd_constrain_forces(mdl%forces)
at around line 1198 (after the geom_get_forces of the non-restart branch).
Hope that helps
Peter
",
            "content_updated_on": "2014-07-17 14:02:11+01",
            "created_on": "2013-02-06 14:17:14+00",
            "id": 859,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "ptimize does not constrain movement correctly",
            "updated_on": "2014-07-17 14:02:11+01"
        },
        {
            "assignee": null,
            "content": "I have found a bug which causes a crash, when compiling with gfortran on Ni.  The attached testcase is just the standard USP string from the otfg.cell.

There is an array bounds error in assigning the result to ion_atom_poly_deriv on line 20003

    ion_atom_poly_deriv(0) = cc(1,1)
    ion_atom_poly_deriv(1) = cc(2,1)
-&amp;gt;  ion_atom_poly_deriv(2) = 2.0_dp*cc(3,1)
    ion_atom_poly_deriv(3) = 6.0_dp*cc(4,1)
    ion_atom_poly_deriv(4) = 24.0_dp*cc(5,1)

Valgrind shows

==1254== Invalid write of size 8
==1254==    at 0xAB33B3: __ion_atom_MOD_ion_atom_poly_deriv (ion_atom.f90:20003)
==1254==    by 0xAC627D: __ion_atom_MOD_ion_atom_pv_pseudise (ion_atom.f90:16892)
==1254==    by 0xAD0B9B: __ion_atom_MOD_ion_atom_pseudise (ion_atom.f90:14454)
==1254==    by 0xB1C988: __ion_atom_MOD_ion_atom_construct_psp_paw (ion_atom.f90:8486)
==1254==    by 0xB3FA5C: __ion_atom_MOD_ion_atom_generate_psp (ion_atom.f90:2041)
==1254==    by 0xAA69EE: __ion_MOD_ion_initialise (ion.f90:853)
==1254==    by 0x470338: MAIN__ (castep.f90:339)
==1254==    by 0x479B5C: main (castep.f90:21)
==1254==  Address 0x8f2ab60 is 0 bytes after a block of size 16 alloc'd
==1254==    at 0x4C2693D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==1254==    by 0xAC5F88: __ion_atom_MOD_ion_atom_pv_pseudise (ion_atom.f90:16870)
==1254==    by 0xAD0B9B: __ion_atom_MOD_ion_atom_pseudise (ion_atom.f90:14454)
==1254==    by 0xB1C988: __ion_atom_MOD_ion_atom_construct_psp_paw (ion_atom.f90:8486)
==1254==    by 0xB3FA5C: __ion_atom_MOD_ion_atom_generate_psp (ion_atom.f90:2041)
==1254==    by 0xAA69EE: __ion_MOD_ion_initialise (ion.f90:853)
==1254==    by 0x470338: MAIN__ (castep.f90:339)
==1254==    by 0x479B5C: main (castep.f90:21)


Although the *function* is declared to be &amp;quot;real(kind=dp), dimension(0:4)&amp;quot; the array it is assigned to on line 16892 targ(0:abs(l)-ncon) is only of dimension 2.  (The reaceback shows that this is being called for the local component so abs(l)==1).

Gfortran is within its rights to optimise away the temporary storage for the function result, and assign directly to the variable.  Indeed a debug build yields

At line 20010 of file ../../Source/Fundamental/ion_atom.f90
Fortran runtime error: Dimension 1 of array 'ion_atom_poly_deriv' has extent 5 instead of 2

Backtrace for this error:
  + function __ion_atom_MOD_ion_atom_poly_deriv (0x17F23CD)
    at line 19908 of file ion_atom.f90
  + function __ion_atom_MOD_ion_atom_pv_pseudise (0x1839CE9)
    at line 16892 of file ion_atom.f90
  + function __ion_atom_MOD_ion_atom_pseudise (0x1866ADD)
    at line 14455 of file ion_atom.f90
  + function __ion_atom_MOD_ion_atom_construct_psp_paw (0x18E8502)
    at line 8492 of file ion_atom.f90
  + function __ion_atom_MOD_ion_atom_generate_psp (0x19B66E0)
    at line 2045 of file ion_atom.f90
  + function __ion_MOD_ion_initialise (0x17C5E07)
    at line 854 of file ion.f90
  + function castep (0x45C246)
    at line 343 of file castep.f90
  + /lib64/libc.so.6(__libc_start_main+0xed) [0x7f48627e232d",
            "content_updated_on": "2012-09-07 09:55:41+01",
            "created_on": "2012-09-03 16:26:13+01",
            "id": 774,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Array bounds error/CRASH in ion_atom generating Ni OTF potential",
            "updated_on": "2012-09-07 09:55:41+01"
        },
        {
            "assignee": null,
            "content": "
Continuing a tpsd geometry optimisation (e.g. from an aborted or out-of-time earlier run) without fixed cell fail with the error:

Error in geom_mdl_to_fvec - cell inconsistency?
Current trace stack:
 geom_mdl_to_fvec
 geom_tpsd
 geometry_optimise
 castep
 

This error is caused by setting mdl%strain=0.0_dp at line 11477 in subroutine geom_tpsd (Functional/geometry.f90), which then causes cell, ref_cell and strain to be inconsistent with each other. In principle, the strain should only be set to zero at the beginning of a tpsd run, in practice mdl%tpsd_iteration is never actually set from a restart/checkpoint file for two reasons. This by the way implies that the code following the comments "If a restart" (l. 11496, geometry.f90) is never executed; all runs (continuation, restart or brand new) are treated as new runs.

Reason 1) mdl%tpsd_iteration=0 at the beginning of geom_tpsd (l. 11299) overwrites any iteration counter stored in the model.

Reason 2) Even if the iteration were not set to zero for all tpsd calculations, *.check files from aborted TPSD runs would not contain tpsd_iteration information at all. The reason for that is that tpsd_optimisation is only set to true AFTER the geom_tpsd main_loop (line 11780) completes. As tpsd_optimisation==.true. is required for the TPSD optional checkpoint file section to be written, any checkpoints during an TPSD run will not contain such a section (which would contain the tpsd_iteration number). In case of an aborted run (either for external or internal - like out-of-time - reasons), there consequently exists no checkpoint with TPSD information.

To fix the bug, both issues above must be fixed. A minimal and UNTESTED patch is attached.
",
            "content_updated_on": "2014-07-17 14:03:22+01",
            "created_on": "2014-01-15 13:52:50+00",
            "id": 970,
            "kind": "bug"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "TPSD variable cell calculations cannot be continued (TPSD is never really restarted at all)",
            "updated_on": "2014-07-17 14:03:22+01"
        },
        {
            "assignee": null,
            "content": "The jobs are run as a continuation of SPE or geometry task. CASTEP FD job stops with:

------------------------------------------------------------------------ &amp;lt;-- SCF
SCF loop      Energy                           Energy gain       Timer   &amp;lt;-- SCF
                                               per atom          (sec)   &amp;lt;-- SCF
------------------------------------------------------------------------ &amp;lt;-- SCF
Initial   5.10698825E+002                                        527.94  &amp;lt;-- SCF
      1  -5.29372825E+003                    1.81388346E+002    2256.46  &amp;lt;-- SCF
      2  -5.44972798E+003                    4.87499176E+000    3901.07  &amp;lt;-- SCF
      3  -5.45802625E+003                    2.59320791E-001    5549.98  &amp;lt;-- SCF
      4  -5.45805720E+003                    9.67329632E-004    7449.51  &amp;lt;-- SCF
      5  -5.45805727E+003                    1.90133880E-006    9434.70  &amp;lt;-- SCF
------------------------------------------------------------------------ &amp;lt;-- SCF
 Perturbation    1 (of    6): B     1 X at q=( 0.000, 0.000, 0.000):   9596.24s

ERROR in nlxc_initialise: require a density to initialise for task SINGLEPOINT
Current trace stack:
 nlxc_initialise
 phonon_fd_perturbation
 phonon_finite_displacement
 phonon_force_constant_matrix
 phonon_calculate
 castep
",
            "content_updated_on": "2012-09-20 16:03:12+01",
            "created_on": "2012-08-31 09:02:01+01",
            "id": 772,
            "kind": "task"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Finitie displacement phonons don't work with HSE (or other hybrid functionals)",
            "updated_on": "2012-09-20 16:03:12+01"
        },
        {
            "assignee": null,
            "content": "
In response to a query from a former colleague I just discovered that
exact exchange bandstructure calculations will always abort after the
SCF if run at OPT_STRATEGY_BIAS &amp;lt;= 2 with
&amp;gt; Paging of wavefunctions not supported by nlxc
&amp;gt; Current trace stack:
&amp;gt; nlxc_apply_wvfn_slice_cmplx
&amp;gt; nlxc_apply_wvfn_slice
&amp;gt; band_structure_apply_H
&amp;gt; band_structure_calculate_all
&amp;gt; run_band_structure
&amp;gt; castep
The cause is at bandstructure,f90 line 1261, where H_wf is
allocated with a WAVE_ALLOCATE call with &amp;quot;page=.true&amp;quot; if
opt-strategy_bias is lower than 3. This overrides any setting of
PAGE_WVFNS = 0.
Clearly this ought to be sorted out at a higher level of logic - either
the bandstructure code needs to override, or (another!) lock-out placed
in parameters,
Was anyone else aware of this?
What ought to be the correct behaviour here? The spec does not
explicitly discuss whether opt_strategy or page_wvfns ought to
take priority. Intuitively I might expect that the more specific
page_wvfns would override the general &amp;quot;opt_strategy&amp;quot;.
I wonder if it is worth doing anything about this in bandstructure since
that module will be removed soon in any case. But I do suggest checking
the behaviour of the replacement spectral module.
",
            "content_updated_on": "2014-07-17 14:37:53+01",
            "created_on": "2012-11-12 14:01:45+00",
            "id": 826,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "NLXC bandstructures fail at OPT_STRATEGY=memory",
            "updated_on": "2014-07-17 14:37:53+01"
        },
        {
            "assignee": null,
            "content": "There is a vulnerability to a parallel desynchronization in wave_Sorthonormalise_slice.  This has resulted in hanging or MPI aborts on the attached test case (64 cores)- but the failure is machine-dependent.

at line 13043 in wave.F90 - it seems that &amp;quot;wave_Sorthonormalise_overlap&amp;quot; is returning a different &amp;quot;status&amp;quot; on different nodes in the same GV group.  A comms_reduce_gv is clearly called for here and in any similar locations. 

    call wave_Sorthonormalise_overlap(wvfn_slice,overlap,rotation,status)

    if(status/=0) then
       if(wvfn_slice%bands_distributed) then

I encountered this as a secondary consequence of another problem which
caused other normalization failures later, but nevertheless this is a bug which could potentially cause a failure on an otherwise correct run.",
            "content_updated_on": "2012-09-20 17:09:02+01",
            "created_on": "2011-12-06 15:34:24+00",
            "id": 625,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Parallel desynchronization in wave_Sorthonormalise_slice",
            "updated_on": "2012-09-20 17:09:02+01"
        },
        {
            "assignee": null,
            "content": "I have been attempting to run the test suite for a debug build using the NAG compiler and finding a few interesting buglets.  One is that several of the geometry tests (H2-geom, MgCL2-geom, si2-bfgs) all
abort with the traceback

Runtime Error: *** Arithmetic exception: Floating invalid operation - aborting
../../Source/Functional/geometry.f90, line 6615: Error occurred in GEOMETRY:GEOM_UPDATE_INV_HESSIAN_PARAMS:GEOM_CALC_BULK_FREQ
../../Source/Functional/geometry.f90, line 5933: Called by GEOMETRY:GEOM_UPDATE_INV_HESSIAN_PARAMS
../../Source/Functional/geometry.f90, line 2703: Called by GEOMETRY:GEOM_BFGS
../../Source/Functional/geometry.f90, line 606: Called by GEOMETRY:GEOMETRY_OPTIMISE
../../Source/castep.f90, line 482: Called by CASTEP

which corresponds to source

   6612          !Which is the average phonon-mode at the Gamma-point.
   6613          !         if(debug_square_order) phonon=sqrt(phonon)
   6614          !         phonon=phonon/real(num_ion_basis_vecs,dp)
   6615          phonon=phonon/real(phonon_count,dp)
   6616

0.0/0.0 is certainly a floating invalid operation under ieee FP arithmetic.  Even with non-stopping behaviour, it does not seem the right thing to propagate a NaN which might have unpredictable effects later.  I would imagine some special case code could choose a sane default. ",
            "content_updated_on": "2012-10-10 16:04:58+01",
            "created_on": "2012-10-10 15:18:11+01",
            "id": 785,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Floating-point error (0/0) during geometry optimization",
            "updated_on": "2012-10-10 16:04:58+01"
        },
        {
            "assignee": null,
            "content": "
Proposal:

The accuracy of DFPT calculation results in general depends not just on the convergence tolerance of the DFPT solver

(EFIELD_ENERGY_TOL, PHONON_ENERGY_TOL, MAGRES_CONV_TOL) but also on the convergence of the initial SCF density.  (We recalculate the eigenvalues independently).  The maximum DFPT convergence acievable varies as the square of ELEC_ENERGY_TOL with a coefficient of the orer of unity.

Currently the *default* ELEC_ENERGY_TOL is well-chosen so that the desired PHONON/EFIELD_ENERGY_TOL can be achieved. The cross-check code in "parameters_read/reread" does this

       select case (current_params%task)
       case ('PHONON','EFIELD','PHONON+EFIELD','THERMODYNAMICS')
          select case (current_params%phonon_method)
          case ('LINEARRESPONSE')
             if (.not.keyword_present(ikey_elec_energy_tol)) &amp;
                  &amp; current_params%elec_energy_tol=min(770.0_dp*current_params%phonon_energy_tol**2, &amp;
                  &amp; 0.0018_dp*current_params%efield_energy_tol**2)
          case ('FINITEDISPLACEMENT')
             if (.not.keyword_present(ikey_elec_energy_tol)) &amp;
                  &amp; current_params%elec_energy_tol=io_unit_to_atomic(1.0e-9_dp,"ev")
          case default

However it is too easy for a user to override this sensible default and use too coarse an ELEC_ENERGY_TOL - particularly with Materials Studio. The consequences can vary from numerical convergence nose in results, DFPT solver convergence failuers, up to total loss of numerical significance in the numerical derivative used for Raman tensors.

 

Proposal:  The final values of ELEC_ENERGY_TOL, PHONON_ENERGY_TOL, EFIELD_ENERGY_TOL (and MAGRES_CONV_TOL?) are  cross checked in the case where ELEC_ENERGY_TOL is explicitly specified. This would use very similar logic to that already used in determining the default ELEC_ENERGY_TOL, and a prominent warning of potential loss of precision and possible convergence failure printed.  This could possibly go in "parameters_validate"?

 

 

 

 
",
            "content_updated_on": "2014-07-18 14:18:48+01",
            "created_on": "2014-07-04 12:06:31+01",
            "id": 1061,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Add cross-check of ELEC_ENERGY_TOL with PHONON_ENERGY_TOL and EFIELD_ENERGY_TOL",
            "updated_on": "2014-07-18 14:18:48+01"
        },
        {
            "assignee": null,
            "content": "
From Graeme Ackland:
I think this is just a wee bug report. We have a perfectly good workaround.
If you run MD with NVE, then restart with NPE (Anderson) it works, and if you restart an NPE (Anderson) with Parrinello-Rahman, it also works, but if you directly restart NVE with NPE (Parrinello-Rahman) it crashes with zero cell volume. I guess the Parrinello-Rahman variables aren't being initialised on this branch?
 
",
            "content_updated_on": "2014-07-28 15:51:20+01",
            "created_on": "2013-01-30 09:57:27+00",
            "id": 847,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Abort on switch from NVE to P&R NPH MD on continuation",
            "updated_on": "2014-07-28 15:51:20+01"
        },
        {
            "assignee": null,
            "content": "In the Gd FD supercell phonon calculation, there were just two perturbations.

The &amp;quot;run_time&amp;quot; checkpoint save mechanism 

   Insufficient time for another iteration. Stop execution.
   Writing model to Gd-otf2-GGAU6.0-PhonDisp.check

was triggered AFTER the second and final perturbation had completed, saving
a complete partial dynamical matrix, but before the force constant matrix was computed. (Line 2772 in phonon.f90 of 6.1)

The calculation could be recovered and completed with a CASTEP continuation (but not with phonons) only by setting

devel_code                  : PHONON:FD_WVFN_SCHEME=NONE,FD_DENSITY_SCHEME=NONE:ENDPHONON

1.  The checkpoint logic should be changed to avoid an &amp;quot;intermediate&amp;quot; write
    if this is the final perturbation.  

2.  The &amp;quot;phonons&amp;quot; utility was unable to restart from this as SPIN and NELECTRONS
    were wrong (presumably the supercell versions).  Could it be extended to do 
    so - or could the &amp;quot;intermediate supercell&amp;quot; checkpoint be changed?  

This needs to be cleaned up.
",
            "content_updated_on": "2013-03-09 15:09:32+00",
            "created_on": "2012-11-13 11:32:13+00",
            "id": 827,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Misplaced checkpoint save in supercell phonon calculation ",
            "updated_on": "2013-03-09 15:09:32+00"
        },
        {
            "assignee": null,
            "content": "It is possible to enter the Raman code following an FD phonon calculation,
which will either abort or generate erroneous results (according to Graeme Ackland).

This needs to be locked out until USP/efield is implemented.

 ",
            "content_updated_on": "2013-03-09 15:10:28+00",
            "created_on": "2013-02-05 07:45:45+00",
            "id": 856,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Need lock-out for Ultrasoft Raman calculation",
            "updated_on": "2013-03-09 15:10:28+00"
        },
        {
            "assignee": null,
            "content": "I guess not for Accelrys 6.0, but maybe for academic 6.0?

Paul Hodgkinson sent me this cell file which causes a bad failure, caused by a symmetry tolerance violation of &amp;gt; 1e-3 A.  Symmetry generate finds some symmetries but not all of them leading to a set of symmetries which fail to form a group.  

This breaks the assumptions upon which force and density symmetrization are based and could lead to all kinds of wrong results.  (The sum over symmetry transformed equivalents formalism is only correct when the symmetry operations form a group).

I suggest that we change the warning at line 19703 in cell.F90 &amp;quot;cell_symmetry_test&amp;quot; to an abort.

Keith
",
            "content_updated_on": "2013-03-09 16:35:12+00",
            "created_on": "2011-10-31 18:35:49+00",
            "id": 604,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Inaccurate atom co-ordinates cause SYMMETRY_GENERATE failure ",
            "updated_on": "2013-03-09 16:35:12+00"
        },
        {
            "assignee": null,
            "content": "
Martin Dove raised a request for DFT+D phonon capability, both personally
and through the Materials Chamistry route.
Will need to consider implementation options
1. Working with Erik McNellis - or whoever at FHI is doing this?
2. An &amp;quot;on-the-fly&amp;quot; supercell
3. How will we treat response of Hirshfeld charges self consistently?
Grimme scheme will be easier than TS.
",
            "content_updated_on": "2014-07-30 16:42:34+01",
            "created_on": "2013-05-08 10:24:50+01",
            "id": 900,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "DFT+D phonons",
            "updated_on": "2014-07-30 16:42:34+01"
        },
        {
            "assignee": null,
            "content": "The attached calculation, which is a singlepoint calculation with stress aborts immediately following the first SCF with  

Error in dftd_sedc_calculate_cell: sedc returned an exit status /= 0
Current trace stack:
 dftd_sedc_calculate_cell
 dftd_sedc_calculate_energy_cell
 electronic_minimisation
 calculate_finite_basis_corr
 check_elec_ground_state
 castep

This doesn't give much of a clue what is going wrong. 

I tried a simple Si2 replication of a singlepoint with stress calculation, with other parameters similar, but that succeeded.

",
            "content_updated_on": "2013-04-30 17:28:23+01",
            "created_on": "2012-12-28 13:53:08+00",
            "id": 834,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SEDC singlepoint calculation aborts with unhelpful error message",
            "updated_on": "2013-04-30 17:28:23+01"
        },
        {
            "assignee": null,
            "content": "There is a bug that appears in three instances in the file electronic.f90 (both in 6.1.1 and in the mercurial). 

In the following three subroutines

electronic_line_minimisation
electronic_true_ideal_step
electronic_ideal_step_size

the intent(out) variable &amp;quot;status&amp;quot; (which is probably supposed to return some information on how the function worked) is used as a parameter in the subroutine call to trace_exit at the end of these subroutines. 

This means that any previous information in the status variable is lost. It then contains rather the success/failure information of the trace_exit call. 

The attached mercurial patch introduces a local integer variable &amp;quot;trace_status&amp;quot; in the three subroutines, which is then used for calls to the trace subroutines.
",
            "content_updated_on": "2013-05-03 10:12:43+01",
            "created_on": "2013-04-24 17:39:53+01",
            "id": 890,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "electronic.f90: intent(out) variable &quot;status&quot; abused in trace_exit",
            "updated_on": "2013-05-03 10:12:43+01"
        },
        {
            "assignee": null,
            "content": "I thought it might be useful to keep track of requests for new cell keywords
for 6.0 in one place.  Hopefully this tracker item will fit the bill. It also
allows for some discussion in the comments.",
            "content_updated_on": "2013-05-07 09:51:55+01",
            "created_on": "2011-04-20 09:55:17+01",
            "id": 519,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Cell variable changes for 6.0",
            "updated_on": "2013-05-07 09:51:55+01"
        },
        {
            "assignee": null,
            "content": "
Comes from Bjorn Winkler:

in the attached file, at the beginning, there is a comment that spin up = spin down

Info: number of up-spin electrons is equal to the
number of down-spins and spin_polarized=true

consider setting spin_polarized=false.

This is strange, as the number of electrons with spins up and down apparently is not the same:

number of electrons : 248.0
net charge of system : 0.000
net spin of system : 8.000
number of up spins : 128.0
number of down spins : 120.0
treating system as spin-polarized
number of bands : 196

==

I attached a smaller example showing exactly the same behaviour.
",
            "content_updated_on": "2014-07-28 15:12:54+01",
            "created_on": "2014-04-23 16:27:10+01",
            "id": 1008,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Strange complain about spins on continuation",
            "updated_on": "2014-07-28 15:12:54+01"
        },
        {
            "assignee": null,
            "content": "
In a recent FIRE geometry optimisation, I found some incorrect behaviour.
Performed actions:
* FIRE optimisation on structure for a number of steps, interrupted by adding STOP to parameter files. The cell file did not contain any cell constraints.
* Continuation of this job showed that clearly convergence was not yet achieved:
Restarting FIRE
FIRE: finished iteration 0 with total energy= -4.05745765E+003 eV
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
| Parameter | value | tolerance | units | OK? | &amp;lt;-- FIRE
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
| dE | 0.000000E+000 | 2.000000E-005 | eV | No | &amp;lt;-- FIRE
| |F|max | 1.074469E+000 | 5.000000E-002 | eV/A | No | &amp;lt;-- FIRE
| |dR|max | 0.000000E+000 | 1.000000E-003 | A | No | &amp;lt;-- FIRE
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
However, I aborted this continuation, before it could finish one FIRE iteration (hard abort by killing job).
* I then modified the cell file to include fix_all_cell : true and fix_com, fix_all_ions : false and continued the job again. This time however, castep botched the convergence test:
Restarting FIRE
FIRE: finished iteration 0 with total energy= -4.05745765E+003 eV
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
| Parameter | value | tolerance | units | OK? | &amp;lt;-- FIRE
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
| dE | 0.000000E+000 | 2.000000E-005 | eV | Yes | &amp;lt;-- FIRE
| |F|max | 0.000000E+000 | 5.000000E-002 | eV/A | Yes | &amp;lt;-- FIRE
| |dR|max | 0.000000E+000 | 1.000000E-003 | A | Yes | &amp;lt;-- FIRE
+-----------+-----------------+-----------------+------------+-----+ &amp;lt;-- FIRE
Finished FIRE
even though the forces were read correctly. When writing the final forces one could clearly see some of them exceeding 1 eV/A.
I have an inkling that this might somehow be related to the bug described in #859 http://ccpforge.cse.rl.ac.uk/gf/project/castep/tracker/?action=TrackerItemEdit&amp;amp;tracker_item_id=859&amp;amp;start=0 - but that's just a guess. If I find the time to create/run a debug job, I'll try to track this one down.
",
            "content_updated_on": "2014-07-29 21:27:50+01",
            "created_on": "2013-06-28 15:34:02+01",
            "id": 922,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FIRE continuation with changed cell constraints causes premature convergence",
            "updated_on": "2014-07-29 21:27:50+01"
        },
        {
            "assignee": null,
            "content": "Here is a case where OTFG with PBE runs happily (and is part of our regression tests), but LDA fails with:

Error: ion_atom_ps_diag: DSYGV: non positive definite l=0
Current trace stack:
 ion_atom_ps_diag
 ion_atom_pseudo_scf_test
 ion_atom_generate_psp
 ion_initialise
 castep

This is Rb potential, the string is 

Rb  2|2.5|2.5|2.1|5.5|6.6|8.1|40U:50U+0U+0.125:41UU(qc=3.5)[",
            "content_updated_on": "2013-05-23 09:54:31+01",
            "created_on": "2009-12-17 16:16:50+00",
            "id": 224,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LDA OTFG fails for Rb ",
            "updated_on": "2013-05-23 09:54:31+01"
        },
        {
            "assignee": null,
            "content": "This arose from a list posting by Jonas Baltrusaitis, who was perplexed that
despite inputting a cubic structure, CASTEP reported finding only a tetragonal point group symmetry.

I too was confused until I realised that this was a consequence of the 
symmetry reduction for an LDA+U calculation. The input file contained a %BLOCK HUBBARD_U, but QUANTISATION_AXIS was implicit.

I suggest that when cell_reduce_symmetry_magnetic() is called and discards some symmetry that this information is presented by cell_output to inform the end-user.  This could be done with a simple flag on num_symmetry_operations before and after the call, and the output message should go in the same place as the symmetry is written.

",
            "content_updated_on": "2013-09-24 18:15:33+01",
            "created_on": "2013-06-03 13:32:37+01",
            "id": 911,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Symmetry reduction by LDA+U ought to be flagged in .castep",
            "updated_on": "2013-09-24 18:15:33+01"
        },
        {
            "assignee": null,
            "content": "The attached tiny test case for transition state using NEB fails with

   Warning: B(t)*B Matrix has all zero eigenvalues in di_algor_diagonalize_F_matrix!
  problem in di_algor_make_F_primitives (bonds)
  Warning: Error in di_algor_make_F_primitives 
  Warning: switching to optimization with Cartesians

Error for klist_loc in deloc_utils_read_di_data
Current trace stack:
 deloc_utils_io_abort
 deloc_utils_read_di_data
 di_algor_optimize
 geom_algor_DELOC
 tssearch_utils_PredictNextStep
 tssearch_algorithm_neb_optimize_
 tssearch_algorithm_neb_driver
 tssearch_driver
 tssearch_run
 castep
",
            "content_updated_on": "2013-06-19 17:42:11+01",
            "created_on": "2013-05-06 10:51:31+01",
            "id": 898,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "NEB TS search failure",
            "updated_on": "2013-06-19 17:42:11+01"
        },
        {
            "assignee": null,
            "content": "We have a regression test (attached) which used to run fine.
After the following checkin:
6031:68fa8ec3d58f Keith Refson &amp;lt;Keith.Refson@stfc.ac.uk&amp;gt; Fix for &amp;quot;mostly harmless&amp;quot; bug in delocalised internals with missing array allocation

It sstarted to fail intermittently  with the diagnostic:

Information for developers:
ALLOCATE request failed for array &amp;quot;bmat_disconn_fragm&amp;quot; in routine &amp;quot;di_algor_get_init_deloc_coords&amp;quot;
Current trace stack:
 di_algor_get_init_deloc_coords
 di_algor_optimize
 geom_algor_DELOC
 tssearch_utils_PredictNextStep
 tssearch_algorithm_neb_optimize_image
 tssearch_algorithm_neb_driver
 tssearch_driver
 tssearch_run
 castep

The above mention change was:

ndex: trunk/src/ms-CASTEP/CASTEP/Functional/geometry_deloc_algor.f90
===================================================================
diff -u -N -r465967 -r476674
--- trunk/src/ms-CASTEP/CASTEP/Functional/geometry_deloc_algor.f90	(.../geometry_deloc_algor.f90)	(revision 465967)
+++ trunk/src/ms-CASTEP/CASTEP/Functional/geometry_deloc_algor.f90	(.../geometry_deloc_algor.f90)	(revision 476674)
@@ -1642,6 +1642,12 @@
      &amp;amp;       /,14x,'Should be: ',i3,'  Found: ',i3)
 
        go to 990
+    else
+
+       allocate(bmat_disconn_fragm(1:nat3,1:num_disconn_fragm_2),stat=ierr)
+       if (ierr/=0) call io_allocate_abort('bmat_disconn_fragm','di_algor_get_init_deloc_coords')
+       bmat_disconn_fragm = 0.0_di_dp
+
     endif
     
     num_disconn_fragm_2 = max(num_disconn_fragm,1)

====

and it looks that allocate statement added here is probably  not needed. Anyway it looks that num_disconn_fragm_2 used in the allocate statement is not defined and this way the run can be successful if it is initialized to something reasonable or not if not...


As the array is global I suggest to allocate it only if it is not allocated and with some reasonable array size. Or may be better to revert it back where it was as for last decade we did not see a problem with this part....
",
            "content_updated_on": "2013-06-29 11:47:06+01",
            "created_on": "2013-06-28 17:30:48+01",
            "id": 923,
            "kind": "bug"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "NEB started to fail complaining about insuffcient memory",
            "updated_on": "2013-06-29 11:47:06+01"
        },
        {
            "assignee": null,
            "content": "
The message printed by "parameters_reread_real" can give infuriatingly useless results such as

    Info: ELEC_ENERGY_TOL modified from    0.200000E-05 eV to    0.200000E-05 eV

when the change is tiny.  Such tiny changes DO occur on, eg a change of CODATA, and it would be highly useful to know what the value ought to be to avoid flagging a change.  This can be quite important when the consequence is to invalidate wavefunction and phonon validity data.

 
",
            "content_updated_on": "2014-09-04 10:34:34+01",
            "created_on": "2014-08-06 13:29:00+01",
            "id": 1090,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Parameters_reread change message has insufficient precision",
            "updated_on": "2014-09-04 10:34:34+01"
        },
        {
            "assignee": null,
            "content": "When running a geometry minimization with BFGS, it gets to the converged geometry. It then proceedes to write out seed.xxxx.bfgs_extrap files and then close them which causes the processes to crash without finishing or writing a final check file. 

This is probably due to the number overflowing the 4 digits allowed:
Nb3Sn.9999.bfgs_extrap
Nb3Sn.****.bfgs_extrap

StdErr:
&amp;quot;../../Source/Functional/geometry.f90&amp;quot;, line 2845: 1525-014 The I/O operation on unit 10 cannot be completed because an e
rrno value of 2 (No such file or directory) was received while opening the file.  The program will stop.
",
            "content_updated_on": "2013-08-16 19:20:56+01",
            "created_on": "2013-02-05 12:18:40+00",
            "id": 857,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "bfgs_extrap reaching 9999 processor limit",
            "updated_on": "2013-08-16 19:20:56+01"
        },
        {
            "assignee": null,
            "content": "If you try to get GO of a NaCl molecule in the box 10x10x10 A with dipole correction on the the result strongly depend on the molecule orientation: it either converges (oriented along z) or not at all - arbitrary oriented.
Both input-output files are attached.
",
            "content_updated_on": "2013-08-16 20:11:04+01",
            "created_on": "2012-08-02 11:24:57+01",
            "id": 759,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "GO with dipole correction for NaCl molecule strongly depends on orientation ",
            "updated_on": "2013-08-16 20:11:04+01"
        },
        {
            "assignee": null,
            "content": "Philippe Aeberhard just pointed out to me that parameter FINE_GMAX has no effect - it appears that any value is ignored on input - at least the value reported
by parameters_output is wrong.

With the attached Si2 test case, FINE_GMAX is reported as 20.0 with CASTEP 5.5
but 12.5491 1/A in CASTEP 6.0 and 6.1.

There is no problem with FINE_GRID_SCALE, so I guess not many people are using FINE_GMAX, otherwise this might have been reported previously. 

Keith
",
            "content_updated_on": "2013-08-19 12:45:26+01",
            "created_on": "2013-01-09 15:28:45+00",
            "id": 840,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "FINE_GMAX ignored on input",
            "updated_on": "2013-08-19 12:45:26+01"
        },
        {
            "assignee": null,
            "content": "If a param file with a line that contains a tab character but nothing else is used, CASTEP exits with the error message:
Label &amp;quot;&amp;quot; not in keyword list

Try e.g. Fe.param, attached.

A line may contain tab characters, however no tab characters are allowed on an otherwise blank line.",
            "content_updated_on": "2013-09-10 12:12:52+01",
            "created_on": "2013-08-21 15:54:56+01",
            "id": 935,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "A tab in an otherwise blank line in input file causes castep to fail",
            "updated_on": "2013-09-10 12:12:52+01"
        },
        {
            "assignee": null,
            "content": "CASTEP command-line arguments neither follow GNU (double dash and long option) nor POSIX (single dash one letter) standards. Whilst it may be problematic for backwards compatibility to remove the '-help' option, please could '-h' and '--help' be added.

&amp;quot;--help-search &amp;lt;keyword&amp;gt;&amp;quot; may also be less confusing than the current &amp;quot;-help search &amp;lt;keyword&amp;gt;&amp;quot;.

Andrew.",
            "content_updated_on": "2013-09-15 10:52:10+01",
            "created_on": "2012-03-30 10:18:46+01",
            "id": 717,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP Command-line arguments non-standard",
            "updated_on": "2013-09-15 10:52:10+01"
        },
        {
            "assignee": null,
            "content": "The incorrect .cell file block

%block hubbard_u
Sc 3d:10.0
%endblock hubbard_u

is not trapped, and the file is read, without error or warning messages,
as if there were no U specified.  This leads to the run proceeding, silently
as pure LDA which could easily trip up careless users and lead to wrong results.

Could this be trapped and the run aborted?

",
            "content_updated_on": "2013-09-24 11:31:56+01",
            "created_on": "2013-06-14 14:29:46+01",
            "id": 918,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bad syntax for HUBBARD_U is not trapped.",
            "updated_on": "2013-09-24 11:31:56+01"
        },
        {
            "assignee": null,
            "content": "CASTEP B3LYP run with k-point at 0.25 0.25 0.25 fails with the included error.

For the \Gamma point run the PDOS looks very strange.

------------------------------------------------------------------------ &amp;lt;-- SCF
SCF loop Energy Energy gain Timer &amp;lt;-- SCF
per atom (sec) &amp;lt;-- SCF
------------------------------------------------------------------------ &amp;lt;-- SCF
Initial NaN 166.26 &amp;lt;-- SCF
wave_orthonormalise_overlap_wv_ks: ztrtri failed in inversion
Current trace stack:
wave_orthonormalise_over_wv_ks
electronic_wvfn_step
electronic_line_minimisation
electronic_iter_diag_H
electronic_minimisation
check_elec_ground_state
castep
wave_orthonormalise_overlap_wv_ks: ztrtri failed in inversion",
            "content_updated_on": "2013-09-25 13:57:39+01",
            "created_on": "2011-08-26 12:45:32+01",
            "id": 556,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP B3LYP run with k-point at 0.25 0.25 0.25 fails ",
            "updated_on": "2013-09-25 13:57:39+01"
        },
        {
            "assignee": null,
            "content": "From Paul Hodgkinson, Durham.

For crystallographic applications a severe annoyance is that CASTEP has no
means of preserving crystallographic atom labels between input and output files.

The current &amp;quot;extended label syntax&amp;quot; is no good as that has the effect of distinguishing *distinct* atom types.  What we need is a label which is 
attached to an individual atom, and does not label a species.

This would require a new array in the &amp;quot;unit_cell&amp;quot; type I/O code in cell_read and cell_write and attention to output formatting.  

One suggestion for input syntax is 

  &amp;lt;Element&amp;gt;:&amp;lt;Extspecies&amp;gt;:&amp;lt;Label&amp;gt;

ie the label follows after a second colon.

  H::H1

Hopefully this would not break output parsing scripts or require only minor
changes.
  ",
            "content_updated_on": "2013-09-25 14:01:21+01",
            "created_on": "2012-05-24 11:54:28+01",
            "id": 738,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Need transparent atom label naming",
            "updated_on": "2013-09-25 14:01:21+01"
        },
        {
            "assignee": null,
            "content": "PSPOT_DIR provides a nice mechanism for pulling potentials from a standard location. It has a problem however when real-space transformation is used. This generates .realpot prior to the main calculation, and we don't really want to store those in the central recpot repository [there are transformation parameters that include, for example, energy cutoff - not at all universal",
            "content_updated_on": "2013-10-25 07:52:22+01",
            "created_on": "2013-03-19 17:18:18+00",
            "id": 870,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PSPOT_DIR cannot be used properly with real space potentials",
            "updated_on": "2013-10-25 07:52:22+01"
        },
        {
            "assignee": null,
            "content": "
A slightly belated recording of a request by Matt:
Just talking with Phil about spin and we have an internal inconsistency between the way that spin is represented in our output - electronic gives integrated spin as electrons whereas Mulliken &amp;amp; Hirshfeld use hbar. With all the non-collinear spin stuff coming in, we ought to be consistent ... so why not add a new parameter, spin_unit, which can be either hbar or mu-B and do all spin output via a call to io_atomic_to_unit?
Matt
I concur. I even had to explain this on the Accelrys materials studio forum, as it was causing confusion there.
Keith
",
            "content_updated_on": "2014-11-04 13:25:02+00",
            "created_on": "2013-10-14 13:35:00+01",
            "id": 951,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Rationalise spin output and add spin_unit",
            "updated_on": "2014-11-04 13:25:02+00"
        },
        {
            "assignee": null,
            "content": "A long-standing weakness of the dynamical matrix symmetry analyser is that
it is not robust in the presence of small deviaions from symmetry. This results in error messages such as

Internal Error in secondd_find_dmat_symmetry -- repeated analyses disagree
 Please submit a bug report with a copy of your &amp;lt;seedname&amp;gt;.cell file
 Try increasing the precision of the symmetry operations and try again
 *** Failure in phonon dynamical matrix symmetry analysis ***
Current trace stack:
 secondd_find_dmat_symmetry
 phonon_linear_response
 phonon_dynamical_matrix
 phonon_calculate_std_kpoints
 phonon_calculate
 castep

A workaround is usually to use &amp;quot;snap_to_symmetry&amp;quot; and/or to replace %LATTICE_CART by %LATTICE_ABC for hexagonal and trigonal systems.


Would it be possible for the failure mode to be more graceful than a (safe) abort.  If we really can not determine the symmetry for every element, could the conflicting ones simply be dropped from dyn_mat_equiv and mapped as unconstrained and independent?  I believe the higher level code should now automatically handle this and calculate them explicitly.  &amp;quot;Secondd_complete_from_symmetry&amp;quot; could be re-instated to handle these cases.

",
            "content_updated_on": "2013-10-08 12:29:08+01",
            "created_on": "2012-06-29 11:53:40+01",
            "id": 747,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Internal Error in secondd_find_dmat_symmetry -- repeated analyses disagre",
            "updated_on": "2013-10-08 12:29:08+01"
        },
        {
            "assignee": null,
            "content": "I have just tracked down a bug which gave wildly random values for
the memory estimates in geometry, md, phonon and possibly other
runs.  This was introduced by the noncollinear magnetism merge
(hg id 5986) back in May.

The cause was a change to subroutine wave_calc_storage_slice(slice,..) which makes use of argument slice%nspinorcomps in the RAM calculation. Previously that routine made no use of argument slice, so most of the &amp;quot;&amp;lt;task&amp;gt;_calc_storage&amp;quot; routines did not bother to allocate it.  Since the change they now set RAM from an unassigned variable returned by wave_calc_storage_slice.

Can we please check and fix all &amp;quot;&amp;lt;task&amp;gt;_calc_storage&amp;quot; routines which call wave_calc_storage_slice()?
",
            "content_updated_on": "2013-10-30 18:23:40+00",
            "created_on": "2013-09-09 10:58:23+01",
            "id": 938,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Uninitialised variable gives random, large memory estimates",
            "updated_on": "2013-10-30 18:23:40+00"
        },
        {
            "assignee": null,
            "content": "The title may be jumping to conclusions, but the simplest band parallel runs no longer work, and crash with memory exceptions.  See the attached Si2 case which ran correctly on 4 cores (2-way k-point x 2-way band) under 6.1.1 but aborts with linux malloc heap-checking routines under 7.0.

*** Error in `castep-r6151*** Error in `castep-r6151': free(): invalid pointer: 0x*** Error in `castep-r6151': malloc(): memory corruption: 0x00000000066f3d80 ***
*** Error in `castep-r6151': malloc(): memory corruption: 0x0000000005e978a0 ***
*** Error in `castep-r6151': malloc(): memory corruption: 0x0000000006d761c0 ***


 Running under valgrind is most revealing:

==12196== Invalid write of size 8
==12196==    at 0x12AB26C: mkl_blas_mc3_zgemm_pst (in /home/kr/bin/castep-r6151)
==12197==    by 0x50CAF8: electronic_mp_electronic_iter_diag_h_ (electronic.f90:1594)
==12196==    by 0x1249748: mkl_blas_mc3_xzgemm (in /home/kr/bin/castep-r6151)
==12196==    by 0xE51748: mkl_blas_xzgemm (in /home/kr/bin/castep-r6151)
==12196==    by 0xE4E2FE: mkl_blas_zgemm (in /home/kr/bin/castep-r6151)
==12196==    by 0xE4B748: ZGEMM (in /home/kr/bin/castep-r6151)
==12196==    by 0xD81537: wave_mp_wave_transform_slice_ (wave.f90:25038)
==12196==    by 0xD46078: wave_mp_wave_orthog_over_wv_slice_ (wave.f90:13843)
==12196==    by 0x52082C: electronic_mp_electronic_proj_grad_slice_ (electronic.f90:6193)
==12196==    by 0x51D783: electronic_mp_electronic_sd_direction_slice_ (electronic.f90:5267)
==12196==    by 0x51D36C: electronic_mp_electronic_step_direction_slice_ (electronic.f90:5007)
==12196==    by 0x54B3F2: electronic_mp_electronic_find_eigenslice_ (electronic.f90:14351)
==12196==    by 0x50CAF8: electronic_mp_electronic_iter_diag_h_ (electronic.f90:1594)
==12196==  Address 0xef218c0 is 0 bytes after a block of size 512 alloc'd
==12196==    at 0x4E0BB0C: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)
==12196==    by 0x2DF221A: for_alloc_allocatable (in /home/kr/bin/castep-r6151)
==12196==    by 0xD80A3F: wave_mp_wave_transform_slice_ (wave.f90:24975)
==12196==    by 0xD46078: wave_mp_wave_orthog_over_wv_slice_ (wave.f90:13843)
==12196==    by 0x52082C: electronic_mp_electronic_proj_grad_slice_ (electronic.f90:6193)
==12196==    by 0x51D783: electronic_mp_electronic_sd_direction_slice_ (electronic.f90:5267)
==12196==    by 0x51D36C: electronic_mp_electronic_step_direction_slice_ (electronic.f90:5007)
==12196==    by 0x54B3F2: electronic_mp_electronic_find_eigenslice_ (electronic.f90:14351)
==12196==    by 0x50CAF8: electronic_mp_electronic_iter_diag_h_ (electronic.f90:1594)
==12196==    by 0x5086C8: electronic_mp_electronic_minimisation_ (electronic.f90:496)
==12196==    by 0x4EC3E1: castep_IP_check_elec_ground_state_ (castep.f90:934)
==12196==    by 0x4CFB4B: MAIN__ (castep.f90:471)

There are a large slew of read and write errors detected within the ZGEMM call at line 25038 in WAVE_TRANSFORM_SLICE across the processors.  This does look like an argument error.


Keith

",
            "content_updated_on": "2013-10-30 18:25:32+00",
            "created_on": "2013-10-14 11:37:33+01",
            "id": 950,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Band parallel broken by NCM",
            "updated_on": "2013-10-30 18:25:32+00"
        },
        {
            "assignee": null,
            "content": "Gareth Griffith reports a failure of the group theory for a FD/supercell
phonon calculation of ice viii in a non-primitive I 41/a m d cell.


Error in secondd_irrep_symbol: chi(primary) =/ 1 or -1
Current trace stack:
 secondd_irrep_symbol
 secondd_calc_irreps
 phonon_diag_and_output
 phonon_calculate
 castep
  
On further investigation, it appears that the character table returned by secondd_calc_irreps is wrong


+ .......................................................................... +
 +        Character table from group theory analysis of eigenvectors          +
 +                           Point Group =  15, D4h                           +
 + .......................................................................... +
 +  Rep  Mul |    E  2'   2  2&amp;quot;   4   I m_v m_h m_v  -4                       +
 +           | ----------------------------------------                       +
 + a Eu    5 |    2   0  -2   0   0  -2   0   2   0   0                       +
 + b A2u   3 |    1  -1   1  -1   1  -1   1  -1   1  -1                       +
 + c E     5 |    2  -2   2   0   0   0   0   0   0   0                       +
 + d ?g    1 |    1   1   1   0   0   1   1   1   0   0                       +
 + e ?u    1 |    1   1   1   0   0  -1  -1  -1   0   0                       +
 + f A1g   3 |    1   1   1   1   1   1   1   1   1   1                       +
 + g Eg    5 |    2   0  -2   0   0   2   0  -2   0   0                       +
 + h E     6 |    2   0  -2   0   0   0  -2   0   0   0                       +
 + i E     4 |    2   2   2   0   0   0   0   0   0   0                       +
 + j B1u   3 |    1  -1   1   1  -1  -1   1  -1  -1   1                       +
 + k B2g   3 |    1   1   1  -1  -1   1   1   1  -1  -1                       +
 + l B1g   1 |    1  -1   1   1  -1   1  -1   1   1  -1                       +
 + m B2u   1 |    1   1   1  -1  -1  -1  -1  -1   1   1                       +
 + n E     2 |    2   0  -2   0   0   0   2   0   0   0                       +
 + o A2g   1 |    1  -1   1  -1   1   1  -1   1  -1   1                       +
 + p A1u   1 |    1   1   1   1   1  -1  -1  -1  -1  -1                       +
 ==============================================================================

A sub-issue is the io-abort test in secondd_irrep_symbol which was removed from
the code for the above test.  That change should be kept - a symmetry analysis
failure is not serious enough to cause an abort.

",
            "content_updated_on": "2013-10-30 18:48:13+00",
            "created_on": "2011-01-13 12:06:54+00",
            "id": 468,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Group theory analysis fails for ice viii I41/amd in non-primitive cell",
            "updated_on": "2013-10-30 18:48:13+00"
        },
        {
            "assignee": null,
            "content": "
The utility Castepconv does not run any castep calculations in the release version. This is because a dryrun flag has in error been included on line 81 which reads:

&gt;"rcmd"    : "castep &lt;seedname&gt; -dryrun",

This should just be

&gt;"rcmd"    : "castep &lt;seedname&gt; "

With this change the program runs as intended and will perform convergence testing.
",
            "content_updated_on": "2015-06-11 09:38:31+01",
            "created_on": "2015-06-10 18:24:20+01",
            "id": 1306,
            "kind": "enhancement"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "Castep python utility Castepconv does not work",
            "updated_on": "2015-06-11 09:38:31+01"
        },
        {
            "assignee": null,
            "content": "
See thread in castep-coders list in Sep 2013 entitled
&amp;quot;List of keywords changeable on continuation&amp;quot;
",
            "content_updated_on": "2015-06-26 17:04:30+01",
            "created_on": "2013-11-08 18:21:55+00",
            "id": 961,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Keyword help should say whether keyword is changeable on continuation or rereadable.",
            "updated_on": "2015-06-26 17:04:30+01"
        },
        {
            "assignee": null,
            "content": "
Attached files show a possibly crude calculation which fails in 7.0 but runs fine in 6.1 release (reported by US government customer). The error happens after the first step of the finite basis set correction calculation:
Final energy = -22055.84683169 eV
(energy not corrected for finite basis set)
Calculating total energy with cut-off of 295.000eV.
Error: ion_augment_charge_nospin_gamma : nspins /= 1
Current trace stack:
ion_augment_charge_nospin_gamma
density_calculate_wvfn_gamma
density_calculate_wavefunction
calculate_finite_basis_corr
check_elec_ground_state
castep
",
            "content_updated_on": "2014-01-15 10:06:46+00",
            "created_on": "2014-01-03 14:44:58+00",
            "id": 968,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Spin-polarized calculation ends up in ion_augment_charge_nospin_gamma and exits with error",
            "updated_on": "2014-01-15 10:06:46+00"
        },
        {
            "assignee": null,
            "content": "PBEsol seems to do rather well on structural parameters (see attached report); however, there seems to be a bug somewhere for spin-polarized case (try Fe):

ERROR: xc_ggs - I do not know about PBESOL Current trace stack:
 xc_ggs
 xc_calculate_potential
 locpot_calculate
 electronic_prepare_H
 electronic_minimisation
 calculate_finite_basis_corr
 check_elec_ground_state
 castep

I would not expose PBEsol if there was indeed no spin-polarized version.",
            "content_updated_on": "2009-07-06 15:37:16+01",
            "created_on": "2009-07-06 11:18:09+01",
            "id": 148,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PBEsol is not supported for spin-polarized calculations",
            "updated_on": "2009-07-06 15:37:16+01"
        },
        {
            "assignee": null,
            "content": "The subject says it all.  Using

%bloCK LATTICE_abc
  5.7899780   5.7899780   14.000568
  90.000000   90.000000  120.0000000
%ENDBLOCK LATTICE_abc

generates a left-handed set of lattice vectors with a negative determinant.
This upsets some materials Studio optics analysis.

I have prototype code transcribed from &amp;quot;cteprouts.pm&amp;quot; to generate symmetry
oriented cells for all of the Bravais lattices, and it's probably best to
roll the fix into this code and only make on change to the behaviour of LATTICS_ABC.

Keith
",
            "content_updated_on": "2009-01-21 11:42:55+00",
            "created_on": "2009-01-14 09:58:21+00",
            "id": 98,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "LATTICE_ABC  generate left-handed set of lattice vectors for hexagonal system",
            "updated_on": "2009-01-21 11:42:55+00"
        },
        {
            "assignee": null,
            "content": "A few issues with the new module:

1. trace is incorrect in hirshfeld_output, there are two calls to trace_entry and no trace_exit

2. code documentation: what is Vratio?

3. a message is generated: 

Hirshfeld analysis: castep_7a.supercell not found.

What is this supposed to be? DMol3 happily generates Hirshfeld charges without any supercell, and CASTEP seems to be OK without it too. Perhaps the message can be hidden into high iprint settings?

4. Stylistic:

        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        x  Element  Atom         Hirshfeld Q      Hirshfeld Vratio x
        x       Pt     1        -0.049613514         1.082500749   x
        x       Pt     2         0.036629360         1.073837116   x

I would add a delimiter before the first line with the values; also use a format like f7.3, don't show that many digits (compare to Mulliken output). And unless we get a satisfactory explanation of what Vratio is (could not find in the original paper), should we hide its output completely?
",
            "content_updated_on": "2009-07-10 15:29:22+01",
            "created_on": "2009-06-30 14:22:00+01",
            "id": 143,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "hirshfeld module: initial comments (bug + style)",
            "updated_on": "2009-07-10 15:29:22+01"
        },
        {
            "assignee": null,
            "content": "The current behaviour of CASTEP DFPT in case of convergence failure for
any perturbation, either of the DFPT solver or of the prerequisite bandstructure
is to print a message in the .castep file, but continue the run.  This
has the unfortunate consequence that users who do not read the output file can fail to notice that the run was a disaster.

This should be changed to implement criteria for &amp;quot;soft&amp;quot; warning errors where
the result is within a sensible margin of convergence and &amp;quot;hard&amp;quot; errors where
it is not. The first should cause a warning; the second an abort.

There are several possible error exits from the DFPT solvers and all of them
will need to have criteria devised for a soft vs hard fail. (Perhaps tunable
via devel_codes?).

",
            "content_updated_on": "2010-03-19 16:35:52+00",
            "created_on": "2009-10-01 15:35:42+01",
            "id": 189,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP DFPT calculations do not abort if convergence failure detected",
            "updated_on": "2010-03-19 16:35:52+00"
        },
        {
            "assignee": null,
            "content": "In a supercell phonon calculation the density is set up with a call
to density_initialise().  This should really have the optional argument
ATOM_INIT_MAGMOM set in order to perform a spin initialisation. Currently
there is no way to set up, eg an AFM supercell calculation.
",
            "content_updated_on": "2008-08-11 13:12:45+01",
            "created_on": "2008-05-27 13:35:47+01",
            "id": 25,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Atomic spin initialisation doesn't work for FD/supercell phonons",
            "updated_on": "2008-08-11 13:12:45+01"
        },
        {
            "assignee": null,
            "content": "I came across a crash in bandstructure in some admittedly unusual initialization conditions.  

The run is a PBE bandstructure run *but* set up as a continuation from
a PBE0 SCF calculation - I have no idea whether this even makes sense.

The bandstructure calculation proceeds to completion, and just at the
end it segfaults. The traceback is:

castep-4.3-oep-O3  0000000000E5C620  Unknown               Unknown  Unknown
castep-4.3-oep-O3  0000000000DFD8C0  Unknown               Unknown  Unknown
castep-4.3-oep-O3  000000000095EADC  basis_mp_basis_re        4658  basis.F90
castep-4.3-oep-O3  0000000000CC9C55  wave_mp_wave_reci       21721  wave.F90
castep-4.3-oep-O3  000000000065718A  nlxc_mp_nlxc_calc        1510  nlxc.F90
castep-4.3-oep-O3  000000000042A34B  band_structure_mp         804  bs.F90
castep-4.3-oep-O3  00000000004202D7  castep_.run_band_        1939  castep.f90
castep-4.3-oep-O3  000000000040E132  MAIN__                   1001  castep.f90
castep-4.3-oep-O3  000000000040C0A2  Unknown               Unknown  Unknown
libc.so.6          0000003D2091C40B  Unknown               Unknown  Unknown
castep-4.3-oep-O3  000000000040BFE9  Unknown               Unknown  Unknown

ie it's in the section


    if(div_corr_store) then

       allocate(nlxc_eigenvalues(eigenvectors%nbands_max,eigenvectors%nkpts,eigenvectors%nspins),stat=stat)
       if(stat.ne.0) call io_abort('Out of RAM for nlxc_eigenvalues in band_structure_calculate_all')

       ! subtract uncorrected eignvalues from total
       call nlxc_calculate_eigenvalues(eigenvectors,occ,nlxc_eigenvalues)
       eigenvalues=eigenvalues-nlxc_eigenvalues

       !restore nlxc_div_corr_on
       nlxc_div_corr_on=.true.       

       ! add corrected eignvalues to total  ! (we could speed things up if nlxc_calculate eigenvalues returned both)
       call nlxc_calculate_eigenvalues(eigenvectors,occ,nlxc_eigenvalues)
       eigenvalues=eigenvalues+nlxc_eigenvalues

       deallocate(nlxc_eigenvalues,stat=stat)
       if(stat.ne.0) call io_abort('Error deallocating nlxc_eigenvalues in band_structure_calculate_all')

    end if

So it appears that the logic is wrong, and it is trying to perform an
NLXC calculation of eigenvalues even though this was a pure DFT bandstructure.
NLXC_DIV_CORR_ON was being picked up from the PBE0 .check file.

This is probably just a case of sorting out the logic.


",
            "content_updated_on": "2009-09-09 13:06:24+01",
            "created_on": "2008-08-13 17:47:05+01",
            "id": 57,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bandstructure crashes when switching from PBE0 to PBE",
            "updated_on": "2009-09-09 13:06:24+01"
        },
        {
            "assignee": null,
            "content": "In the development of the phonon supercell code, I came  across an issue
with subroutine ion_initialise.  The introduction to the spec states that

  ... the Ion module must be explicitly
  reinitialised by calling ion_load and ion_initialise if
  the species in the current cell have changed.

For supercell generation we do not change the species, only the number of ions
of each -- therefore it should not be necessary to call ion_initialise.

However it *is* necessary to call ion_initialise because of the last two
stetements:

    ! ** Set the total number of non local projectors

    num_proj    = dot_product(current_cell%num_ions_in_species,num_ps_projectors)
    bl_num_proj = dot_product(current_cell%num_ions_in_species,num_bl_projectors)

which numbers define the size of the internal beta projector tables, which most
definitely do change when you change the supercell.  The tables are indeed reset
but the numbers of projectors never recalculated (unless ion_initialise is called).

Either these statements need to be moved into ion_beta_recip_set or the spec updated. To my inexpert eye the code change looks as if it ought to work, but it would need a careful look to see whether these values are ever used before ion_beta_recip_set is called.
",
            "content_updated_on": "2008-11-18 17:20:00+00",
            "created_on": "2008-04-17 08:28:35+01",
            "id": 13,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Spec violation: ion_initialise call needed after basis change",
            "updated_on": "2008-11-18 17:20:00+00"
        },
        {
            "assignee": null,
            "content": "As part of B3LYP testing I ran a Coarse B3LYP job with FD Phonon DOS (supercell
cutoff 1 Ang for speed) turned on.  The job failed after a short time in both serial and parallel.

The PhonDOS.castep file terminated with:

    Failed to generate nk_to_idential_nq
    Current trace stack:
     nlxc_basis_initialise_complex
     nlxc_basis_initialise
     nlxc_initialise
     secondd_force_constant_matrix
     phonon_calculate
     castep

This is a generic failure with any nonlocal functional; it happens in 4.3 as well. NLXC module appears to have problems with multiple initialization calls in the finite displacement + supercell mode.

Here is from Keith Refson: &amp;quot;I have known about this for weeks.  I was waiting
for Stewart to get a chance to investigate - the problem is in the nlxc
initialization.  I guess that at this stage we just have to declare that FD
phonons with nlxc functionality do not work yet.....&amp;quot;",
            "content_updated_on": "2009-09-23 21:25:59+01",
            "created_on": "2009-05-12 15:05:56+01",
            "id": 125,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "B3LYP (or any nonlocal) FD Phonon job failure",
            "updated_on": "2009-09-23 21:25:59+01"
        },
        {
            "assignee": null,
            "content": "There is a regression on release 4.4.  DFPT phonon calculations
with FINE_GRID_SCALE/=GRID_SCALE.

4.3:
= Iter Step Size  Var E_2(eV/A**2)   Predicted  sqrt(E2_norm)(eV/A)  Time(s)
    1 -1.0000        0.00000000        0.00000000    24.293188      76.09 | &amp;lt;- CG
    2 -4.6226      -39.18246113      -39.18246113    12.307192      84.69 | &amp;lt;- CG
    3 -3.5712      -44.79082138      -44.82169155     5.611173      93.31 | &amp;lt;- CG
 secondd_minimise_phonon_E2: Switching to 3-point minimiser because of numerical inaccuracy in gradie
nt
    4 -4.1604      -46.33583304      -46.33583304     3.271680     105.77 | &amp;lt;- CG
    5 -4.0100      -46.84852516      -46.84852516     1.827321     118.22 | &amp;lt;- CG
    6 -3.5062      -46.97607921      -46.97607921     0.810460     130.69 | &amp;lt;- CG
    7 -3.0954      -46.99839867      -46.99839867     0.316028     143.16 | &amp;lt;- CG
    8 -4.2829      -47.00526048      -47.00526048     0.208212     155.62 | &amp;lt;- CG
    9 -4.7120      -47.00807982      -47.00807982     0.154957     168.09 | &amp;lt;- CG
   10 -3.6170      -47.00885979      -47.00885979     0.075442     180.56 | &amp;lt;- CG
   11 -3.0243      -47.00903529      -47.00903529     0.039948     193.00 | &amp;lt;- CG
 secondd_minimise_phonon_E2: Switching back to 2-point minimiser because gradient seems accurate enou
gh
   12 -1.6889      -47.00905591      -47.00905590     0.025757     205.44 | &amp;lt;- CG
===



4.4:
====
 Iter Step Size  Var E_2(eV/A**2)   Predicted  sqrt(E2_norm)(eV/A)  Time(s)
    1 -1.0000        0.00000000        0.00000000    24.292991      66.83 | &amp;lt;- CG
    2 -4.2997      -36.44501567      -36.44501567    12.434314      72.27 | &amp;lt;- CG
    3 -3.5300      -42.00496991      -42.00496990     5.537100      77.71 | &amp;lt;- CG
    4 -4.0977      -43.45501662      -43.45501662     3.110500      83.14 | &amp;lt;- CG
    5 -3.9955      -43.91753794      -43.91753794     1.756858      88.57 | &amp;lt;- CG
    6 -3.6305      -44.04732494      -44.04732494     0.817200      94.00 | &amp;lt;- CG
    7 -3.2850      -44.07299061      -44.07299061     0.337954      99.44 | &amp;lt;- CG
    8 -3.3992      -44.07770244      -44.07770244     0.153074     104.87 | &amp;lt;- CG
    9 -3.7572      -44.07887360      -44.07887360     0.080124     110.30 | &amp;lt;- CG
   10 -3.7330      -44.07920425      -44.07920425     0.040946     115.73 | &amp;lt;- CG
   11 -3.5350      -44.07928692      -44.07928692     0.019993     121.16 | &amp;lt;- CG
   12 -3.6768      -44.07930737      -44.07930737     0.010752     126.59 | &amp;lt;- CG
   13 -4.2801      -44.07931475      -44.07931474     0.006893     132.03 | &amp;lt;- CG
   14 -4.1522      -44.07931770      -44.07931770     0.004139     137.46 | &amp;lt;- CG
   15 -3.9576      -44.07931870      -44.07931870     0.002446     142.90 | &amp;lt;- CG
   E(2)_var(1,1)           =     -44.07931905                  eV/A**2
 +===============================================================================+

It seels that something was broken between 4.3 and 4.4.




",
            "content_updated_on": "2008-12-29 14:41:16+00",
            "created_on": "2008-12-23 08:26:15+00",
            "id": 93,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "DFPT phonons with fine grid /= std grid is wrong",
            "updated_on": "2008-12-29 14:41:16+00"
        },
        {
            "assignee": null,
            "content": "If a continuation run is initialised from a .check file generated by a variable-cell geometry optimisation then the pseudopotentials are reported
as 

  &amp;quot;Pseudopotential generated on-the-fly&amp;quot;

even though they are not. Subsequent check files had the wrong pseudopotentials written and could fail.

Procedure to reproduce:  Perform a (any) variable cell optimisation.
Set up any continuation run to read the .check from the original.

The reason was that cell_restore_cell is called multiple times,
including for mdl%var_cell.  The call from model_continuation
for the VAR_CELL block reads



             call cell_allocate(mdl%ref_cell,mdl%cell%num_species,mdl%
cell%max_ions_in_species)
             call cell_restore_cell(in_unit,mdl%ref_cell)

I have a patch for this with the following behaviour
(a) never change the contents of current_cell.  

    It would be wrong to do so if the cell being read is not the 
    current cell. Plus  it is illegal Fortran to refer to the same
    object by means of a module variable and a dummy argument if
    it is being written to. This could lead to optimisation errors.

(b) Save the value of current_cell%species_pot as the &amp;quot;new&amp;quot; potentials
    on entry to cell_restore_cell, instead of the ones from the
    argument variable cell%species_pot.  This is the correct thing to
    do in the case that cell_restore_cell is called with an argument
    other than current_cell.  This was the actual cause of the failure
    as mdl%ref_cell%species_pot was NULL in the case of the VAR_CELL
    as above.

(c) change all the other references to &amp;quot;current_cell&amp;quot; in this routine
    to refer to &amp;quot;cell&amp;quot; instead.  This makes things clearer, and they 
    looked like (harmless) errors.

The patch will apply to the HEAD with a small offset.  I think I'd like
to include it in the 4.4 bugfix branch Castep44_branch as well.
",
            "content_updated_on": "2009-04-06 08:00:15+01",
            "created_on": "2009-02-12 10:52:22+00",
            "id": 107,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Continuation run incorrectly reports use of OTF pseudopotentials",
            "updated_on": "2009-04-06 08:00:15+01"
        },
        {
            "assignee": null,
            "content": "From Matt Probert:

   I'm trying to do a phonon dispersion calculation and running into 
trouble. I'm using Mat Studio 4.4 to generate the input files &amp;amp; then 
running on my cluster. The initial structures had symmetry (hence the 
name), but MS refused to let them run, so converted to P1, and generated 
the attached files to first do a geom opt and then do a phonon run as a 
continuation. I'm using USPs and so MS setup the phonon runs to use 
supercell method. I'm using cell constraints in the geom-opt as it is a 
layered carbon system.

I copied the files across to my cluster and ran as follows:

castep run_14_symm
cp run_14_symm.check run_14_symm_PhonDisp.check
castep run_14_symm_PhonDisp

The geom opt worked OK but when the phonon run started I got this error:

Error in phonon_rationalise_kpoints: irreducible set is not a subset of 
full set
Current trace stack:
  phonon_rationalise_kpoints
  phonon_fd_perturbation
  phonon_finite_displacement
  phonon_force_constant_matrix
  phonon_calculate
  castep

How is that possible? Is it something to do with the lattice vectors in 
the cell file not being the same as in the check file?
         Matt",
            "content_updated_on": "2009-05-12 15:05:45+01",
            "created_on": "2009-04-30 10:27:49+01",
            "id": 120,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Abort with supercell phonons in P1 symmetry on continuation.",
            "updated_on": "2009-05-12 15:05:45+01"
        },
        {
            "assignee": null,
            "content": "In a tangent to an investigation of a phonon problem report submitted
by Sasha I spotted that the energy of the system in question changed
by 100 eV from 4.3 to 4.4.

Now there was an Ewald convergence bug fixed between 4.3 and 4.4, but in this
case I am very sure the 4.3 result is correct and the 4.4 one wrong. This
was a supercell calculation and both 4.3 and 4.4 agree on the energy of
the primitive cell.  The 4.3 supercell energy is N times the primitive
cell energy and the 4.4 result differs by 100 eV.

This is almost certainly due to the very acute or obtuse cell angles
of 155.504, 155.733 and 34.937.

Increasing the Ewald precision with a devel code restores the 4.3
result.

In CASTEP 4.3

              Ewald: real-space energy =   14351.317297 eV
        Ewald: reciprocal-space energy =     101.418574 eV
         Ewald: (sum_charge)**2 Energy =   25263.662397 eV
         Ewald: (sum_charge**2) Energy =    5871.935510 eV
                          Ewald Energy =  -16682.862036 eV

CASTEP 4.4

              Ewald: real-space energy =  274150.575518 eV
        Ewald: reciprocal-space energy =       0.392192 eV
         Ewald: (sum_charge)**2 Energy =  289196.741646 eV
         Ewald: (sum_charge**2) Energy =    1735.532433 eV
                          Ewald Energy =  -16781.306369 eV

4.4 with devel code PREC=100.0

              Ewald: real-space energy =   33516.045326 eV
        Ewald: reciprocal-space energy =      64.229187 eV
         Ewald: (sum_charge)**2 Energy =   45907.121191 eV
         Ewald: (sum_charge**2) Energy =    4356.015357 eV
                          Ewald Energy =  -16682.862036 eV
",
            "content_updated_on": "2009-05-22 14:13:34+01",
            "created_on": "2009-04-27 16:54:59+01",
            "id": 119,
            "kind": "bug"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "Ewald sum gives wrong energy for highly skew cell",
            "updated_on": "2009-05-22 14:13:34+01"
        },
        {
            "assignee": null,
            "content": "From Matt P (by email)

Keith,
    Got a problem with current CASTEP (and v4.4) on my cluster. Running
a parallel phonon calc on a graphitic-like material, using gamma point
and large supercell as previously discussed. Have fixed b-axis and all
y-coords constant:

%BLOCK LATTICE_CART
        0.09 22.85 0.00
        0.00 0.00 20.00
        24.81 0.00 0.00
%ENDBLOCK LATTICE_CART

&amp;lt;snip long list of coords&amp;gt;

For some odd reason, MS gives a supercell matrix which is
%BLOCK PHONON_SUPERCELL_MATRIX
      0    -1     0
     -1     0     0
      0     0    -1
%ENDBLOCK PHONON_SUPERCELL_MATRIX

which causes the problem. The calculation runs fine to do the original
SPE, then generates the supercell and does another SPE (frustratingly
unnecessary) and then hangs.

If I reorder the supercell_matrix to be unity (and swap x &amp;amp; y coords in
kpoint_list etc, then it runs fine.
",
            "content_updated_on": "2009-07-15 08:13:28+01",
            "created_on": "2009-07-10 15:54:58+01",
            "id": 156,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Large phonon calculation hangs",
            "updated_on": "2009-07-15 08:13:28+01"
        },
        {
            "assignee": null,
            "content": "After considerable testing I have concluded that the Full BZ/Anisotropic method
is superior to the spherical cutoff in almost every case.  Therefore I would
like to propose that it become the default, and to create/rename a couple
of associated parameters.

My proposal for new parameters are:

Parameter

PHONON_FINE_CUTOFF_METHOD   String:Expert 
                            &amp;quot;Chooses method to extract non-periodic force
                             constant matrix from periodic supercell.  Allowed
                             values are 'SPHERICAL': Use the minimum image 
                             convention with a spherical cutoff given by 
                             PHONON_FORCE_CONSTANT_CUTOFF and 'DEFAULT':       
                             Include contributions up to and including half way
                             to nearest supercell lattice vector in any 
                             direction. Boundary criterion distance is 
                             multiplied by PHONON_FORCE_CONSTANT_CUT_SCALE.

                            Default is 'DEFAULT'

PHONON_FORCE_CONSTANT_CUT_SCALE : Real,dimensionless:Expert
                            Scale factor for DEFAULT 
                            PHONON_FINE_CUTOFF_METHOD. Alias
                            PNONON_FORCE_CONSTANT_ELLIPSOID.  

                            Default 1.0

PHONON_FORCE_CONSTANT_ELLIPSOID : Alias for PHONON_FORCE_CONSTANT_CUT_SCALE
                            (deprecated).

And I think that perhaps a warning should be printed if
PHONON_FORCE_CONSTANT_CUTOFF &amp;gt; 0 and PHONON_FINE_CUTOFF_METHOD /= 'SPHERICAL'
that the cutoff value has no effect in the DEFAULT FINE_CUTOFF_METHOD. Is that
better done in parameters or in phonon?  


",
            "content_updated_on": "2009-07-15 16:04:46+01",
            "created_on": "2009-06-15 13:10:46+01",
            "id": 137,
            "kind": "proposal"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Phonon parameters change request for next release",
            "updated_on": "2009-07-15 16:04:46+01"
        },
        {
            "assignee": null,
            "content": "There is an error exit early on in the castep_7bRS real-space test case:

First-chance exception at 0x00b878de in castepexe.exe: 0xC0000005: Access violation reading location 0x0eedf000.

This happens in the call stack:

 	castepexe.exe!ION::ION_BETA_PHI_REAL_ION_KP(COMPLEX(8)  REAL_PHI={...}, INTEGER(4)  NSP=1, INTEGER(4)  NI=1, INTEGER(4)  NK=1, COMPLEX(8)  BETA_PHI={...})  Line 5967 + 0x2c6 bytes	Fortran
 	castepexe.exe!WAVE::WAVE_BETA_PHI_BND(TYPE(BAND)  BND={...}, INTEGER(4)  NK=1)  Line 19546 + 0x177 bytes	Fortran
 	castepexe.exe!WAVE::WAVE_SDOT_LOWER_WV_BND(TYPE(WAVEFUNCTION)  WVFN1={...}, INTEGER(4)  NB=2, INTEGER(4)  NK=1, INTEGER(4)  NS=1, TYPE(BAND)  BND={...}, COMPLEX(8)  PRODUCTS={...})  Line 11401 + 0x15 bytes	Fortran
 	castepexe.exe!WAVE::WAVE_SORTHOGONALISE_LOWER_BND(TYPE(WAVEFUNCTION)  WVFN={...}, TYPE(BAND)  BND={...}, INTEGER(4)  NB=2, INTEGER(4)  NK=1, INTEGER(4)  NS=1)  Line 15596 + 0x31 bytes	Fortran
 	castepexe.exe!ELECTRONIC::ELECTRONIC_SD_DIRECTION_BKS(TYPE(WAVEFUNCTION)  WVFN={...}, TYPE(BAND)  BND={...}, INTEGER(4)  NB=1, INTEGER(4)  NK=1, INTEGER(4)  NS=1, TYPE(BAND)  BND_DIRECTION={...}, TYPE(BAND)  H_BND={...}, TYPE(BAND)  BND_TEMP={...}, TYPE(BAND)  BND_OLD_DIRECTION={...}, REAL(8)  OCC=1.00000000000000, REAL(8)  EK=1.51035175532657, REAL(8)  EIGENVALUE=0.737849732686736, COMPLEX(8)  BETA_OLD=(0.000000000000000E+000,0.000000000000000E+000), REAL(8)  PRECON_VEC={...}, LOGICAL(4)  FULL_ORTHOGONALISATION=.FALSE.)  Line 6145 + 0x33 bytes	Fortran
 	castepexe.exe!ELECTRONIC::ELECTRONIC_STEP_DIRECTION_BKS(CHARACTER(4)  STEP_TYPE='SD  ', TYPE(WAVEFUNCTION)  WVFN={...}, TYPE(BAND)  BND={...}, INTEGER(4)  NB=1, INTEGER(4)  NK=1, INTEGER(4)  NS=1, TYPE(BAND)  BND_DIRECTION={...}, TYPE(BAND)  H_BND={...}, TYPE(BAND)  BND_TEMP={...}, TYPE(BAND)  BND_OLD_DIRECTION={...}, REAL(8)  OCC=1.00000000000000, REAL(8)  EK=1.51035175532657, REAL(8)  EIGENVALUE=0.737849732686736, COMPLEX(8)  BETA_OLD=(0.000000000000000E+000,0.000000000000000E+000), REAL(8)  PRECON_VEC={...}, LOGICAL(4)  FULL_ORTHOGONALISATION=.FALSE.,  .tmp..T30714__V$1339f=)  Line 5844 + 0x70 bytes	Fortran
&amp;gt;	castepexe.exe!ELECTRONIC::ELECTRONIC_FIND_EIGENSTATE(TYPE(WAVEFUNCTION)  WVFN={...}, INTEGER(4)  NB=1, INTEGER(4)  NK=1, INTEGER(4)  NS=1, REAL(8)  OCC={...}, TYPE(BAND)  H_BND={...}, TYPE(POTENTIAL)  LOCAL_POT={...}, REAL(8)  INPUT_NL_D={...}, REAL(8)  EIGENVALUE=0.737849732686736, REAL(8)  EK=1.51035175532657, REAL(8)  PRECON_VEC={...}, INTEGER(4)  DESIRED_SD_STEPS= Undefined pointer/array, INTEGER(4)  DESIRED_CG_STEPS= Undefined pointer/array, INTEGER(4)  DESIRED_DIIS_STEPS= Undefined pointer/array, REAL(8)  DESIRED_EIGENVALUE_TOL= Undefined pointer/array, REAL(8)  DESIRED_EIGENVALUE_REL_TOL=0.300000000000000, REAL(8)  DELTA_EIGENVALUE= Undefined pointer/array, LOGICAL(4)  FULL_ORTHOGONALISATION=.FALSE., LOGICAL(4)  OPT_STORE_REF_OCC= Undefined pointer/array, INTEGER(4)  STEPS_TAKEN= Undefined pointer/array, TYPE(LCAO_DATA)  LDAU_OCCM={...}, INTEGER(4)  LOCAL_IPRINT=1)  Line 12399 + 0x39 bytes	Fortran
 	castepexe.exe!ELECTRONIC::ELECTRONIC_ITER_DIAG_H(TYPE(WAVEFUNCTION)  WVFN={...}, TYPE(ELECTRON_DENSITY)  DENS={...}, REAL(8)  OCC={...}, TYPE(WAVEFUNCTION)  WVFN_GRADIENT={...}, LOGICAL(4)  ES_SUBTRACTED=.FALSE., TYPE(WAVEFUNCTION)  WVFN_OLD_DIRECTION={...}, TYPE(WAVEFUNCTION)  WVFN_OLD_GRAD={...}, TYPE(WAVEFUNCTION)  WVFN_DIRECTION={...}, TYPE(POTENTIAL)  LOCAL_POT={...}, REAL(8)  FERMI_ENERGY={...}, REAL(8)  EK={...}, REAL(8)  EIGENVALUES={...}, REAL(8)  OCC_EIGENVALUES={...}, LOGICAL(4)  OCC_EIGENVALUES_FREE=.FALSE., LOGICAL(4)  FULL_ORTHOGONALISATION=.FALSE., TYPE(LCAO_DATA)  LDAU_OCCM={...})  Line 2374 + 0x51 bytes	Fortran
 	castepexe.exe!ELECTRONIC::ELECTRONIC_MINIMISATION(TYPE(WAVEFUNCTION)  WVFN= Undefined address, TYPE(ELECTRON_DENSITY)  DENS= Undefined address, REAL(8)  OCC= Undefined address, REAL(8)  ETOT= Undefined address, REAL(8)  EIGENVALUES= Undefined address, LOGICAL(4)  CONVERGED= Undefined address, REAL(8)  EFERMI= Undefined address, TYPE(LCAO_DATA)  LDAU_OCCM= Undefined address, INTEGER(4)  LOCAL_IPRINT= Undefined address)  Line 1718 + 0x94 bytes	Fortran
 	castepexe.exe!CASTEP::CHECK_ELEC_GROUND_STATE(TYPE(MODEL_STATE)  MDL={...})  Line 1212 + 0x11 bytes	Fortran
 	castepexe.exe!CASTEP()  Line 883 + 0x15 bytes	Fortran

The line in question is in ion_beta_phi_real_ion_kp:

    if(proj_packed_index(ni,nsp)/=-1) beta_phi = beta_phi_tmp

and the crash is due to different dimensions of these two arrays: beta_phi has a size of 100, while beta_phi_tmp is only 11.
",
            "content_updated_on": "2009-08-06 10:45:55+01",
            "created_on": "2009-07-23 11:04:31+01",
            "id": 163,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Real-space crash on Windows only",
            "updated_on": "2009-08-06 10:45:55+01"
        },
        {
            "assignee": null,
            "content": "Under PBE+U, non-magnetic calculation of FeS shows unphysical spin occupations and an incorrect total energy. 

Initial ferro-magnetic (FM) setting at Fe in a single-point energy calculation with spin-polarization ended up with all-paired electron Fe. 

However, non-magnetic (NM) calculation for the same FeS structure showed unphysical spin occupations as below, and the total energy was much different from the initial FM setting calculation. [In &amp;quot;PBE&amp;quot; (i.e., without Ueff inclusion) the energies and spin occupations are identical for both FM and NM calculations.",
            "content_updated_on": "2009-08-14 08:08:58+01",
            "created_on": "2009-08-13 17:39:49+01",
            "id": 173,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "unpysical results of PBE+U calcualtions for non-mangetic layer-type FeS",
            "updated_on": "2009-08-14 08:08:58+01"
        },
        {
            "assignee": null,
            "content": "From a calculation by Bjoern Winkler.  The dispersion curves show
a considerable oscillatory &amp;quot;ringing&amp;quot; in some of the modes, which would
suggest a truncation error in the Fourier interpolation.

The problem was in the Coulombic &amp;quot;dipole-dipole&amp;quot; correction term used in the
Fourier interpolation for polar systems as a model of the long-ranged behaviour. Turning this off via &amp;quot;devel_code PHONON_NO_DD&amp;quot; eliminates
the ringing.

On inspection of the other results the Born effective charge tensors for this
system are *extremely* anisotropic:

   X       8         0.93000     0.00000    -0.20214
                     0.00000    -0.09141     0.00000
                     2.29236     0.00000    -1.21982

On a code inspection the relevant code in ewald_calc_E2_dipole_dipole in
ewald.F90

          do alpha = 1,3
             do beta = 1,3
                do alphap = 1,3
                   do betap = 1,3
                      jdim = symmetric_index(alphap,betap)
                      ctemp_E2_m(alpha,beta) = ctemp_E2_m(alpha,beta) &amp;amp;
                                             + born_charge(alpha,alphap,ion_j)*born_charge(beta,betap,ion_i)* &amp;amp;
                                              (recip_E2(jdim,ion_j,ion_i) - real_E2(jdim,ion_j,ion_i))
                      E2_diag_tmp(alpha, beta) = E2_diag_tmp(alpha, beta)  &amp;amp;
                                               + born_charge(alpha,alphap,ion_j)*born_charge(beta,betap,ion_i)* &amp;amp;
                                                 (recip_diag_E2(jdim,ion_j,ion_i) - real_diag_E2(jdim,ion_j,ion_i))

                   end do
                end do
             end do
          end do
 
it appears that the televant Born effective charge tensors are transposed
relative to Eq.72 of Gonze and Lee (1997).  This would cause an error, which
indeed shows up as elements of the computed dipole-dipole dynamical matrix
with some values &amp;gt; 10.  This would actually generate long-ranged Coulombic
terms rather than cancelling them.

Transposing the tensors results in smaller elements of the dipole-dipole
dynamical matrix and decent-looking dispersion curves &amp;quot;f9&amp;quot;, which would
indicate that the Coulombic tail is now being modelled correctly.

",
            "content_updated_on": "2009-08-19 14:20:19+01",
            "created_on": "2009-08-17 10:00:25+01",
            "id": 174,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Fourier interpolation of dynamical matrices gives bad result for e-O2",
            "updated_on": "2009-08-19 14:20:19+01"
        },
        {
            "assignee": null,
            "content": "We did some validation runs with TDDTF they were nearly successful in the sense results were fine and we were getting almost everything back. But all of them consistently crashed at the very end. All this was done in April. Since that the diagnostic changed but the crashed still in.

I attached heavily modified (to get the crash in seconds) input files which still crash castep.
My investigation shows that in the 
tddft_calculate_forces
there is a passage:

! Get the 'x' density 
! First do sum_i&amp;lt;x_i|r&amp;gt;&amp;lt;r|x_i&amp;gt;
    call density_first_order_calculate_tddft(selected_state,x_occ,den_x)


the call is executed unconditionally while selected_state is allocated only if 
paramter::tddft_selected_state is nonzero.
In our case it is zero and whatever is going to happen with selected_state in density is condemned to crash with variable diagnostic.

",
            "content_updated_on": "2013-07-16 17:35:36+01",
            "created_on": "2013-06-27 15:33:41+01",
            "id": 921,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "TDDFT calculation crashes for typical accelrys input",
            "updated_on": "2013-07-16 17:35:36+01"
        },
        {
            "assignee": null,
            "content": "This report comes from a beta-tester of Raman functionality. On various occasions his sequence GeomOpt+Phonon failed with the message about unsatisfied geometry optimization (see example files attached). The bottom line is that the forces calculated on continuation were different from the ones at the last step of GeomOpt run. This comes about as a result of the internal change to SCF tolerances (not driven by our input files):

total energy / atom convergence tol.           : 0.5000E-06   eV
eigen-energy convergence tolerance             : 0.1562E-06   eV

becomes

total energy / atom convergence tol.           : 0.2219E-09   eV
eigen-energy convergence tolerance             : 0.6934E-10   eV

A minor point â wouldnât it be reasonable to report this when collecting various changed parameters in the header? The absolute difference is small, but the values did change.

This change, I believe, triggers recalculation of the ground state and generates slightly different forces and an error termination.

We need to think through this logic a bit better. I believe MS strategy is to write the tolerance only to the main param file; it looks like we need it duplicated in the phonon param files, otherwise it gets reset. This was not a big deal before the geometry check â we were happy to have more accurate SCF in the continuation runs. An alternative would be to have an âacceptance windowâ of say a factor of two when comparing forces to tolerance in phonons; i.e., if the stricter tolerance results in the force change that does not take it beyond 2*tolerance we are OK to continue. Note that in this case the max force was 0.00922 in GeomOpt and became 0.010538 on continuation (threshold 0.01), hardly in itself a crime.
",
            "content_updated_on": "2009-09-16 09:40:05+01",
            "created_on": "2009-09-11 12:22:54+01",
            "id": 185,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Logical inconsitency in GeomOpt test of phonon run ",
            "updated_on": "2009-09-16 09:40:05+01"
        },
        {
            "assignee": null,
            "content": "If you do a Hirshfeld calculation with default grid settings, all is well. E.g. CF4: 

   
     Hirshfeld Analysis
     ------------------
Species   Ion     Hirshfeld Charge (e)
======================================
  C        1                 0.31
  F        1                -0.08
  F        2                -0.08
  F        3                -0.08
  F        4                -0.08
======================================

but if you activate the fine_grid it is wrong, e.g. CF4 again:

     Hirshfeld Analysis
     ------------------
Species   Ion     Hirshfeld Charge (e)
======================================
  C        1                -1.25
  F        1                -3.08
  F        2                -3.08
  F        3                -3.08
  F        4                -3.08
======================================

The reason is that the Hirshfeld grids are erroneously set to size total_grid_points when they should be total_fine_grid_points

        Matt

",
            "content_updated_on": "2009-10-06 10:18:10+01",
            "created_on": "2009-10-06 10:16:53+01",
            "id": 191,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Hirshfeld incorrect if fine_grid /= std_grid",
            "updated_on": "2009-10-06 10:18:10+01"
        },
        {
            "assignee": null,
            "content": "The attached test case demonstrates a logic flaw in the code to
detect inconsistency between initial atomic spin and total spin
as specified in .cell and .param respectively.

The problem creeps in during the calculation of &amp;quot;spin_correct&amp;quot;
on line 1015 of density.F90

       spin_correct = 1.0_dp
       if (abs(num_elec_diff) .gt. 1.0e-4_dp) spin_correct = (nup-ndown) / num_elec_diff

In the most obvious input error - setting SPIN= in .cell but not spin= in
.param, nup==ndown, so the value of &amp;quot;spin_correct&amp;quot; is zero.  The consequence
is that the spin initialisation is silently nullified immediately below.

I suggest that spin_correct should be tested to see whether it is within
1-epsilon &amp;lt; spin_correct &amp;lt; 1+epsilon and if not an inconsistency abort
be issued.  A loose tolerance is probably appropriate here, but should
only be allowed if the sum of atomic spins and the total spin are in
the same ballpark.
",
            "content_updated_on": "2010-07-02 06:33:14+01",
            "created_on": "2009-11-03 17:29:57+00",
            "id": 202,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "CASTEP fails to detect inconsistency between SPIN= intialisation in .cell and spin= in .param",
            "updated_on": "2010-07-02 06:33:14+01"
        },
        {
            "assignee": null,
            "content": "Reported by Andrew Fisher (UCL):

We find that any calculation with the Mn_00.usp potential generates the error

Error decomposing ps_q eigenvalues in local_q_dot_all_self_c Current trace stack:
 local_q_dot_all_self_c
 wave_calc_Soverlap_wv_ks
 wave_Sorthonormalise_wv_ks
 wave_Sorthonormalise_wv
 wave_initialise_wv
 model_initialise
 castep

We find the error both with a version of CASTEP compiled here (v5.0.1 using pgf90 on RH Linux  kernel 2.6.9-89.0.19.ELsmp) and with the precompiled version downloaded in  CASTEP-5.0.1-Linux64.tar.gz.

Looking into subroutine local_q_dot_all_self_c it seems this error can only come about if one eigenvalue of ps_q is exactly zero.  And indeed a debugging print yields the following eigenvalues:

 Eigenvalues of ps_q for species             1
            1  -9.1228788291978447E-002
            2  -9.1228788291978447E-002
            3  -9.1228788291978447E-002
            4  -9.1228788291957130E-002
            5  -9.1228788291957130E-002
            6    0.000000000000000     
            7    775.6278115393850     
            8    775.6278115393850     
            9    775.6278115393850     
           10    775.6278115393850     
           11    775.6278115393850     
",
            "content_updated_on": "2010-06-14 20:56:41+01",
            "created_on": "2010-02-19 13:09:05+00",
            "id": 233,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Mn_00.usp potential does not work anymore",
            "updated_on": "2010-06-14 20:56:41+01"
        },
        {
            "assignee": null,
            "content": "I have tracked down an I/O bug when compiling with gfortran to an
uninitialized variable in wave_deallocate_wv.

In the case that a wavefunction is declared, but neither wave_allocate nor wave_initialise it is NOT correct to call wave_deallocate on that wavefunction.
This is not a null operation because of the clause


    ! Close page unit
    if(wvfn%paged) then
      close(wvfn%page_unit,iostat=status)
      if(status/=0) then
        write(error_string,*) status
        call io_abort('Error '//trim(adjustl(error_string))// &amp;amp;
               &amp;amp;      ' closing pagefile in wave_deallocate_wv')
      end if
    end if

when neither wvfn%paged and wvfn%page_unit are initialized.  In fact the
close(&amp;lt;uninitialised&amp;gt;) call causes gfortran to close the .castep file!
and the remainder of the output is written to fort.10!

This call occurs from &amp;quot;electronic_finalise&amp;quot;: An extract from a &amp;quot;valgrind&amp;quot;
session.

  ==9908== Conditional jump or move depends on uninitialised value(s)
==9908==    at 0xAE6620: __wave_MOD_wave_deallocate_wv (wave.F90:2711)
==9908==    by 0x477383: __electronic_MOD_electronic_finalise (electronic.F90:3468)
==9908==    by 0x484232: __electronic_MOD_electronic_minimisation (electronic.F90:2037)
==9908==    by 0x413D4B: MAIN__ (castep.f90:1362)
==9908==    by 0x41C3C7: main (castep.f90:600)
==9908==
==9908== Conditional jump or move depends on uninitialised value(s)
==9908==    at 0xC84E11: get_external_unit (unit.c:290)
==9908==    by 0xC7D2A7: _gfortran_st_close (close.c:66)
==9908==    by 0xAE6667: __wave_MOD_wave_deallocate_wv (wave.F90:2705)
==9908==    by 0x477383: __electronic_MOD_electronic_finalise (electronic.F90:3468)
==9908==    by 0x484232: __electronic_MOD_electronic_minimisation (electronic.F90:2037)
==9908==    by 0x413D4B: MAIN__ (castep.f90:1362)
==9908==    by 0x41C3C7: main (castep.f90:600)

In &amp;quot;electronic_finalize&amp;quot; the lines

    call wave_deallocate(wvfn_direction)
    call wave_deallocate(wvfn_old_direction)
    call wave_deallocate(wvfn_old_grad)

call wave_deallocate on wavefunctions which were never allocated (if DM method
is used.)

The proximate fix is to make these lines conditional

    if(metals_method/='DM') then
      call wave_deallocate(wvfn_direction)
      call wave_deallocate(wvfn_old_direction)
      call wave_deallocate(wvfn_old_grad)
    end

It is not clear whether or how it could be made safe to call &amp;quot;wave_deallocate&amp;quot;
on an unallocated wavefunction.
  

",
            "content_updated_on": "2010-06-14 20:57:26+01",
            "created_on": "2010-06-12 14:05:13+01",
            "id": 301,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Uninitialized variable in wave_deallocate",
            "updated_on": "2010-06-14 20:57:26+01"
        },
        {
            "assignee": null,
            "content": "If you run attached files for H2 in the box SCF runs fine but DOS calculation produces outrageous eigenvalues 
+ ================================================================= +
  +                       Electronic energies                         +
  +                       -------------------                         +
  +                                                                   +
  +   Band number   Energy in eV                                      +
  + ================================================================= +
  +                                                                   +
  + ----------------------------------------------------------------- +
  +  Spin=1 kpt=    1 (  0.000000  0.000000  0.000000) kpt-group=  1  +
  + ----------------------------------------------------------------- +
  +                                                                   +
  +           1    -3880.319298                                       +
  +           2    -1317.312241                                       +
  =====================================================================


Something is definitely wrong....",
            "content_updated_on": "2011-01-30 12:10:47+00",
            "created_on": "2011-01-24 12:12:31+00",
            "id": 471,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "B3LYP H2 in the box produces wrong DOS",
            "updated_on": "2011-01-30 12:10:47+00"
        },
        {
            "assignee": null,
            "content": "The spin-dependent sX-LDA calculation of Li atom was terminated with below error message.

Init
Total energy                     =                         NaN eV
...

wave_orthonormalise_overlap_wv_ks: ztrtri failed in inversion
Current trace stack:
 wave_orthonormalise_over_wv_ks
 electronic_wvfn_step
 electronic_line_minimisation
 electronic_iter_diag_H
 electronic_minimisation
 check_elec_ground_state
 castep

The NaN comes from XC.

Also, the user tried to perform the calculation of Li dimer with the same settings, and then below error message was outputted. [Note: actually, Li run uses nextra_bands, Li2 does not",
            "content_updated_on": "2011-04-15 18:04:21+01",
            "created_on": "2011-04-15 11:09:47+01",
            "id": 517,
            "kind": "enhancement"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": " sX-LDA calculations and EDFT  fail with NaN",
            "updated_on": "2011-04-15 18:04:21+01"
        },
        {
            "assignee": null,
            "content": "The current algorithm for choosing k-point/g-vector mixed parallelism is
flawed for parallel phonon calculations.  Essentially it steps down the
number of MPI processes used from the full set to about 80%, and each
time calls &amp;quot;best_mixed_strategy&amp;quot; to find the best strategy with THAT FIXED NUMBER OF PROCESSORS.

But it always chooses the FIRST strategy, using the highest number
of available processes - which may actually still be
pretty poor. It really should try all the allowed range of idleing
and choose the best of the available set.

It would also be handy to have a devel_code override of some kind - at least
for the SCF calculation and other strategies which do not change the
number of k-points.


",
            "content_updated_on": "2011-08-05 17:11:57+01",
            "created_on": "2011-04-26 11:44:31+01",
            "id": 522,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Rework mixed parallel scheme algorithm to make better choices",
            "updated_on": "2011-08-05 17:11:57+01"
        },
        {
            "assignee": null,
            "content": "Gabor Csanyi reports that cell files containing valid %BLOCK IONIC_CONSTRAINTS
data are being rejected.

I have a strange castep question. I used to run input files with ionic constraints without any problems years ago but not when I try it, a strange error comes up every time there is a constraint that involves more than one atom - including COM fixing:

The following error is given for the pasted cell file. I can't see anything wrong with the multiline constraint. I have a vague feeling that this has come up before, but failed to locate the pertinent email.

I even ran one of my old input files, for which I still have the .castep output in perfect order, and it wouldn't run now!


ERROR reading IONIC_CONSTRAINTS in cell_read - null detected for constraint           1
Current trace stack:
cell_read
castep


&amp;gt; Dear Gabor,
&amp;gt; 
&amp;gt; This is the result of an input check added on 24/5/2010 by Stewart, as the result of a patch from Matt to catch a bad input specification with
&amp;gt; null constraints.  Unfortunately it seems the check has a bug.  From cell.F90 in 5.5.2
&amp;gt; 
&amp;gt;   3668            do ns = 1,current_cell%num_species
&amp;gt;   3669               do ni = 1,current_cell%num_ions_in_species(ns)
&amp;gt;   3670                  sum_jj=sum_jj+sum(ionic_constraints(:,ni,ns,nc))
&amp;gt;   3671               end do
&amp;gt;   3672            end do
&amp;gt;   3673            if (abs(sum_jj)&amp;lt;small_number) then
&amp;gt;   3674               write (error_message,*) 'ERROR reading IONIC_CONSTRAINTS in cell_read - null detected for c   3674 onstraint',nc
&amp;gt;   3675               call io_abort(error_message)
&amp;gt;   3676            end if
&amp;gt; 
&amp;gt; Note the test abs(sum_jj)&amp;lt;small_number) which is evaluating to .true. in
&amp;gt; your example. Without thinking it through in full detail, it appears to
&amp;gt; me that we should be testing sum(abs()) not abs(sum()).
",
            "content_updated_on": "2011-11-29 00:16:05+00",
            "created_on": "2011-08-02 11:23:14+01",
            "id": 554,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Constraints sanity check in cell_read rejects valid input",
            "updated_on": "2011-11-29 00:16:05+00"
        },
        {
            "assignee": null,
            "content": "Victor&amp;amp;  Sasha,
     One of the LBFGS beta-users has just reported a restart bug. We've
done some investigating and have confirmed the bug. We have a plausible
fix that is being tested as we speak - it is a 2 line mod to model.F90.
The bug causes a restart to crash with certain combinations of
geom_lbfgs_max_updates and the actual number of steps taken. Hopefully
we will have it checked in within the next hour or so.
         Matt

------------------------------------------------------------------------
These files reproduce a crash. I included a Castep output file up to 30 iterations, the output file of the failed run which is continued after 5 iterations (geom_max_iter=6, num_backup_iter=5, no continuation, followed by a run with continuation=default) and finally an output with the same parameters for the bug-fix version. I also include the new geometry.F90 and model.F90 and diffs for them.

Best wishes,
Joly",
            "content_updated_on": "2011-11-30 19:03:18+00",
            "created_on": "2011-11-30 18:59:00+00",
            "id": 622,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "LBFGS restart bug",
            "updated_on": "2011-11-30 19:03:18+00"
        },
        {
            "assignee": null,
            "content": "Dear All,

Please if you have some experience running this pot1d included in castep ,I request  your kind advice  about the error I get right after running pot1d on an 128 interface of semiconductor alloys:


[root@localhost mchijah2",
            "content_updated_on": "2011-08-24 20:12:41+01",
            "created_on": "2011-06-14 11:57:18+01",
            "id": 539,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "missing gamma-point code in pot1d.F90",
            "updated_on": "2011-08-24 20:12:41+01"
        },
        {
            "assignee": null,
            "content": "
Spectral does not write an orbital file, even if the parameter write_orbitals is set to true. This is required for orbitals2bands to work, and makes sense for a 'spectral_task: bandstructure'
",
            "content_updated_on": "2015-10-13 10:25:10+01",
            "created_on": "2015-09-28 17:13:47+01",
            "id": 1369,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Write_orbitals not obeyed in Spectral",
            "updated_on": "2015-10-13 10:25:10+01"
        },
        {
            "assignee": null,
            "content": "Hung-Ru Chen posted to the CASTEP list:

---------------------------------------------------------------------
When I tried to run ELNES calculation with a core-hole on one of the oxygens in my cell (O:exc) in combinaiton with the Hubbard U parameter, the following error message was given 

Error ldau_check_lcao_states: Unknown element O:exc
 Current trace stack:
 ldau_check_lcao_basis
 ldau_create_reduced_lcao_basis
 nlxc_ldau_initialise
 electronic_initialise
 electronic_minimisation
 check_elec_ground_state
 castep      

However if the Hubbard_U keyword is removed in the cell file, it works normally. 
Any suggestion ? Thanks a lot.
---------------------------------------------------------------------

Clearly the error is in line 5416 of nlxc.F90

          atomic_number = -1 ! Set atomic number to -1 to check later
          do j=1,size(periodic_table_name)

             ! Get the atomic_number for the symbol

             if(current_cell%species_symbol(nsp).eq.periodic_table_name(j)) atomic_number=j

          end do

The code ought to be stripping off the additional suffix from the extended element name &amp;quot;O:exc&amp;quot; in the same way that &amp;quot;subroutine popn_calculate_pdos_weights_kpt&amp;quot; does.

Assigned to Victor as Sasha's account does not show up in the CASTEP user list for some reason.
",
            "content_updated_on": "2011-09-26 15:38:42+01",
            "created_on": "2011-08-31 16:03:02+01",
            "id": 559,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "LDA+U calculation with core hole fails due to element name",
            "updated_on": "2011-09-26 15:38:42+01"
        },
        {
            "assignee": null,
            "content": "Dear Phil,

Sasha Perlov sent me a test case which exibits a parallel hang in a supercell/FD phonon calculation.  I have been able to determine that the hang occurs in &amp;quot;electronic_occupancy_update&amp;quot; when EDFT is used, and not with DM.  I can't see anything in the phonon code which might cause it, so I wonder if there is a numerically-sensitive control path somewhere in the occupancy or fermi energy finding code.

Unfortunately it's quite hard to reproduce the exact initialisation of the phonon code (perform SCF on unperturbed supercell system, then use wfn as starting point for perturbed geometry), so my attempts to reproduce a hang with standalone singlepoint have been unsuccessful (ie the runs succeeded!).  However it's quite quick and easy to debug:  Here are some tracebacks for the hanging processes. The run uses 12 cores, and is distributing 20 kpoints across 4 kp groups of size 3 in this instance.

6x
castep-ham-24-Aug  0000000000BEDDBF  comms_mp_comms_re       13105 
comms.mpi.F90
castep-ham-24-Aug  0000000000470649  electronic_mp_ele       10276 
electronic.F90
castep-ham-24-Aug  000000000046E4BD  electronic_mp_ele        9844 
electronic.F90
castep-ham-24-Aug  0000000000471C42  electronic_mp_ele       10618 
electronic.F90
castep-ham-24-Aug  0000000000478E1E  electronic_mp_ele       12027 
electronic.F90
castep-ham-24-Aug  0000000000453A37  electronic_mp_ele        2433 
electronic.F90
castep-ham-24-Aug  000000000044E68C  electronic_mp_ele        1887 
electronic.F90
castep-ham-24-Aug  000000000075337D  phonon_mp_phonon_        4730 
phonon.F90
castep-ham-24-Aug  000000000074CB5D  phonon_mp_phonon_        3819 
phonon.F90
castep-ham-24-Aug  000000000074A279  phonon_mp_phonon_        3466 
phonon.F90
castep-ham-24-Aug  00000000007519BA  phonon_mp_phonon_        4576 
phonon.F90
castep-ham-24-Aug  000000000072F077  phonon_mp_phonon_        1340 
phonon.F90
castep-ham-24-Aug  0000000000421EEC  MAIN__                   1069 
castep.f90

2x
castep-ham-24-Aug  0000000000BE97FF  comms_mp_comms_co        7141 
comms.mpi.F90
castep-ham-24-Aug  0000000000B84C60  wave_mp_wave_diag       22676  wave.F90
castep-ham-24-Aug  0000000000B8435C  wave_mp_wave_diag       22586  wave.F90
castep-ham-24-Aug  000000000047A86A  electronic_mp_ele       12185 
electronic.F90
castep-ham-24-Aug  0000000000453A37  electronic_mp_ele        2433 
electronic.F90
castep-ham-24-Aug  000000000044E68C  electronic_mp_ele        1887 
electronic.F90
castep-ham-24-Aug  000000000075337D  phonon_mp_phonon_        4730 
phonon.F90
castep-ham-24-Aug  000000000074CB5D  phonon_mp_phonon_        3819 
phonon.F90
castep-ham-24-Aug  000000000074A279  phonon_mp_phonon_        3466 
phonon.F90
castep-ham-24-Aug  00000000007519BA  phonon_mp_phonon_        4576 
phonon.F90
castep-ham-24-Aug  000000000072F077  phonon_mp_phonon_        1340 
phonon.F90
castep-ham-24-Aug  0000000000421EEC  MAIN__                   1069 
castep.f90

4x
castep-ham-24-Aug  0000000000BE8B71  comms_mp_comms_gc        5953 
comms.mpi.F90
castep-ham-24-Aug  000000000047125A  electronic_mp_ele       10415 
electronic.F90
castep-ham-24-Aug  000000000046E4BD  electronic_mp_ele        9844 
electronic.F90
castep-ham-24-Aug  0000000000471C42  electronic_mp_ele       10618 
electronic.F90
castep-ham-24-Aug  000000000047AA93  electronic_mp_ele       12197 
electronic.F90
castep-ham-24-Aug  0000000000453A37  electronic_mp_ele        2433 
electronic.F90
castep-ham-24-Aug  000000000044E68C  electronic_mp_ele        1887 
electronic.F90
castep-ham-24-Aug  000000000075337D  phonon_mp_phonon_        4730 
phonon.F90
castep-ham-24-Aug  000000000074CB5D  phonon_mp_phonon_        3819 
phonon.F90
castep-ham-24-Aug  000000000074A279  phonon_mp_phonon_        3466 
phonon.F90
castep-ham-24-Aug  00000000007519BA  phonon_mp_phonon_        4576 
phonon.F90
castep-ham-24-Aug  000000000072F077  phonon_mp_phonon_        1340 
phonon.F90
castep-ham-24-Aug  0000000000421EEC  MAIN__                   1069 
castep.f90


Does anything immediately come to mind.  The desync is at the level of the occupancy cycle loop in &amp;quot;electronic_find_occupancies, which is quite complex code.

Keith
",
            "content_updated_on": "2011-10-07 14:25:32+01",
            "created_on": "2011-08-26 13:00:19+01",
            "id": 557,
            "kind": "bug"
            "priority": "minor",
            "reporter": null,
            "status": "resolved",
            "title": "FD phonons with EDFT hangs for some number of processors",
            "updated_on": "2011-10-07 14:25:32+01"
        },
        {
            "assignee": null,
            "content": "After getting update on density symmetrization one of the most basic our tests started to crash.
forrtl: severe (408): fort: (2): Subscript #1 of the array DISP_ZERO has value 4
9 which is greater than the upper bound of 48

Image              PC        Routine            Line        Source
castepexe.exe      0351D96A  Unknown               Unknown  Unknown
castepexe.exe      034367A0  Unknown               Unknown  Unknown
castepexe.exe      03436DC1  Unknown               Unknown  Unknown
castepexe.exe      0179E239  _DENSITY_DENSITY_        5256  density.F90
castepexe.exe      0179D076  _DENSITY_mp_DENSI        5178  density.F90
castepexe.exe      01798B9D  _DENSITY_mp_DENSI        4817  density.F90
castepexe.exe      01803F6E  _ELECTRONIC_mp_EL        3871  electronic.F90
castepexe.exe      017E2D66  _ELECTRONIC_mp_EL        1765  electronic.F90
castepexe.exe      00406E20  _CASTEP_ip_CHECK_        1544  castep.f90
castepexe.exe      00404326  _MAIN__                  1086  castep.f90
castepexe.exe      035F7E23  Unknown               Unknown  Unknown
castepexe.exe      034BFFE7  Unknown               Unknown  Unknown
castepexe.exe      034BFEBF  Unknown               Unknown  Unknown
kernel32.dll       76FDD0E9  Unknown               Unknown  Unknown
ntdll.dll          77C316C3  Unknown               Unknown  Unknown
ntdll.dll          77C31696  Unknown               Unknown  Unknown


And indeed 
prim_op_idx(nsym) can be whatever number in between 1 and 192:
-		prim_op_idx	{...}	INTEGER(4) 
		prim_op_idx(1)	1	INTEGER(4) 
		prim_op_idx(2)	5	INTEGER(4) 
		prim_op_idx(3)	9	INTEGER(4) 
		prim_op_idx(4)	13	INTEGER(4) 
		prim_op_idx(5)	17	INTEGER(4) 
		prim_op_idx(6)	21	INTEGER(4) 
		prim_op_idx(7)	25	INTEGER(4) 
		prim_op_idx(8)	29	INTEGER(4) 
		prim_op_idx(9)	33	INTEGER(4) 
		prim_op_idx(10)	37	INTEGER(4) 
		prim_op_idx(11)	41	INTEGER(4) 
		prim_op_idx(12)	45	INTEGER(4) 
		prim_op_idx(13)	49	INTEGER(4) 
		prim_op_idx(14)	53	INTEGER(4) 
		prim_op_idx(15)	57	INTEGER(4) 
		prim_op_idx(16)	61	INTEGER(4) 
		prim_op_idx(17)	65	INTEGER(4) 
		prim_op_idx(18)	69	INTEGER(4) 
		prim_op_idx(19)	73	INTEGER(4) 
		prim_op_idx(20)	77	INTEGER(4) 
		prim_op_idx(21)	81	INTEGER(4) 
		prim_op_idx(22)	85	INTEGER(4) 
		prim_op_idx(23)	89	INTEGER(4) 
		prim_op_idx(24)	93	INTEGER(4) 
		prim_op_idx(25)	97	INTEGER(4) 
		prim_op_idx(26)	101	INTEGER(4) 
		prim_op_idx(27)	105	INTEGER(4) 
		prim_op_idx(28)	109	INTEGER(4) 
		prim_op_idx(29)	113	INTEGER(4) 
		prim_op_idx(30)	117	INTEGER(4) 
		prim_op_idx(31)	121	INTEGER(4) 
		prim_op_idx(32)	125	INTEGER(4) 
		prim_op_idx(33)	129	INTEGER(4) 
		prim_op_idx(34)	133	INTEGER(4) 
		prim_op_idx(35)	137	INTEGER(4) 
		prim_op_idx(36)	141	INTEGER(4) 
		prim_op_idx(37)	145	INTEGER(4) 
		prim_op_idx(38)	149	INTEGER(4) 
		prim_op_idx(39)	153	INTEGER(4) 
		prim_op_idx(40)	157	INTEGER(4) 
		prim_op_idx(41)	161	INTEGER(4) 
		prim_op_idx(42)	165	INTEGER(4) 
		prim_op_idx(43)	169	INTEGER(4) 
		prim_op_idx(44)	173	INTEGER(4) 
		prim_op_idx(45)	177	INTEGER(4) 
		prim_op_idx(46)	181	INTEGER(4) 
		prim_op_idx(47)	185	INTEGER(4) 
		prim_op_idx(48)	189	INTEGER(4) 
		prim_op_idx(49)	194707760	INTEGER(4) 
	....
		prim_op_idx(192)	24744558	INTEGER(4) 



",
            "content_updated_on": "2011-10-31 14:09:15+00",
            "created_on": "2011-10-31 12:59:56+00",
            "id": 603,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Castep crashes on Si conventional cell",
            "updated_on": "2011-10-31 14:09:15+00"
        },
        {
            "assignee": null,
            "content": "Alexander Markevich reported this bug in a mailing list thread entitled &amp;quot;repeatability of calculations&amp;quot;.

I have confirmed this as a genuine bug. With this random seed the SCF simply fails spectactularly on four processes, but succeeds on 8.  Perhaps some infrequently used code path in electronic is not correct?  The failure occurs both with ifort/MKL/MKL and gfortran/openblas/FFTW3 fast builds with openmpi,
and therefore does not appear to be a library or compiler bug.

",
            "content_updated_on": "2013-05-30 18:53:18+01",
            "created_on": "2013-02-18 09:32:24+00",
            "id": 862,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "SCF divergence to unbounded below on graphene calculation",
            "updated_on": "2013-05-30 18:53:18+01"
        },
        {
            "assignee": null,
            "content": "With gfortran 4.7.0 and the new &amp;quot;-fstack-arrays&amp;quot; option (which is turned on by -Ofast) CASTEP crashes with segfaults in FFTW during NMR calculations.

&amp;quot;-fstack-arrays&amp;quot; has the effect of allocating storage for (non-allocatable) arrays from the stack rather than the heap.  This caused a segmentation fault and a crash when passed to FFTW3. Clearly the FFTW3 plan for a heap-based array can not be executed for an array on the stack.

There are four offending arrays:

Source/Functional/magres_efg.F90:179:    complex(kind=dp), dimension(max_fine_grid_points) ::chrg_recip
Source/Functional/magres_efg.F90:698:    complex(kind=dp), dimension(max_fine_grid_points) ::chrg_recip
Source/Functional/magres_hyperfine.F90:177:    complex(kind=dp), dimension(max_fine_grid_points) ::spin_den_recip
Source/Functional/magres_hyperfine.F90:316:    complex(kind=dp), dimension(max_fine_grid_points) ::spin_recip  !allocate this!!!

I think we also have a policy that all grid-sized objects be made allocatable to conserve stack memory, and it turns out, to allow FFTW3 to work efficiently.  As the comment in magres_hyperfine.F90 says, these arrays should really be allocatable. ",
            "content_updated_on": "2012-03-30 11:24:54+01",
            "created_on": "2012-02-08 12:31:14+00",
            "id": 695,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Grid-sized arrays on stack",
            "updated_on": "2012-03-30 11:24:54+01"
        },
        {
            "assignee": null,
            "content": "Attached files generate a successful GeomOpt run, however, at the end of it we get:

================================================================================
 BFGS : Final Configuration:
================================================================================
 
                           -------------------------------
                                     Cell Contents
                           -------------------------------
 
            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
            x  Element    Atom        Fractional coordinates of atoms  x
            x            Number           u          v          w      x
            x----------------------------------------------------------x
            x  Pd           1        -0.500000   0.500000   0.000000   x
            x  Pd           2        -0.500000  -0.500000   0.244722   x
            x  Pd           3         0.000000   0.000000   0.129139   x
            xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 
 
 BFGS : Final Enthalpy     = -2.39352786E+003 eV
Error in algor_invert_real - matrix is singular
Current trace stack:
 algor_invert_real
 geom_calculate_abar
 geom_update_inv_hessian_params
 geom_opt_quasi_Newton
 geometry_optimise
 castep
",
            "content_updated_on": "2012-08-15 18:09:46+01",
            "created_on": "2012-08-09 12:16:53+01",
            "id": 760,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": " &quot;Matrix is singular&quot; error in CASTEP Geometry Optimization",
            "updated_on": "2012-08-15 18:09:46+01"
        },
        {
            "assignee": null,
            "content": "Three of the tests in the magres part of the test suite fail with
array bounds errors when run with a &amp;quot;build=debug&amp;quot; executable with
array bounds checking.  This appears to be two separate errors.

Both C2H5OH-efg-shield-xal-spd-mag and  C2H5OH-opt-efg-def-mag fail
with the following traceback from Gfortran 

At line 462 of file ../../Source/Functional/magres_efg.F90
Fortran runtime error: Array bound mismatch, size mismatch for dimension 1 of array 'g_recip_grid' (3/2)

Backtrace for this error:
  + function __magres_efg_MOD_magres_efg_calc_ion (0x8E8FE0)
    at line 462 of file magres_efg.F90
  + function __magres_efg_MOD_magres_efg_calculate (0x8EF1E4)
    at line 166 of file magres_efg.F90
  + function __magres_MOD_magres_run (0x831CE8)
    at line 370 of file magres.F90
  + function castep (0x410CEC)
    at line 1066 of file castep.f90
  + /lib64/libc.so.6(__libc_start_main+0xfd) [0x2b1bba169afd",
            "content_updated_on": "2012-08-27 19:39:33+01",
            "created_on": "2011-06-03 15:19:43+01",
            "id": 538,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Array bounds bugs in Magres ",
            "updated_on": "2012-08-27 19:39:33+01"
        },
        {
            "assignee": null,
            "content": "The jobs run fine for energy/geometry etc., but band structure task jobs fail with:

nb,nbands           5           4
 nq,nqpts           1           1
 ns,nspins           1           1
Error in nlxc_band_real:GET band/kpt/spin index too big
Current trace stack:
 nlxc_real_band
 nlxc_apply_wvfn_slice_cmplx
 nlxc_apply_wvfn_slice
 band_structure_apply_H
 band_structure_calculate_all
 run_band_structure
 castep

Input files from one of the regression suite tests are attached, the job takes a few seconds (same failure with any nlxc functional). The failure happens in serial runs as well as parallel; probably some misconception in the code related to the number of SCF bands (nbands=4) and BS bands (bs_nextra_bands=12). 

The failures started after Phil's changes for band-parallel nlxc, I believe
",
            "content_updated_on": "2012-09-20 16:05:28+01",
            "created_on": "2012-08-13 11:43:42+01",
            "id": 763,
            "kind": "task"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "NLXC band structure runs no longer work ",
            "updated_on": "2012-09-20 16:05:28+01"
        },
        {
            "assignee": null,
            "content": "On attempt to calculate matrix elements CASTEP dies

with 
orrtl: severe (66): output statement overflows record, unit -5, file Internal Formatted Write^M^M
Image              PC                Routine            Line        Source             ^M
castepexe.exe      0000000141083068  Unknown               Unknown  Unknown^M
castepexe.exe      000000014107EAC9  Unknown               Unknown  Unknown^M
castepexe.exe      000000014100D4EF  Unknown               Unknown  Unknown^M
castepexe.exe      0000000140FF06B8  Unknown               Unknown  Unknown^M
castepexe.exe      0000000140FEFDC0  Unknown               Unknown  Unknown^M
castepexe.exe      0000000140FAABF0  Unknown               Unknown  Unknown^M
castepexe.exe      0000000140FA8E98  Unknown               Unknown  Unknown^M
castepexe.exe      00000001407C6F8F  Unknown               Unknown  Unknown^M
castepexe.exe      000000014042B8C2  Unknown               Unknown  Unknown^M
castepexe.exe      00000001404250F4  Unknown               Unknown  Unknown^M
castepexe.exe      0000000140002FCF  Unknown               Unknown  Unknown^M
castepexe.exe      000000014227263C  Unknown               Unknown  Unknown^M
castepexe.exe      0000000141056C17  Unknown               Unknown  Unknown^M
kernel32.dll       0000000076EBF34D  Unknown               Unknown  Unknown^M
ntdll.dll          0000000077142CA1  Unknown               Unknown  Unknown^M


It looks that the problem is in the 

  subroutine elnes_create_core_wavfun(num_spins,core_wavfun,num_all_core_projectors)

which before creation of the wavefunction tries to determine it's spin_type (the first executable operator is:

 if (wave_spin_type(core_wavfun(1))==&amp;quot;NON_COLLINEAR&amp;quot;) then
       call io_abort('Error, elnes_create_core_wavfun does not support NCM')
    end if


though only some 50 lines below the function is allocated. 
",
            "content_updated_on": "2013-06-18 15:14:51+01",
            "created_on": "2013-06-12 17:35:45+01",
            "id": 917,
            "kind": "enhancement"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "ELNES is not working any more",
            "updated_on": "2013-06-18 15:14:51+01"
        },
        {
            "assignee": null,
            "content": "This bug is with regards to the current mercurial source.

In the following section (C&amp;amp;P from line 13159ff in cell_copy in my Fundamental/cell.f90), the allocatable array cell1%sedc_custom_params may not have been allocated:
    len_temp = size(cell1%sedc_custom_params)
    if (.not.allocated(cell2%sedc_custom_params)) then 
       allocate(cell2%sedc_custom_params(len_temp),stat=status)
       if(status/=0)call io_allocate_abort('cell%sedc_custom_params%strings','cell_copy;')
    end if 
    do ni=1, len_temp
       cell2%sedc_custom_params(ni) = cell1%sedc_custom_params(ni)
    end do

If there are no sedc_custom_params, the array is only allocated with size zero at the end of cell_read. However, cell_copy may have been called before via cell_generate_symmetry -&amp;gt; cell_find_related_atoms -&amp;gt; cell_copy. This makes the function call size(array) illegal, its result undefined and the penultimate line of the code snippet above prone to segfaults.

I don't have a patch ready.",
            "content_updated_on": "2013-04-29 17:13:27+01",
            "created_on": "2013-04-29 16:35:22+01",
            "id": 893,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "cell1%sedc_custom_params may be unallocated in cell_copy",
            "updated_on": "2013-04-29 17:13:27+01"
        },
        {
            "assignee": null,
            "content": "Originally Victor found the problem with EDFT + spin-polarized run crashed (see his description in the orig folder of the attached archive).
I managed to reproduce it with rather different input (x.param/x.cell).
I managed to trace th problem down to the following part of the source:

(in electronic_iter_diag_H): (for the given case nblock=12, total_nbands 36 and gloval_nb is 10)

 num_blocks = (wvfn%total_nbands-global_nb+1)/nblock
 if(1+global_nb+nblock*num_blocks&amp;lt;wvfn%total_nbands) num_blocks = num_blocks+1

 do curr_block=1,num_blocks
   
   nb = global_nb + (curr_block-1)*(nblock/num_in_bnd_group)

	....


   global_nb = nb

   call electronic_find_eigenslice(wvfn,wvfn_gradient,global_nb,nk,ns,top_degenerate_band, &amp;amp;
                       &amp;amp;           min(wvfn%total_nbands-global_nb+1,nblock),super_wvfn, &amp;amp;



On the last run through the loop (curr_block =3) global_nb becomes 46 and the parameter min(wvfn%total_nbands-global_nb+1,nblock) becomes negative (-9) and used further to allocate some stuff etc.. 

I feel there is some logical error somewhere but as I could not guess what is what...

",
            "content_updated_on": "2013-05-29 18:09:51+01",
            "created_on": "2010-12-06 12:33:09+00",
            "id": 438,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "EDFT minimizer fails/crashes in some cases",
            "updated_on": "2013-05-29 18:09:51+01"
        },
        {
            "assignee": null,
            "content": "I attahed an example that was running fine in MS 5.5 and now shows spurious results - it's just gold, primitive cell, with lots of k-points. It has been reported that the 30x30x30 set generates:

Charge spilling parameter for spin component 1 = 6.25%
Error in popn_invert_complex: dgetrf -&amp;gt; singular
Current trace stack:
popn_invert_complex
popn_calculate_density_matrix
popn_calculate_mulliken
castep

My attached result shows:

Species   Ion     s      p      d      f     Total  Charge (e)
==============================================================
  Au       1     2.03   5.99 110.35   0.00 118.36   -99.36
==============================================================

The 5.5 result is more sensible:

Species   Ion     s      p      d      f     Total  Charge (e)
==============================================================
  Au       1     2.00   6.00   9.95   0.00  17.95     1.05
==============================================================
",
            "content_updated_on": "2013-10-15 08:13:37+01",
            "created_on": "2013-09-12 09:45:44+01",
            "id": 940,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Population analysis started misbehaving for large number of k-points",
            "updated_on": "2013-10-15 08:13:37+01"
        },
        {
            "assignee": null,
            "content": "Victor raised the issue of the inconvenient logic of the overspecified parameters 
PHONON_SUM_RULE (logical) and PHONON_SUM_RULE_METHOD.  

   if (phonon_sum_rule_method /= 'NONE' .NEQV. phonon_sum_rule ) then

       mesg='must have '//trim(keywords(ikey_phonon_sum_rule_method)%key)//' /= ''NONE'' if '&amp;amp;

            &amp;amp; //trim(keywords(ikey_phonon_sum_rule)%key)//' = T '//' or vice versa'

       call parameters_error_log(mesg)

    end if

is not correct, as this requires BOTH parameters to be changed to turn off the
default behaviour.

Proposed solution:

1.  Deprecate PHONON_SUM_RULE in favour of PHONON_SUM_RULE_METHOD
2a. Disallow the presence of both. (This would invalidate a few old .param 
    files, but in a trivially fixable way.
or
2b. Warn on the presence of both and in that case ignore PHONON_SUM_RULE

3. PHONON_SUM_RULE could be removed as a module variable. 

I have already removed all USEs of parameters::PHONON_SUM_RULE, so this can
be done at any time without breaking the build.


",
            "content_updated_on": "2013-08-16 19:16:52+01",
            "created_on": "2013-05-04 17:38:41+01",
            "id": 897,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "PHONON_SUM_RULE/PHONON_SUM_RULE_METHOD compatibility logic flawed",
            "updated_on": "2013-08-16 19:16:52+01"
        },
        {
            "assignee": null,
            "content": "From a posting by Nathaniel Boone to the list:

When I examine the .castep file (attached) there is a negative memory required per node as calculated by castep prior to beginning the calculations.

and indeed

+---------------- MEMORY AND SCRATCH DISK ESTIMATES PER NODE -----------------+
|                                                     Memory          Disk    |
| Model and support data                              145.7 MB         0.0 MB |
| Electronic energy minimisation requirements         221.9 MB         0.0 MB |
| Non-local exact exchange data                     -3177.5 MB         0.0 MB |
|                                               ----------------------------- |
| Approx. total storage required per node           -2809.9 MB         0.0 MB |
|                                                                             |
| Requirements will fluctuate during execution and may exceed these estimates |
+-----------------------------------------------------------------------------+

The test case was B3LYP Si 2 in an elongated box, V=193A**2, 93 k-points and
600 eV cutoff.

Clearly there is some integer overflow occuring in subroutine

nlxc_basis_calc_storage

    ram=ram+6*max_qp_plane_waves*nqpts*num_in_gv_group*r
    ram=ram+6*max_qp_plane_waves*nqpts*r
    ram=ram+6*num_kpoints_on_node*nqpts*r
    ram=ram+8*max_qp_plane_waves*nqpts*num_in_gv_group*r
    ram=ram+8*max_qp_plane_waves*nqpts*r
    ram=ram+4*max_grid_points*nbands*nqpts*nspins*r
    ram=ram+4*max_plane_waves*num_kpoints_on_node*nqpts*r
    ram=ram+4*max_plane_waves*num_kpoints_on_node*num_in_gv_group*nqpts*num_in_kp_group*r
    ram=ram+4*max_plane_waves*num_kpoints_on_node*num_in_gv_group*nqpts*r
    ram=ram+2*max_qp_plane_waves*nbands*nqpts*nspins*num_in_gv_group*r
    ram=ram+2*max_qp_plane_waves*nqpts*nspins*r
    ram=ram+2*max_qp_plane_waves*nqpts*num_in_gv_group*r
    ram=ram+8*max_qp_plane_waves*nqpts*r
    ram=ram+4*nqpts*num_in_gv_group*r
    ram=ram+2*nqpts*num_kpoints_on_node*r

I believe the expression is being evaluated left to right, and clearly the multiplication is done using (32-bit) integer arithmetic before being converted to floating point for multiplication by &amp;quot;r&amp;quot;.


As standard Fortran requires that expressions are evaluated left-to-right within groups of equal precedence, a suitable fix would be to convert the initial counts to floating point, or to make &amp;quot;r&amp;quot; the first term in the multiplication.

All other &amp;quot;_calc_storage&amp;quot; routines should be checked too, but this is probably the most critical case.

Keith

",
            "content_updated_on": "2013-09-24 19:55:30+01",
            "created_on": "2013-05-08 16:47:27+01",
            "id": 904,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "NLXC Memory estimate gives negative numbers",
            "updated_on": "2013-09-24 19:55:30+01"
        },
        {
            "assignee": null,
            "content": "There's an example in the attached .bands file but I'm sure a simpler test case
can be easily devised.

The number label of the K-point in the .bands file is wrong in the
case of a duplicated K-point, eg &amp;quot;1&amp;quot; reoccurs twice in slots 23 and 67,
and point 47 is mislabelled as 17.

This confuses the plotting tools particularly dispersion.pl, which relies
on the numbering to sort the points.  (This could be changed, but I still
think that the bandstructure output is wrong and should be fixed.)

$ grep K-point bbdta-bs-afm.bands
K-point    1  0.00000000  0.00000000  0.00000000  0.01492537
K-point    2  0.10000000  0.00000000  0.00000000  0.01492537
K-point    3  0.20000000  0.00000000  0.00000000  0.01492537
K-point    4  0.30000000  0.00000000  0.00000000  0.01492537
K-point    5  0.40000000  0.00000000  0.00000000  0.01492537
K-point    6  0.50000000  0.00000000  0.00000000  0.01492537
K-point    7  0.50000000  0.00000000  0.08333333  0.01492537
K-point    8  0.50000000  0.00000000  0.16666667  0.01492537
K-point    9  0.50000000  0.00000000  0.25000000  0.01492537
K-point   10  0.50000000  0.00000000  0.33333333  0.01492537
K-point   11  0.50000000  0.00000000  0.41666667  0.01492537
K-point   12  0.50000000  0.00000000  0.50000000  0.01492537
K-point   13  0.40000000  0.00000000  0.50000000  0.01492537
K-point   14  0.30000000  0.00000000  0.50000000  0.01492537
K-point   15  0.20000000  0.00000000  0.50000000  0.01492537
K-point   16  0.10000000  0.00000000  0.50000000  0.01492537
K-point   17  0.00000000  0.00000000  0.50000000  0.01492537
K-point   18  0.00000000  0.00000000  0.41666667  0.01492537
K-point   19  0.00000000  0.00000000  0.33333333  0.01492537
K-point   20  0.00000000  0.00000000  0.25000000  0.01492537
K-point   21  0.00000000  0.00000000  0.16666667  0.01492537
K-point   22  0.00000000  0.00000000  0.08333333  0.01492537
K-point    1  0.00000000  0.00000000  0.00000000  0.01492537
K-point   24  0.05555556  0.05555556  0.00000000  0.01492537
K-point   25  0.11111111  0.11111111  0.00000000  0.01492537
K-point   26  0.16666667  0.16666667  0.00000000  0.01492537
K-point   27  0.22222222  0.22222222  0.00000000  0.01492537
K-point   28  0.27777778  0.27777778  0.00000000  0.01492537
K-point   29  0.33333333  0.33333333  0.00000000  0.01492537
K-point   30  0.38888889  0.38888889  0.00000000  0.01492537
K-point   31  0.44444444  0.44444444  0.00000000  0.01492537
K-point   32  0.50000000  0.50000000  0.00000000  0.01492537
K-point   33  0.50000000  0.50000000  0.08333333  0.01492537
K-point   34  0.50000000  0.50000000  0.16666667  0.01492537
K-point   35  0.50000000  0.50000000  0.25000000  0.01492537
K-point   36  0.50000000  0.50000000  0.33333333  0.01492537
K-point   37  0.50000000  0.50000000  0.41666667  0.01492537
K-point   38  0.50000000  0.50000000  0.50000000  0.01492537
K-point   39  0.44444444  0.44444444  0.50000000  0.01492537
K-point   40  0.38888889  0.38888889  0.50000000  0.01492537
K-point   41  0.33333333  0.33333333  0.50000000  0.01492537
K-point   42  0.27777778  0.27777778  0.50000000  0.01492537
K-point   43  0.22222222  0.22222222  0.50000000  0.01492537
K-point   44  0.16666667  0.16666667  0.50000000  0.01492537
K-point   45  0.11111111  0.11111111  0.50000000  0.01492537
K-point   46  0.05555556  0.05555556  0.50000000  0.01492537
K-point   17  0.00000000  0.00000000  0.50000000  0.01492537
K-point   48  0.00000000  0.07142857  0.50000000  0.01492537
K-point   49  0.00000000  0.14285714  0.50000000  0.01492537
K-point   50  0.00000000  0.21428571  0.50000000  0.01492537
K-point   51  0.00000000  0.28571429  0.50000000  0.01492537
K-point   52  0.00000000  0.35714286  0.50000000  0.01492537
K-point   53  0.00000000  0.42857143  0.50000000  0.01492537
K-point   54  0.00000000  0.50000000  0.50000000  0.01492537
K-point   55  0.00000000  0.50000000  0.41666667  0.01492537
K-point   56  0.00000000  0.50000000  0.33333333  0.01492537
K-point   57  0.00000000  0.50000000  0.25000000  0.01492537
K-point   58  0.00000000  0.50000000  0.16666667  0.01492537
K-point   59  0.00000000  0.50000000  0.08333333  0.01492537
K-point   60  0.00000000  0.50000000  0.00000000  0.01492537
K-point   61  0.00000000  0.42857143  0.00000000  0.01492537
K-point   62  0.00000000  0.35714286  0.00000000  0.01492537
K-point   63  0.00000000  0.28571429  0.00000000  0.01492537
K-point   64  0.00000000  0.21428571  0.00000000  0.01492537
K-point   65  0.00000000  0.14285714  0.00000000  0.01492537
K-point   66  0.00000000  0.07142857  0.00000000  0.01492537
K-point    1  0.00000000  0.00000000  0.00000000  0.01492537
",
            "content_updated_on": "2013-09-26 12:17:00+01",
            "created_on": "2009-11-06 11:01:55+00",
            "id": 204,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Numbering of duplicate k-points in .bands file from BS calculation is wrong",
            "updated_on": "2013-09-26 12:17:00+01"
        },
        {
            "assignee": null,
            "content": "I have seen a couple of reports of a failure of dynamical matrix Fourier interpolation with the diagnostic

Error in secondd_apply_symm_to_dmat: symmetry operation not one of cell::symmetry_operations
Current trace stack:
 secondd_apply_symm_to_dmat
 phonon_recip_to_real
 phonon_calculate
 castep

This was caused by a default specification of the (coarse) phonon kpoint grid,
e.g.

 kpoint_mp_grid :    4   4   4
 phonon_kpoint_mp_offset  0.125 0.125 0.125

The current result of such input is that the phonon kpoint set is identical
to the electronic set and the offset variable is ignored.  This could either
be an unanticipated consequence of the intended design or a bug.  Either way
it does seem a poor user interaction that the offset keyword is accepted
without diagnostic but ignored.

The diagnostic and error abort occur because phonon_recip_to_real re-generates
the unfolded q-point grid from the cell variables. It does not ignore the offset.
and therefore produces a different grid than set up upon cell_read.
Ad iprint 3:

 ------------------------------------------------------------------------
  Constructing realspace force constant matrix by Fourier transformation
  of dynamical matrices on q-point grid:   4  4  4
 ------------------------------------------------------------------------
  Transforming dmat for kpt       0 ( 0.000, 0.000, 0.000) to      1 (-0.250,-0.250,-0.250)
     with symmetry operation        ( 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00)
         fractional symmetry        ( 1, 0, 0, 0, 1, 0, 0, 0, 1)
   reciprocal lattice vector        ( 0, 0, 0)

Workaround #1 could be for phonon_recip_to_real to check the grids and abort
Workaround #2 could be for phonon_recip_to_real to check the grids and replicate the grid generation in .cell.
",
            "content_updated_on": "2013-09-26 17:51:36+01",
            "created_on": "2013-07-20 09:04:10+01",
            "id": 930,
            "kind": "bug"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Bad phonon_kp grid grid setup causes phonon interpolation failure",
            "updated_on": "2013-09-26 17:51:36+01"
        },
        {
            "assignee": null,
            "content": "The attached test case demonstrates erroneous and strange behaviour during 
geometry optimization.  Specifically,

1. After BFGS iteration 12 the energy apparently decreases without lower bound
2. The symmetry of the forces is broken; marginally at the beginning of the
   run, increasing to completely by iteration 12.
3. There are large force pairs between apparently well-separated N atoms, but
   no correspondingly large forces on any of the H atoms supposedly bonded to
   them.

Upon investigation, this turns out to be a consequence of an initial symmetry
setup failure, which arises where the simulation cell is non-primitive,  Though the point group is -43m, and the space grou I-43m, only the usual 24 point group operations are generated as we know. But cell_find_related_atoms() can not determine which of the two images of an atom related by a bcc lattice translation to choose.  The resulting list wanders ransomly between the two sub-cells.

Though this does not appear to adversely affect density_symmetrise, the force symmetrization algorithm returns results where the the symmetry is slightly broken.  This is apparent in the 5th decimal plance on the initial forces after the SCF.  This small discrepancy is magnified during the BFGS optimization until it becomes catastrophic.

As the symmetry is never re-checked during optimization and the original operations are retained, the set of symmetry operations and the geometry become completely inconsistent.  This is the cause of the failure.

An optimisation run with the same cell, but with 48 symmetry operations explicitly specified to include the bcc lattice translations works as expected and the BFGS converges.

Possible solutions:

A.  Rewrite cell_find_related_atoms() to return two distinct unconnected cycles of atoms (N for an N-unit supercell) for the distinct primitive cells within the supercell.

B. Detect the condition (how) and abort.

C. Detect the condition and automatically complete the set of space group operations including the lattice translations. (Could be done by adding in the
identity matrix + 1 primitive lattice translation - (1/2,1/2,1/2) in this case - and calling cell_complete_group.",
            "content_updated_on": "2013-10-23 15:15:54+01",
            "created_on": "2013-09-15 11:14:23+01",
            "id": 941,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Geometry optimization goes haywire for non-primitive cell",
            "updated_on": "2013-10-23 15:15:54+01"
        },
        {
            "assignee": null,
            "content": "For MatStudio users if it was a failure with CASTEP run and full check file was not requested nothing is brought back on the job complete. If we saved both castep_bin and check file simultaneously it would not be a problem.
It can be made keyword dependent...
Actually may be we do not need to have check file at all? 
I mean we could have castep_bin AND wavefunctions as separate files...

",
            "content_updated_on": "2013-11-08 18:16:27+00",
            "created_on": "2009-11-03 15:27:27+00",
            "id": 201,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "would be nice to save both castep_bin and check file each time",
            "updated_on": "2013-11-08 18:16:27+00"
        },
        {
            "assignee": null,
            "content": "The test case was Gareth Griffith's ice viii, but I suspect any 5.5
checkpoint restart would reproduce:

castep-6.0 test-v7
forrtl: severe (174): SIGSEGV, segmentation fault occurred
Image              PC                Routine            Line        Source             
castep-6.0         0000000000EA14A9  ion_atom_mp_ion_a        9054  ion_atom.F90
castep-6.0         0000000000E82D1A  ion_atom_mp_ion_a        2041  ion_atom.F90
castep-6.0         0000000000E74D7D  ion_mp_ion_initia         853  ion.F90
castep-6.0         000000000083D09D  model_mp_model_co        1383  model.F90
castep-6.0         00000000004249A3  MAIN__                    274  castep.f90
castep-6.0         000000000041FE0C  Unknown               Unknown  Unknown
libc.so.6          00007F181FADFBA5  Unknown               Unknown  Unknown
castep-6.0         000000000041FD19  Unknown               Unknown  Unknown

A quick investigation shows that model_continuation is calling ion_initialise, at a point where current_cell%species_pot is &amp;quot;NULL.NULL&amp;quot;, so the pseudopotential generator is being called.  Questions 

1. When was this broken. It worked in 5.5.
2. Why is ion_atom crashing instead of (incorrectly) generating a potential?

",
            "content_updated_on": "2013-11-24 22:28:36+00",
            "created_on": "2013-10-30 19:28:01+00",
            "id": 957,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Change of pseudopotentials from OTF to named usp on continuation causes crash.",
            "updated_on": "2013-11-24 22:28:36+00"
        },
        {
            "assignee": null,
            "content": "
Hi Matt,

As per your e-mail I am now adding the issue I found for pot1d to the bug tracker. Below is the message I posted on jiscmail:

I’ve been trying to use pot1d using castep 7 and noticed there is some potentially misleading information on jiscmail regarding this (unless I didn't spot the corrections - in which case apologies for double-posting): In previous posts here it was described that one needs to change the param file such that continuation : default. This works fine for version 6.1 but breaks in version 7 and up, because of some changes in parameters.f90 (I think..). To make it work in version 7 it should be set to continuation : filename.check.
Just by grep’ing for the different usage of continuation (i.e. “continuation” vs  “trim(seedname)//".check"”), this may also apply to some other tools, but I didn’t actually look into this further.... 
This may be an obvious thing to spot for some, but could easily throw someone off especially given the different usage previously explained in older posts, so that’s why I wanted to post this here.
As a side-note, while I was looking at this, I noticed that it seems the commit tag of the version of castep 7.0.2 on Archer is different than the one from the version I downloaded myself from CCPForge (84e5d449383f+ vs. 5c7987e9424c+) – not sure if this can then cause problems for continuation runs? (7.0.3 is the same)
Best,
Georg
",
            "content_updated_on": "2014-08-15 12:30:30+01",
            "created_on": "2014-08-12 16:23:27+01",
            "id": 1091,
            "kind": "bug"
            "priority": "blocker",
            "reporter": null,
            "status": "resolved",
            "title": "changes in parameters.f90 break previous usage of pot1d (potentially affects others)",
            "updated_on": "2014-08-15 12:30:30+01"
        },
        {
            "assignee": null,
            "content": "
Currently it is possible to generate a bandstructure or phonon dispersion
using %BLOCK *_kpoint_path for the case of a single, continuous path through
k-space. Occasionally it is only possible to specify the required bandstructure
as two disconnected fragments, but there is no means of specifying this. In that case either the run must be split into two, or a low-symmetry or duplicated segment used to fill the gap.
(For an important subclass of these cases, eg fcc it is possible to generate a single continuous path by going out into the next Brillouin zone, but that requires a very clear head for reciprocal space to set up correctly).
Many moons ago we discussed, and I think agreed an extension which would look like
%BLOCK bs_kpoint_path
0.0 0.0 0.0
0.0 0.0 0.5
break
0.0 0.0 0.0
0.0 0.5 0.5
break
0.5 0.0 0.0
0.5 0.0 0.5
%ENDBLOCK bs_kpoint_path
which would generate three disconnected segments in the list.
",
            "content_updated_on": "2015-07-15 13:00:10+01",
            "created_on": "2013-09-25 17:33:17+01",
            "id": 947,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Allow "broken" paths for *_kpoint_path",
            "updated_on": "2015-07-15 13:00:10+01"
        },
        {
            "assignee": null,
            "content": "
In the current mercurial CASTEP, the compilation target "tools" is missing a dependency on f90wrap_stub.o. This was fixed for main castep by Dominik in changeset 31231913e8d3 on Fri Mar 20, but persists for the tools target.


To reproduce "make clean tools".


To fix, apply attached patch.
",
            "content_updated_on": "2015-09-14 11:43:15+01",
            "created_on": "2015-08-10 17:00:20+01",
            "id": 1335,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Missing dependency for build target "tools"",
            "updated_on": "2015-09-14 11:43:15+01"
        },
        {
            "assignee": null,
            "content": "
Attached input files produce the following:
{noformat}
  +---------------- MEMORY AND SCRATCH DISK ESTIMATES PER PROCESS --------------+
  |                                                     Memory          Disk    |
  | Model and support data                             -246.8 MB         0.0 MB |
  | Finite displacement phonon requirements            1532.4 MB         0.0 MB |
  |                                               ----------------------------- |
  | Approx. total storage required per process         1285.7 MB         0.0 MB |
  |                                                                             |
  | Requirements will fluctuate during execution and may exceed these estimates |
  +-----------------------------------------------------------------------------+
{noformat}
Victor suspects snippets like this (in electronic):
{code}
      ! Need the hamiltonian
      ram = ram + real((wvfn%nbands_max**2)*wvfn%nkpts*wvfn%nspins*algor_sizeof(cmplx_i),dp)/(1024**2)


      if(current_params%metals_method=='EDFT') then
        ! Need other nbands_max**2 matrices: full_eig_end, full_eig_start, full_eig_trial, full_eig_best
        ram = ram + real(4.0_dp*(wvfn%nbands_max**2)*wvfn%nkpts*wvfn%nspins*algor_sizeof(cmplx_i),dp)/(1024**2)
      end if
{code}


 
",
            "content_updated_on": "2015-10-16 18:13:52+01",
            "created_on": "2015-10-14 15:00:16+01",
            "id": 1395,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Negative memory estimate is printed in CASTEP output file",
            "updated_on": "2015-10-16 18:13:52+01"
        },
        {
            "assignee": null,
            "content": "
A debug compile using the Oracle compilers revealed an array bounds error on the BC2N-Raman test suite test - actually an array operation length mismatch.  Array "current_cell%ion_pack_species" is declared of excess length and the subarray index (1:current_cell%num_ions) must be specified to use in array operations.


It's a shame that the buildbot continuous build system was allowed to fall into disarray; we could have picked this up much sooner. 


 


This is also evidence of the value of using multiple compilers.  Neither gfortran nor Intel debug builds spotted this.
 
",
            "content_updated_on": "2015-11-25 12:51:34+00",
            "created_on": "2015-10-30 09:36:19+00",
            "id": 1433,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Array bounds error in revised Raman code",
            "updated_on": "2015-11-25 12:51:34+00"
        },
        {
            "assignee": null,
            "content": "
CASTEP ELF is wrong - the quantity output is closer to the the minimum charge density isosurface than ELF. A simple test on H2O comparing to canonical result on https://en.wikipedia.org/wiki/Electron_localization_function shows that it is qualitatively way off - even allowing for pseudopotentials rendering the absolute value meaningless.


Matt
",
            "content_updated_on": "2015-10-27 12:13:25+00",
            "created_on": "2015-10-27 11:43:41+00",
            "id": 1427,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Bug in ELF",
            "updated_on": "2015-10-27 12:13:25+00"
        },
        {
            "assignee": null,
            "content": "
In an attempt to circumvent the failure of the fermi-level finder in
band parallel, I have been attempting to run with fix_occupancy=true.
My target system run crashes on HECToR, with a glibc/memory error, and
a rerun with a debugging executable yields the following array bounds
error on all processors:
forrtl: severe (408): fort: (3): Subscript #2 of the array ROTATION has value -1 which is less than the lower bound of 1
Image PC Routine Line Source
castep-5.5.2-HL-s 0000000002C9B73D Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000002C9A245 Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000002C52110 Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000002BFBC6F Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000002BFC072 Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000001499504 wave_mp_wave_tran 23335 wave.F90
castep-5.5.2-HL-s 000000000141FE83 wave_mp_wave_orth 13051 wave.F90
castep-5.5.2-HL-s 000000000141DAB0 wave_mp_wave_sort 12763 wave.F90
castep-5.5.2-HL-s 000000000141D823 wave_mp_wave_sort 12700 wave.F90
castep-5.5.2-HL-s 00000000013CCBEF wave_mp_wave_init 3390 wave.F90
castep-5.5.2-HL-s 00000000008CEC67 model_mp_model_in 3839 model.F90
castep-5.5.2-HL-s 00000000004014D7 MAIN__ 885 castep.f90
castep-5.5.2-HL-s 000000000040045C Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000002B7D743 Unknown Unknown Unknown
castep-5.5.2-HL-s 0000000000400329 Unknown Unknown Unknown
The line numbers refer to wave.F90 revision 1.245.2.1, and there is an offset of +3 lines wrt numbering of CVS HEAD wave.
The run was on 576 cores of HECToR 2B, and reproduced on both the system and
my own intel-compiled executables on the 5.5.x branch. The crash is almost immediate upon startup.
 
",
            "content_updated_on": "2015-11-17 18:01:54+00",
            "created_on": "2011-02-23 18:18:30+00",
            "id": 499,
            "kind": "bug"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "Band parallel crash for fix_occupancy=true",
            "updated_on": "2015-11-17 18:01:54+00"
        },
        {
            "assignee": null,
            "content": "
After the latest fix ELF does look correct qualitatively, but the absolute values seem to depend strongly on grid_scale - for water I can get sensible isosurface's value down from 0.5 to 0.05 by increasing grid_scale. 
",
            "content_updated_on": "2016-04-30 01:04:13+01",
            "created_on": "2015-11-03 08:56:10+00",
            "id": 1439,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "ELF data scales with grid_scale (it should not)",
            "updated_on": "2016-04-30 01:04:13+01"
        },
        {
            "assignee": null,
            "content": "
Traceback from debug (same in serial and parallel runs):


forrtl: severe (174): SIGSEGV, segmentation fault occurred
Image              PC                Routine            Line        Source             
castepexe.exe      0000000001EC3989  Unknown               Unknown  Unknown
castepexe.exe      0000000001EC225E  Unknown               Unknown  Unknown
castepexe.exe      0000000001DD4F82  Unknown               Unknown  Unknown
castepexe.exe      0000000001D78298  Unknown               Unknown  Unknown
castepexe.exe      0000000001D7FABB  Unknown               Unknown  Unknown
libpthread.so.0    00002B112D579130  Unknown               Unknown  Unknown
castepexe.exe      00000000008B7760  ion_mp_ion_beta_a        5110  ion.f90
castepexe.exe      00000000018F8232  nlpot_mp_nlpot_ap        6273  nlpot.f90
castepexe.exe      0000000000EA7900  electronic_mp_ele       15195  electronic.f90
castepexe.exe      0000000000E9D0FC  electronic_mp_ele       14440  electronic.f90
castepexe.exe      0000000000E1B13C  electronic_mp_ele        1235  electronic.f90
castepexe.exe      0000000000E121FE  electronic_mp_ele         503  electronic.f90
castepexe.exe      0000000001339882  phonon_mp_phonon_        4137  phonon.f90
castepexe.exe      00000000012CBDCA  phonon_mp_phonon_         628  phonon.f90
castepexe.exe      00000000004425FD  MAIN__                    633  castep.f90
castepexe.exe      000000000043D226  Unknown               Unknown  Unknown
libc.so.6          00002B112D7A7AF5  Unknown               Unknown  Unknown
castepexe.exe      000000000043D129  Unknown               Unknown  Unknown


This line 5110 is an innocent addition, but perhaps indices got corrupted:


5108     do i = 1, num_real_ps_points(ni,nsp)


5109        j = real_ps_points(i,ni,nsp)


5110        grid(j) = grid(j) + beta_sum(i)


5111     end do


Reciprocal space pseudopotentials work fine, also smaller supercells and/or lower cutoff works OK. Pseudopotentials now attached.


SUPERCELL_KPOINTS_MP_OFFSET : 0.25 0.25 0.25 in the cell file also fixes the problem.


Also one can add the following block to param file to fix the problem:
%block devel_code
GAMMA_OFF
%endblock devel_code
which should help to localize the problem


 
",
            "content_updated_on": "2016-01-14 21:57:09+00",
            "created_on": "2015-11-24 09:07:51+00",
            "id": 1465,
            "kind": "bug"
            "priority": "trivial",
            "reporter": null,
            "status": "resolved",
            "title": "Segmentation fault in phonon run (real space PPs, EDFT, finite displacements)",
            "updated_on": "2016-01-14 21:57:09+00"
        },
        {
            "assignee": null,
            "content": "
It is a bit disappointing when after hours and hours of phonon run castep stops with "magres_apply_green_function_s2: not converged"


One has no idea what is requested, what is achieved and actually what to do with the problem.


I believe the best would be to produce an output similar to phonons:


 


 Can not converge to requested precision in 100 iterations
        Best convergence achievable is 0.240815E-04eV/A**2
 Consider increasing PHONON_MAX_CYCLES or convergence tolerance PHONON_ENERGY_TOL


 
",
            "content_updated_on": "2016-02-15 17:46:54+00",
            "created_on": "2015-12-11 13:39:18+00",
            "id": 1487,
            "kind": "enhancement"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "When magres_apply_green_function can not converge it should print achieved convergence value",
            "updated_on": "2016-02-15 17:46:54+00"
        },
        {
            "assignee": null,
            "content": "
For certain tasks, but particularly for phonons, it is not always
necessary to have a full ground state wavefunction available.
Code should check for these cases and avoid recalculation using
a bandstructure calculation, eg on a re-interpolation calculation.
There may be other cases.- Bandstructure, and related.
 
",
            "content_updated_on": "2016-03-29 15:02:57+01",
            "created_on": "2010-03-03 11:57:27+00",
            "id": 235,
            "kind": "task"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Make wvfn regeneration on restart from castep_bin conditional",
            "updated_on": "2016-03-29 15:02:57+01"
        },
        {
            "assignee": null,
            "content": "
Currently CASTEP opens several files with open(status='SCRATCH',..),
for example wave_dump files, and page files. This is far from good because
a) the only way to specify where in the filesystem these are to be placed
is compiler and batch-system dependent. There should be a &amp;quot;CASTEP&amp;quot;
way of doing this, not an &amp;quot;ifort/pgi/pathscale&amp;quot; way.
b) the behaviour is hidden from the user, who may be mystified by the
consequences - such as bringing a network file system to its knees.
c) It makes presumptions about filesystem locality and layout which
may not be true or may change.
These could be addressed simply by arranging for a CASTEP-specific
environment variable (eg CASTEP_TMPDIR) to be read and used to
assign a name for the files. STATUS=SCRATCH would have to be replaced
with named files and a corresponding CLOSE(STATUS='DELETE').
In addition, and for the longer term...
d) If all nodes in a parallel job open a file, this is non-scalable to
large node counts on HPC systems such as HECToR. Perhaps there ought
to be different &amp;quot;disk strategies&amp;quot; for dealing with this by analogy
to &amp;quot;opt_strategy&amp;quot;. One example where this would be used is in TDDFT,
where it is necessary to retain lower all excited state wavefunctions
to orthogonalise against. Should these be gathered into one file
on the rood node, or one per GV-master? Or distributed by&amp;quot; wave_dump?&amp;quot;
Another similar use is in FD supercell phonons for read/write of the
unperturbed supercell wavefunction.
 
",
            "content_updated_on": "2016-03-29 15:07:06+01",
            "created_on": "2009-09-17 15:57:09+01",
            "id": 187,
            "kind": "enhancement"
            "priority": "critical",
            "reporter": null,
            "status": "resolved",
            "title": "Improve handling of placement of scratch files.",
            "updated_on": "2016-03-29 15:07:06+01"
        },
        {
            "assignee": null,
            "content": "
There is something wrong with task spectral and lda+u.


Our customer noticed that bandstructure produced by spectral is quite different to the one produced by task bandstructure.


I cut down the number of k-points to one and you can see the difference between already the third bands energies.


This run was done in a standard BIOVA  way – main run + continuation run (main is ZnO and then I copied check file twice and made two continuation runs)


 


It used to be a problem with non-continuation run, but this one was fixed by Jonathan recently.


 
",
            "content_updated_on": "2016-05-01 13:00:13+01",
            "created_on": "2016-04-06 12:33:27+01",
            "id": 1551,
            "kind": "task"
            "priority": "major",
            "reporter": null,
            "status": "resolved",
            "title": "lda+u spectral continuation spectral ",
            "updated_on": "2016-05-01 13:00:13+01"
        }
    ],
    "comments": [
        {
            "content": null,
            "created_on": "2014-01-15+10%3A06%3A46.081112%2B00",
            "id": "1122",
            "issue": "968",
            "user": "krefson"
        },
        {
            "content": "Just+confirmed+that+adding+NLXC_DIV_CORR_OFF+to+the+.param%3Cbr+%2F%3E%0D%0Afile+on+continuation+cures+the+crash.++I+guess+this+should+be%3Cbr+%2F%3E%0D%0Aturned+off+automatically+when+switching+from+an+NLXC+functional+to+a+DFT+one.",
            "created_on": "2008-08-13+17%3A49%3A58%2B01",
            "id": "32",
            "issue": "57",
            "user": "krefson"
        },
        {
            "content": "Done%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-09-02+12%3A42%3A46%2B01",
            "id": "33",
            "issue": "56",
            "user": "krefson"
        },
        {
            "content": "Done.++EXTRAPOLATION+is+now+used+by+default+unless+devel_code+SECONDD_DENSITY_SCHEME%3DNONE+is+used.",
            "created_on": "2008-09-02+12%3A43%3A58%2B01",
            "id": "34",
            "issue": "15",
            "user": "krefson"
        },
        {
            "content": "This+would+require+a+call+to+%26amp%3Bquot%3Bmodel_checkpoint%26amp%3Bquot%3B+at+some+interval+where+all+processors+are+in+sync.++Difficult%3F+--+Keith%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-09-09+16%3A40%3A48%2B01",
            "id": "35",
            "issue": "60",
            "user": "krefson"
        },
        {
            "content": "Now+implemented+with+new+param+PHONON_FORCE_CONSTANT_ELLIPSOID%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-09-26+09%3A15%3A37%2B01",
            "id": "36",
            "issue": "18",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFirst+patch+did+not+do+the+trick%2C+the+one+from+18%3A51+works+for+me.%3C%2Fp%3E%0A",
            "created_on": "2014-01-15+18%3A53%3A17.153291%2B00",
            "id": "1123",
            "issue": "970",
            "user": "pbro"
        },
        {
            "content": "%3Cp%3E%0AAssigned+to+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-01-16+15%3A57%3A35.980332%2B00",
            "id": "1124",
            "issue": "970",
            "user": "krefson"
        },
        {
            "content": "Bug+%28feature%21%29+fixed+by+code+change.+Checked+into+head+branch.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-05-19+20%3A05%3A33%2B01",
            "id": "17",
            "issue": "11",
            "user": "sjc999"
        },
        {
            "content": "Fixed+by+minor+code+change.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-07-22+17%3A11%3A58%2B01",
            "id": "26",
            "issue": "33",
            "user": "sjc999"
        },
        {
            "content": "Only+used+within+a+single+BFGS+step+%28line-min+etc%29+so+now+deleted+on+any+BFGS+exit.",
            "created_on": "2008-07-23+10%3A29%3A42%2B01",
            "id": "27",
            "issue": "12",
            "user": "mijp1"
        },
        {
            "content": "New+special+case+added+to+logic+to+trap+this+case.",
            "created_on": "2008-07-23+10%3A56%3A21%2B01",
            "id": "28",
            "issue": "23",
            "user": "mijp1"
        },
        {
            "content": "New+special+case+added+to+logic+to+trap+this+case.",
            "created_on": "2008-07-23+22%3A20%3A10%2B01",
            "id": "29",
            "issue": "23",
            "user": "mijp1"
        },
        {
            "content": "This+turned+out+to+be+a+logic+error.++The+case+of+a+continuation+where+the+phonons+and+Born+charges+were%3Cbr+%2F%3E%0D%0Asave+in+the+.check+file+but+not+the+permittivity%2C%3Cbr+%2F%3E%0D%0Aand+LO%2FTO+splitting+was+requested+on+continuation%3Cbr+%2F%3E%0D%0Awas+not+handled.++Easily+fixed.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-08-10+12%3A54%3A53%2B01",
            "id": "30",
            "issue": "52",
            "user": "krefson"
        },
        {
            "content": "Added+%26amp%3Bquot%3Binit_magmom%26amp%3Bquot%3B+optional+arg+to+all+density_initialise+calls+in+secondd.",
            "created_on": "2008-08-11+13%3A12%3A45%2B01",
            "id": "31",
            "issue": "25",
            "user": "krefson"
        },
        {
            "content": "Already+fixed+in+nlxc.F90+by+Sasha+Perlov",
            "created_on": "2009-08-14+08%3A08%3A57%2B01",
            "id": "161",
            "issue": "173",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThe+title+is+not+really+accurate%2C+as+this+is+only+an+issue+with+the+new+%22custom%22+SECD+parameters%2C+and+the+combination+with+supercell+phonon+calculations+has+not+been+implemented.%3C%2Fp%3E%0A%3Cp%3E%0AIt+does+look+like+these+custom+parameters+are+not+being+re-initialised+and+kept+in+sync+with+current_cell.%C2%A0+I+think+there+is+some+logic+in+semp_disp_corr+somewhere+to+re-initialise+if+the+cell+changes%2C+so+they+will+need+to+be+added+to+that.%3C%2Fp%3E%0A%3Cp%3E%0AReducing+priority+to+%22medium%22+as+this+is+a+%22not+yet+implemented%22+issue%2C+and+assigning+to+Matt+as+the+SECD+module+owner.%3C%2Fp%3E%0A",
            "created_on": "2014-01-22+10%3A33%3A16.319804%2B00",
            "id": "1125",
            "issue": "971",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AHi+Keith%2C%3C%2Fp%3E%0A%0A%3Cp%3E%0AUnfortunately+I%27m+not+one+of+the+developers+and+don%27t+have+access+to+the+repository--is+there+any+way+I+can+get+access+to+the+patch%3F%3C%2Fp%3E%0A",
            "created_on": "2016-01-22+20%3A24%3A58.146285%2B00",
            "id": "1490",
            "issue": "1510",
            "user": "jl635"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2016-07-17+10%3A08%3A01.052711%2B01",
            "id": "1602",
            "issue": "1507",
            "user": "mijp1"
        },
        {
            "content": "I%27ve+created+a+public+source+code+repository+for+the+script+here%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Ahttp%3A%2F%2Fgithub.com%2Fdjw%2Felastic-constants%2F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+strain+generation+code+wasn%27t+written+by+me%2C+so+I+can%27t+make+it+available.+In+its+current+incarnation%2C+it+probably+wouldn%27t+be+that+useful%2C+either.+Applying+strains+to+the+lattice+vectors+is+relatively+straightforward.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-10-23+12%3A37%3A13%2B01",
            "id": "45",
            "issue": "16",
            "user": "danwilson"
        },
        {
            "content": "On+further+investigation%2C+this+appears+to+be+caused+by+symmetry+breaking+as+a+result+of+inaccurate+results+computed+in+this+very+low+cutoff+test-case.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+is+no+actual+error+in+secondd_symmetry_solve%2C+but+perhaps+it+is+time+to+remove+or+deactivate+the+consistency+test+for+internal+error.+%28Perhaps+activate+on+a+debug+build+only%3F%29",
            "created_on": "2008-10-28+11%3A35%3A22%2B00",
            "id": "46",
            "issue": "68",
            "user": "krefson"
        },
        {
            "content": "From+Stewart+Clark%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+I+have+noticed+that+the+help+output+for+%26amp%3Bquot%3Bcastep+-help+all%26amp%3Bquot%3B+is+not%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+working+correctly.++The+cause+appears+to+be+that+in+the+list+of+cell%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+keywords%2C+key+91+has+no+help+information+at+all+%28and+is+otherwise%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+unused%29.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+missed+that+one+being+checked+in+-+someone+added+ikey_atom_init+%3Cbr+%2F%3E%0D%0Aparameter+for+a+cell+keyword+then+didn%27t+add+the+keyword.+Please+don%27t+%3Cbr+%2F%3E%0D%0Aattempt+to+add+keywords+to+cell+-+ask+me+instead...%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+Obviously+the+immediate+cure+is+to+add+some+help+info+for+cell+keyword%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+%2391%2C+but+i+wonder+too%2C+if+io_freeform_help+should+be+coded+to+skip+an%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+invalid+entry+instead+of+aborting.++That+would+make+the+help+more%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+robust+against+future+errors.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASince+it%27s+not+essential+for+the+new+release+I%27ll+check+in+a+fix+for+cell+%3Cbr+%2F%3E%0D%0Aafter+that.+However%2C+io+skipping+such+an+event+%28maybe+issue+a+warning+or+%3Cbr+%2F%3E%0D%0Ainfo+text%29+would+be+useful.",
            "created_on": "2008-10-28+11%3A38%3A28%2B00",
            "id": "47",
            "issue": "69",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change+in+ion.F90+rev+1.157",
            "created_on": "2008-11-18+17%3A17%3A56%2B00",
            "id": "58",
            "issue": "13",
            "user": "krefson"
        },
        {
            "content": "Fixed+fully+in+electronic+revision+1.195%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-11-18+17%3A18%3A57%2B00",
            "id": "59",
            "issue": "54",
            "user": "krefson"
        },
        {
            "content": "Fixed+fully+in+electronic+revision+1.195%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-11-18+17%3A19%3A16%2B00",
            "id": "60",
            "issue": "54",
            "user": "krefson"
        },
        {
            "content": "Assigned+to+Stewart+initially.++Also+assigned+a+lowish%3Cbr+%2F%3E%0D%0Apriority+as+it+is+a+theoretical+worry+not+a+bug.++Stewart%2C%3Cbr+%2F%3E%0D%0Afeel+free+to+comment%2C+change+the+priority+and+change%3Cbr+%2F%3E%0D%0Athe+%26amp%3Bquot%3Bresolution%26amp%3Bquot%3B+as+you+see+fit.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-06-30+14%3A27%3A44%2B01",
            "id": "113",
            "issue": "140",
            "user": "krefson"
        },
        {
            "content": "Duplicate+of+bug+%23127",
            "created_on": "2009-06-30+14%3A30%3A25%2B01",
            "id": "114",
            "issue": "141",
            "user": "krefson"
        },
        {
            "content": "5.+It+would+help+GUI+%28parser%29+to+use+the+same+style+for+the%3Cbr+%2F%3E%0D%0Atable+of+charges+as+for+Mulliken+analysis.",
            "created_on": "2009-06-30+14%3A44%3A35%2B01",
            "id": "115",
            "issue": "143",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AMade+snap_to_symmetry+public+in+cell+and+then+added+symmetrization+in+geometry.%3C%2Fp%3E%0A%0A%3Cp%3E%0ANow+passes+OK.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-11-17+17%3A27%3A10.558554%2B00",
            "id": "1699",
            "issue": "1664",
            "user": "mijp1"
        },
        {
            "content": "I+agree+that+putting+the+deviation+from+unity+would+improve%3Cbr+%2F%3E%0D%0Athe+usefulness+of+the+message.+It+would+help+distinguish%3Cbr+%2F%3E%0D%0Abetween+a+substantial+error+and+a+precision+issue.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+question+is+also+raised+about+whether+to+treat+phonon+bandtsructure%2C+optics+etc+kpoint+weights+using+the+same%3Cbr+%2F%3E%0D%0Acriterion+as+electronic+k-points.++Precision+is+only+really+critical+for+the+electronic+SCF+set+and+the+other+sets+could%3Cbr+%2F%3E%0D%0Aprobably+use+a+more+relaxed+criterion.",
            "created_on": "2008-12-04+09%3A45%3A55%2B00",
            "id": "66",
            "issue": "85",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+checkin+of+cell.F90+1.227",
            "created_on": "2008-12-13+17%3A42%3A11%2B00",
            "id": "71",
            "issue": "69",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+checkin+of+cell.F90+1.227",
            "created_on": "2008-12-13+17%3A42%3A24%2B00",
            "id": "72",
            "issue": "69",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+check+in+to+secondd_symmetry.F90%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-12-23+08%3A29%3A32%2B00",
            "id": "74",
            "issue": "91",
            "user": "krefson"
        },
        {
            "content": "There+was+an+error+in+hartree_calculate_first_order+where+a%3Cbr+%2F%3E%0D%0Aloop+ran+over+num_real_points+instead+of+num_fine_real_points.%3Cbr+%2F%3E%0D%0AFixed+in+1.24+and+on+Castep44_branch.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2008-12-29+14%3A41%3A15%2B00",
            "id": "75",
            "issue": "93",
            "user": "krefson"
        },
        {
            "content": "We+must+do+this+for+the+next+release.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+don%27t+have+a+preference+between+writing+after+every+scf%2C+or+just+for+BS%2FNMR.+We+could+always+do+the+minimal+change+%28ie+Keith%27s+version%29",
            "created_on": "2009-01-02+18%3A08%3A55%2B00",
            "id": "76",
            "issue": "58",
            "user": "jry20"
        },
        {
            "content": "Fixed+in+CVS+trunk+by+wrapping+this+code+in+%26amp%3Bquot%3B%23ifdef+debug%26amp%3Bquot%3B",
            "created_on": "2009-01-06+16%3A37%3A40%2B00",
            "id": "77",
            "issue": "68",
            "user": "krefson"
        },
        {
            "content": "Fixed+-+force+to+GV+parallelism%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-01-06+18%3A18%3A49%2B00",
            "id": "78",
            "issue": "96",
            "user": "krefson"
        },
        {
            "content": "Fixed+as+part+of+the+general+update+to+LATTICE_ABC+cell+orientation.",
            "created_on": "2009-01-21+11%3A42%3A55%2B00",
            "id": "80",
            "issue": "98",
            "user": "krefson"
        },
        {
            "content": "Coded+and+sent+to+SJC+and+included+with+bugfixes+in+cell.F90%3Cbr+%2F%3E%0D%0Arevision+1.229",
            "created_on": "2009-01-21+11%3A46%3A35%2B00",
            "id": "81",
            "issue": "82",
            "user": "krefson"
        },
        {
            "content": "This+is+also+an+issue%2C+when+a+phonon+calculation+is+started+as+a+continuation+from+a+geometry+optimisation.++Or+at+least+there+is+a+related+issue.++I+suspect+that+finite_basis_corr+was+on+in+the+original+geometry+optimisation+and+the+automatic+resetting+of+the+SCF+tolerances+ensured+that+it+was+recalculated.++This+logic+needs+examining%2C+but+I+fear+we+are+getting+into+some+very+convoluted+special+cases.",
            "created_on": "2009-01-30+11%3A05%3A14%2B00",
            "id": "82",
            "issue": "84",
            "user": "krefson"
        },
        {
            "content": "This+is+also+an+issue%2C+when+a+phonon+calculation+is+started+as+a+continuation+from+a+geometry+optimisation.++Or+at+least+there+is+a+related+issue.++I+suspect+that+finite_basis_corr+was+on+in+the+original+geometry+optimisation+and+the+automatic+resetting+of+the+SCF+tolerances+ensured+that+it+was+recalculated.++This+logic+needs+examining%2C+but+I+fear+we+are+getting+into+some+very+convoluted+special+cases.",
            "created_on": "2009-02-04+09%3A36%3A31%2B00",
            "id": "83",
            "issue": "84",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ADan%27s+fix+checked+in+as%0A%3C%2Fp%3E%0A%0A%09%09%09%09%3Cp%3E%0A%09%09%09%09Changeset%3A%3C%2Fp%3E%0A%09%09%09%0A%09%09%09%0A%09%09%09%09%3Cp%3E%0A%09%09%09%096232+%28c80f47ffef13%29+Bugfixes+in+xc.f90+and+wave.f90%3C%2Fp%3E%0A%09%09%09%0A%09%09%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-01-31+12%3A36%3A38.20925%2B00",
            "id": "1128",
            "issue": "978",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFelix+Hanke%27s+patch+seems+correct+-+just+a+small+bug+in+the+logic+detecting+whether+re-initialization%3C%2Fp%3E%0A%3Cp%3E%0Ais+required.%C2%A0+Fixed+in%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%3C%2Fp%3E%0A%0A%09%09%09%09%3Cp%3E%0A%09%09%09%09Changeset%3A%3C%2Fp%3E%0A%09%09%09%0A%09%09%09%0A%09%09%09%09%3Cp%3E%0A%09%09%09%096256+%28b1a79e8657c8%29+Patch+from+Felix+Hanke+for+crash+in+DFT%2BD+FD+phonon+calculation+%28CCPforge+%23971%29%3C%2Fp%3E%0A%09%09%09%0A%09%09%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-02-11+16%3A40%3A03.972719%2B00",
            "id": "1130",
            "issue": "971",
            "user": "krefson"
        },
        {
            "content": "Ficex+in+cell.F90+1.231",
            "created_on": "2009-04-06+08%3A00%3A15%2B01",
            "id": "91",
            "issue": "107",
            "user": "krefson"
        },
        {
            "content": "Fixed+for+phonons+by+cell.F90+1.227%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ACurrently+only+SCF%2C+OPTICS%2C+PHONON_FINE+and+PHONON+kpoint%3Cbr+%2F%3E%0D%0AMP+grids+are+re-initialised+on+continuation.+BS+and+ELNES%3Cbr+%2F%3E%0D%0Aare+not.++This+probably+does+not+cause+any+problem+as+these%3Cbr+%2F%3E%0D%0Aare+only+used+for+the+generation+of+the+initial+kpoint+list.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-04-06+08%3A12%3A06%2B01",
            "id": "92",
            "issue": "78",
            "user": "krefson"
        },
        {
            "content": "The+definition+of+the+additional+elements+of+the+%26amp%3Bquot%3Bcorners%26amp%3Bquot%3B+array+was+just+wrong+for+low-symmetry+systems.++It+assumed%3Cbr+%2F%3E%0D%0Aa+mirror+plane+perpendicular+to+cell+axes%21++Fixed.+Also%3Cbr+%2F%3E%0D%0Asimplified+default+rc+code+for+spherical+case.+",
            "created_on": "2009-04-13+17%3A11%3A51%2B01",
            "id": "93",
            "issue": "111",
            "user": "krefson"
        },
        {
            "content": "I+hit+upon+this+when+I+found+that+the+memory+usage+reported+at+the+end+of+the+run+was+%7E50%25+of+the+figure+I+got+from+monitoring+with+top.+vmpeak+agreed+with+top.+This+was+a+2.6.16+kernel.%3Cbr+%2F%3E%0D%0A+I+should+do+some+more+testing+-+%28probably+with+wannier90%2C+as+I+understand+exactly+where+all+the+memory+is+allocated+in+that+code%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+hadn%27t+realised+that+vmpeak+was+new.+For+that+reason+we+should+certainly+keep+with+the+present+code.",
            "created_on": "2009-04-13+17%3A41%3A58%2B01",
            "id": "95",
            "issue": "110",
            "user": "jry20"
        },
        {
            "content": "I+tested+a+couple+of+other+very+skew+cells.++Calcite%3Cbr+%2F%3E%0D%0Agas+a+discrepancy+of+about+40+microvolts.++The+second+test+case+which+I+have+attached%2C+NaHF2+has+a+slightly+larger+discrepancy+of+225+microvolts.",
            "created_on": "2009-04-27+17%3A15%3A54%2B01",
            "id": "96",
            "issue": "119",
            "user": "krefson"
        },
        {
            "content": "This+was+a+case+of+the+supercell+k-point+mapping+code+failing+under+unanticipated+circumstances%2Fincorrect+input.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+incorrect+input+in+question+was+generated+by+Materials+Studio%2C+which+in+version+4.3+generates+a+full+set+of+k-points+for+the+supercell+calculation+including+both+k+and+-k+thereby+failing+to+take+advantage+of+time-reversal+symmetry.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+code+now+handles+this+case%2C+and+using+the+doubled+k-point+set+for+the+supercell+now+%26amp%3Bquot%3Bmerely%26amp%3Bquot%3B+has+the+effect+of+rendering+the+calculation+inefficient+according+to+the+%26amp%3Bquot%3BYou+asked+for+it%2C+so+you+got+it%26amp%3Bquot%3B+principle.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-05-12+15%3A05%3A44%2B01",
            "id": "97",
            "issue": "120",
            "user": "krefson"
        },
        {
            "content": "Hmm.+It+looks+like+the+code+fix+in+secondd_symmetry+revision+1.97+was+not+sufficient+in+this+case.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+first+case+is+wrong+and+the+second+correct+-+the+TA+and+LA+modes+at+Gamma+should+belong+to+a+2+dimensional+irrep+plus+a+1-d+irrep%2C+and+not+a+3d+irrep.+The+acoustic+modes+are%3Cbr+%2F%3E%0D%0Aabsolutely+identical+in+frequency+and+the+eigenvectors+are+certainly+mixed.+No+wonder+the+answer+is+random.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+have+no+idea+what+criteria+could+be+used+to+tell+them+apart.++I+will+think+about+this%2C+but+it%27s+a+pretty+low+priority.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-05-12+16%3A32%3A58%2B01",
            "id": "98",
            "issue": "130",
            "user": "krefson"
        },
        {
            "content": "OK%2C+I+already+knew+about+this.+++It%27s+just+that+a+tolerance%3Cbr+%2F%3E%0D%0Ain+wave_read_unfold+needs+to+be+increased.+My+initial+expectation+of+a+well-normalised+wavefunction+is+not+being%3Cbr+%2F%3E%0D%0Amet+for+ultrasofts.+Should+we+worry+about+this%3F%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-05-12+16%3A36%3A26%2B01",
            "id": "99",
            "issue": "129",
            "user": "krefson"
        },
        {
            "content": "The+main+reason+this+came+is+that+regression+tests+fail+on%3Cbr+%2F%3E%0D%0Asuch+random+events.+I+am+happy+to+try+and+ignore+this+point%3Cbr+%2F%3E%0D%0Ain+the+comparisons%2C+if+it+is+clear+that+the+issue+is%3Cbr+%2F%3E%0D%0Arestricted+to+the+TA%2FLA+mode+at+Gamma.",
            "created_on": "2009-05-13+15%3A47%3A19%2B01",
            "id": "100",
            "issue": "130",
            "user": "vmilman"
        },
        {
            "content": "The+case+in+question+is+a+low%28ish%29-quality+regression+test.%3Cbr+%2F%3E%0D%0AI+have+no+feel+for+what+the+values+will+be+for+real-life+USP%3Cbr+%2F%3E%0D%0Acalculations%3B+it+sounds+like+prior+to+the+recent+change%3Cbr+%2F%3E%0D%0Athere+was+no+such+test+-+hence+if+you+think+the%3Cbr+%2F%3E%0D%0Anormalization+issue+is+important%2C+does+it+invalidate+prior%3Cbr+%2F%3E%0D%0Aresults%3F",
            "created_on": "2009-05-13+15%3A52%3A36%2B01",
            "id": "101",
            "issue": "129",
            "user": "vmilman"
        },
        {
            "content": "I%27ve+checked+in+an+update+with+a+relaxed+tolerance.++I+just+realised+that+the+test+is+not+strictly+necessary+-+it%27s+just+there+to+guard+against+an+zero+or+otherwise+unnormalisable+wavefunction+being+read+in.++But+that+would+actually+fail+in+the+preceding+wave_Snormalise+call.++I+have+left+in+some++",
            "created_on": "2009-05-13+16%3A44%3A43%2B01",
            "id": "102",
            "issue": "129",
            "user": "krefson"
        },
        {
            "content": "Minor+oops+in+call+corrected.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAdded+some+inline+checks+to+secondd_symmetry.",
            "created_on": "2009-05-18+14%3A11%3A57%2B01",
            "id": "104",
            "issue": "135",
            "user": "krefson"
        },
        {
            "content": "Matt+has+fixed+elf.F90+already+-+please+close+the+bug.",
            "created_on": "2009-05-21+12%3A54%3A29%2B01",
            "id": "106",
            "issue": "133",
            "user": "vmilman"
        },
        {
            "content": "+++I%27ve+done+some+more+investigation%2C+and+there+really+is+nothing+wrong+%3Cbr+%2F%3E%0D%0Ahere+-+it+is+just+a+fact+of+life+that+if+you+go+to+a+very+skew+cell+then+%3Cbr+%2F%3E%0D%0Ayou+need+to+put+more+effort+into+your+Ewald+sums.+At+least+with+the+new+%3Cbr+%2F%3E%0D%0Acode+you+have+a+devel-code+that+can+control+it%21+Anyway%2C+I%27ve+done+some+%3Cbr+%2F%3E%0D%0Ainvestigations+and+realised+a+misunderstanding+on+my+part+about+the+%3Cbr+%2F%3E%0D%0Ainterpretation+of+the+precision+parameter%2C+so+I%27ve+checked+in+a+revised+%3Cbr+%2F%3E%0D%0Aversion+that+sets+the+default+precision+to+1000+%28I+found+a+counter+%3Cbr+%2F%3E%0D%0Aexample+that+broke+with+OLD%3DT+as+increased+skew+and+with+%3Cbr+%2F%3E%0D%0AOLD%3DF%3APREC%3D100%29.+I%27ve+not+found+anything+yet+that+was+not+correct+with+%3Cbr+%2F%3E%0D%0APREC%3D1000%2C+and+so+I%27ve+set+it+at+that+and+we%27ll+tell+power+users+how+to+%3Cbr+%2F%3E%0D%0Aturn+it+down+if+necessary+%28MD+and+GEOM+on+big+systems+...%29",
            "created_on": "2009-05-22+14%3A13%3A34%2B01",
            "id": "107",
            "issue": "119",
            "user": "krefson"
        },
        {
            "content": "Fix+checked+in+to+CVS+-+now+get+a+strictly+empty+castep.castep+file.",
            "created_on": "2009-06-16+16%3A54%3A13%2B01",
            "id": "108",
            "issue": "95",
            "user": "mijp1"
        },
        {
            "content": "Done%2C+June+2009",
            "created_on": "2009-06-24+20%3A48%3A31%2B01",
            "id": "109",
            "issue": "104",
            "user": "krefson"
        },
        {
            "content": "There%27s+a+much+simpler+way+to+do+this.++Just+restrict+it+to%3Cbr+%2F%3E%0D%0Athe+case+where+the+fine+and+standard+kpoint+sets+are+identical%2C+and+then+the+frequencies+from+the+standard+calculation+can+be+copied+to+PHONON_FINE_FREQUENCIES.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ADone.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-06-26+09%3A36%3A20%2B01",
            "id": "110",
            "issue": "20",
            "user": "krefson"
        },
        {
            "content": "Done%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-06-26+10%3A31%3A42%2B01",
            "id": "111",
            "issue": "83",
            "user": "krefson"
        },
        {
            "content": "2%7C3.0%7C4.1%7C2.2%7C2%7C3%7C5%7C50U%3A60U%3A51%28qc%3D3%29+is+the+current+one%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A2%7C3%7C2.9%7C2.2%7C6.4%7C8.1%7C9%7C50U%3A60UU%3A51U2.5U2.5%28qc%3D3.5%29%5B%5D+is+the+%3Cbr+%2F%3E%0D%0Astring+Accelrys+distributes+%28and+it+seems+to+work%29",
            "created_on": "2009-06-26+15%3A38%3A26%2B01",
            "id": "112",
            "issue": "139",
            "user": "vmilman"
        },
        {
            "content": "Well+spotted%21+That+was+an+oversight+from+9+years+ago+that+I%27d+never+noticed+and+nobody+ever+mentioned+before+either.%3Cbr+%2F%3E%0D%0ANow+fixed.",
            "created_on": "2009-08-10+13%3A30%3A15%2B01",
            "id": "159",
            "issue": "105",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThese+should+be+changed+at+the+same+time+as+the+Sternheimer+solver+is+moved+into+Hamiltonian.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAs+this+is+multipurpose%2C+we+will+need+to+consider+whether+a+%22hamiltonian_%22+prefix+or+some+other+is+appropriate.%C2%A0+Or+perhaps+%22dfpt_%22%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-02-01+12%3A58%3A17.024058%2B00",
            "id": "1496",
            "issue": "1488",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2017-08-02+21%3A37%3A30.371196%2B01",
            "id": "1895",
            "issue": "1757",
            "user": "mijp1"
        },
        {
            "content": "Yes+-+the+special+case+can+go+for+magres+as+well.",
            "created_on": "2009-07-02+09%3A21%3A43%2B01",
            "id": "118",
            "issue": "116",
            "user": "jry20"
        },
        {
            "content": "Fixed+by+code+change.",
            "created_on": "2009-07-06+15%3A37%3A16%2B01",
            "id": "119",
            "issue": "148",
            "user": "sjc999"
        },
        {
            "content": "%3Cbr+%2F%3E%0D%0AMost+gamma+point+calculations+will+have+worked.+This+one+is+an+edge+case+I+hadn%27t+spotted.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+latest+checkin+should+have+cured+it",
            "created_on": "2009-07-07+14%3A06%3A16%2B01",
            "id": "120",
            "issue": "123",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AThere+is+no+easy+way+to+do+this+-+what+quantity+would+you+print%3F%C2%A0+The+Sternheimer+solver+does+NOT+compute+a+second-order+energy%2C+or+anything+related+to+any+of+the+input+tolerances.%C2%A0+The+best+that+could+be+done+is+to+calculate+the+residual+-+but+this+would+be+expensive+enough+to+slow+the+whole+calculation.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AClosed+as+infeasible.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-02-01+13%3A01%3A44.407662%2B00",
            "id": "1497",
            "issue": "1487",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThank+you+kindly+for+fixing+this+so+quickly%2C+I%27ll+hopefully+get+back+to+you+middle+of%C2%A0next+week.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-07-17+22%3A28%3A37.011402%2B01",
            "id": "1603",
            "issue": "1586",
            "user": "matthew_evans"
        },
        {
            "content": "The+latest+checkin+made+no+difference+to+huge+reported%3Cbr+%2F%3E%0D%0Ashieldings",
            "created_on": "2009-07-09+12%3A41%3A18%2B01",
            "id": "124",
            "issue": "124",
            "user": "vmilman"
        },
        {
            "content": "FeO+test+example+ends+with+all+kinds+of+error+messages%2C%3Cbr+%2F%3E%0D%0Adepending+on+OS+and+settings+%28see+attachments%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AError+in+zheev%3A+status+++++++++++7%3B+size+of+problem++++++++%3Cbr+%2F%3E%0D%0A+++8+in+hamiltonian_diagonalise_slice%3Cbr+%2F%3E%0D%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0D%0A+hamiltonian_diagonalise_slice%3Cbr+%2F%3E%0D%0A+magres_efg_calc_aug%3Cbr+%2F%3E%0D%0A+magres_efg_calculate%3Cbr+%2F%3E%0D%0A+magres_run%3Cbr+%2F%3E%0D%0A+castep%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIn+a+different+run+I+got+the+same+error+from+a+different+call%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AError+in+zheev%3A+status+++++++++++7%3B+size+of+problem++++++++%3Cbr+%2F%3E%0D%0A+++8+in+hamiltonian_diagonalise_slice%3Cbr+%2F%3E%0D%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0D%0A+hamiltonian_diagonalise_slice%3Cbr+%2F%3E%0D%0A+magres_nmr_current_crystal%3Cbr+%2F%3E%0D%0A+magres_nmr_calculate%3Cbr+%2F%3E%0D%0A+magres_run%3Cbr+%2F%3E%0D%0A+castep%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+serial+run+on+FeO+stopped+with+a+different+error+message%3Cbr+%2F%3E%0D%0A%28next+attachment%29%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AError%2C+norm_sq+is+practically+zero+in%3Cbr+%2F%3E%0D%0Awave_Snormalise_slice_b+Current+trace+stack%3A%3Cbr+%2F%3E%0D%0A+wave_Snormalise_slice_b%3Cbr+%2F%3E%0D%0A+wave_Sorthonormalise_slice%3Cbr+%2F%3E%0D%0A+hamiltonian_diagonalise_slice%3Cbr+%2F%3E%0D%0A+magres_efg_calc_aug%3Cbr+%2F%3E%0D%0A+magres_efg_calculate%3Cbr+%2F%3E%0D%0A+magres_run%3Cbr+%2F%3E%0D%0A+castep",
            "created_on": "2009-07-09+14%3A26%3A06%2B01",
            "id": "125",
            "issue": "124",
            "user": "vmilman"
        },
        {
            "content": "Fixed+by+code+change.+BIG+warning+is+now+printed+if+positions+are+OK+within+symmetry_tol+but+still+out+by+more+than+1e-10+au.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-07-14+15%3A24%3A27%2B01",
            "id": "141",
            "issue": "145",
            "user": "sjc999"
        },
        {
            "content": "Fixed+-+was+the+generic+restart+in+parallel+bug.%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2009-07-10+15%3A30%3A21%2B01",
            "id": "134",
            "issue": "126",
            "user": "mijp1"
        },
        {
            "content": "Today%27s+version+%286+Aug%29+runs+to+completion+but+gives+wrong%3Cbr+%2F%3E%0D%0Ashieldings+on+3+CPUs.+I+attached+the+latest+tar+file%3Cbr+%2F%3E%0D%0ANMR_var_occ.tgz+that+has+results+on+2%2C3%2C4+cores.",
            "created_on": "2009-08-06+10%3A40%3A26%2B01",
            "id": "155",
            "issue": "162",
            "user": "vmilman"
        },
        {
            "content": "This+has+been+fixed+by+Phil.",
            "created_on": "2009-08-06+10%3A45%3A55%2B01",
            "id": "156",
            "issue": "163",
            "user": "vmilman"
        },
        {
            "content": "Change+made+as+requested.+A+few+values+changed+including+a+couple+of+typos+in+old+set+corrected%2C+and+some+new+elements+added+along+with+comments+to+indicate+availability+of+other+active+isotopes.",
            "created_on": "2009-08-10+12%3A51%3A06%2B01",
            "id": "157",
            "issue": "171",
            "user": "mijp1"
        },
        {
            "content": "I%27m+not+convinced+by+this+request.+My+experience+is+more+like+the+opposite%21+I+had+correspondence+recently+with+a+student+from+Imperial+who+was+struggling+to+get+geom+to+work+reliably.+The+solution+was+to+turn+on+elec_force_tol+%28which+had+the+side-effect+of+effectively+increasing+elec_energy_tol%29+to+get+good+reliable+forces.+This+seems+especially+to+be+the+case+when+you+have+a+relatively+shallow+energy+surface+near+a+minimum.+In+this+case%2C+it+was+doing+a+defect+in+a+large+crystal.%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2009-08-10+12%3A54%3A27%2B01",
            "id": "158",
            "issue": "22",
            "user": "mijp1"
        },
        {
            "content": "OK%2C+rewritten+using+a+rather+cool+bitwise+radix+sort+to+speed+things+up.",
            "created_on": "2009-07-10+16%3A11%3A45%2B01",
            "id": "136",
            "issue": "156",
            "user": "krefson"
        },
        {
            "content": "Deleted+secondd_method+as+a+module+variable+and+retained+as+a+parameters+keyword+alias+for+phonon_method.",
            "created_on": "2009-07-13+13%3A30%3A16%2B01",
            "id": "137",
            "issue": "147",
            "user": "mijp1"
        },
        {
            "content": "Updated+code+to+be+consistent+in+all+calls+to+cell_update_symmetry.+Cannot+reproduce+the+original+problem+-+a+totally+constrained+cell+IS+correctly+identified+as+a+fixed+cell+calculation.+Need+sample+input+files+if+this+is+found+to+not+be+the+case+in+future.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2009-07-13+13%3A32%3A06%2B01",
            "id": "138",
            "issue": "146",
            "user": "mijp1"
        },
        {
            "content": "Deleted+the+special+case+code.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWill+not+do+the+requested+change+for+THERMO_T_START+etc+-+the+problem+is+that+IO+does+not+class+temperature+as+a+different+physical+system+to+energy.+This++arose+years+ago+with+md_temperature+-+which+is+treated+in+just+the+same+way.+The+solution+is+always+to+put+the+%26amp%3Bquot%3BK%26amp%3Bquot%3B+unit+at+the+end.+Internally%2C+temperature+is+treated+as+an+energy+%28kB+factor%29+and+there+is+only+1+default+energy+unit+%28eV+not+Ha%29.+I+think+Chris%27s+stuff+is+case+insensitive%2C+so+a+%26amp%3Bquot%3BT%26amp%3Bquot%3B+unit+would+clash+with+a+%26amp%3Bquot%3Bt%26amp%3Bquot%3B+unit+which+has+a+quite+different+meaning%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWe+could+consider+changing+the+name+of+the+variable+but+I+don%27t+see+a+lot+of+gain+in+that+-+and+having+just+purged+secondd_method+%28having+seen+it+go+in+%26amp%3Bamp%3B+out+of+favour+wrt+phonon_method%29+-+I%27m+not+keen+to+have+more+aliases+variables+in+the+parameters%21%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-07-13+13%3A36%3A39%2B01",
            "id": "139",
            "issue": "138",
            "user": "mijp1"
        },
        {
            "content": "Done.",
            "created_on": "2009-07-13+13%3A39%3A23%2B01",
            "id": "140",
            "issue": "116",
            "user": "mijp1"
        },
        {
            "content": "Fixed+missing+task+in+param+file+restart+behaviour%3Cbr+%2F%3E%0D%0AFixed+FBSC+default+behaviour+on+restart+with+task%3DMD+or+geom%3Cbr+%2F%3E%0D%0AExtended+logic+for+elec_energy_tol+in+phonon-group+restart",
            "created_on": "2009-07-14+16%3A12%3A19%2B01",
            "id": "142",
            "issue": "14",
            "user": "mijp1"
        },
        {
            "content": "Fixed+in+latest+version+%281.219%29+of+parameters.F90",
            "created_on": "2009-07-14+16%3A13%3A10%2B01",
            "id": "143",
            "issue": "84",
            "user": "mijp1"
        },
        {
            "content": "Done.",
            "created_on": "2009-07-14+16%3A21%3A01%2B01",
            "id": "144",
            "issue": "79",
            "user": "mijp1"
        },
        {
            "content": "2+new+keywords+added+as+requested%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0APHONON_FORCE_CONSTANT_ELLIPSOID+now+alias+for+PHONON_FORCE_CONSTANT_CUT_SCALE%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWarning+message+about+interaction+of+phonon+parameters+%26amp%3Bamp%3B+methods+should+go+into+phonon.F90+not+parameters.F90%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-07-15+16%3A04%3A45%2B01",
            "id": "145",
            "issue": "137",
            "user": "mijp1"
        },
        {
            "content": "Easily+fixed.++Current+xc.F90+should+address+this.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-07-22+08%3A48%3A35%2B01",
            "id": "147",
            "issue": "159",
            "user": "krefson"
        },
        {
            "content": "This+could+well+be+a+parsing+problem.+However%2C+I+never+quite+intended%3Cbr+%2F%3E%0D%0Ato+use+configuration+strings+that+long.+You+only+need+to+specify+those%3Cbr+%2F%3E%0D%0Alevels+that+are+different+to+the+default.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-08-31+11%3A50%3A07%2B01",
            "id": "172",
            "issue": "183",
            "user": "cjp10"
        },
        {
            "content": "Logic+of+nlxc_initialise+-+not+a+bug%2C+but+a+request+for+the+removal+of+one+call+to+density_copy+if+XC+functional+is+local.+This+is+so+minor+it%27s+at+the+bottom+of+my+list+because+%28a%29+it+might+remove+about+1+millisecond+of+run+time+and+%28b%29+it+will+require+nlxc+having+a+case+statement+with+the+ever-increasing+list+of+functionals+to+decide+if+it%27s+local+or+not%2C+and+then+when+new+functionals+are+added+it%27s+bound+to+be+forgotten+about%2C+ie.+such+a+change+will+almost+guarantee+a+future+bug.",
            "created_on": "2009-07-23+11%3A55%3A17%2B01",
            "id": "149",
            "issue": "140",
            "user": "sjc999"
        },
        {
            "content": "I%27ve+checked+in+a+revision+to+castep.f90+which+checks+within+check_elec_ground_state+to+see+if+electronic_minimisation+is+called%2C+and+if+so%2C+unconditionally+writes+out+a+.check+file.%3Cbr+%2F%3E%0D%0AThis+may+mean+that+under+certain+circumstances+%28eg+singlepoint+calc+with+no+additional+calcs+such+as+elf%29+that+there+are+two+back-to-back+calls+to+model_write%2C+but+this+is+a+minor+time+penalty%2C+and+the+old+file+is+backed+up+for+safety+before+the+second+call%2C+and+is+deleted+after+the+second+call+as+that+is+the+last+call.%3Cbr+%2F%3E%0D%0AHence+some+users+may+notice+a+slight+time+penalty%2C+and+a+temporary+blip+in+storage+as+have+2+check+files+for+a+brief+moment.+However%2C+should+fix+this+and+also+the+population+analysis+bug+report.",
            "created_on": "2009-07-23+14%3A51%3A28%2B01",
            "id": "150",
            "issue": "58",
            "user": "mijp1"
        },
        {
            "content": "I%27ve+checked+in+a+revision+to+castep.f90+which+checks+within+check_elec_ground_state+to+see+if+electronic_minimisation+is+called%2C+and+if+so%2C+unconditionally+writes+out+a+.check+file.%3Cbr+%2F%3E%0D%0AThis+may+mean+that+under+certain+circumstances+%28eg+singlepoint+calc+with+no+additional+calcs+such+as+elf%29+that+there+are+two+back-to-back+calls+to+model_write%2C+but+this+is+a+minor+time+penalty%2C+and+the+old+file+is+backed+up+for+safety+before+the+second+call%2C+and+is+deleted+after+the+second+call+as+that+is+the+last+call.%3Cbr+%2F%3E%0D%0AHence+some+users+may+notice+a+slight+time+penalty%2C+and+a+temporary+blip+in+storage+as+have+2+check+files+for+a+brief+moment.+However%2C+should+fix+this+bug.",
            "created_on": "2009-07-23+14%3A53%3A03%2B01",
            "id": "151",
            "issue": "127",
            "user": "mijp1"
        },
        {
            "content": "OK%2C+Shall+we+close+the+issue+then%3F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-08-10+14%3A37%3A40%2B01",
            "id": "160",
            "issue": "22",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AWorks+fine+for+me+in+both+7.0.2+and+head+%28r7274%29%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-03-04+16%3A11%3A37.191803%2B00",
            "id": "1138",
            "issue": "988",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThanks+Keith%3B+could+you+tell+which+libraries+you+used%3F+If+it%27s+not+due+to+a+code+change+than+perhaps+an+MKL+change+which+we+applied+is+to+blame.%3C%2Fp%3E%0A",
            "created_on": "2014-03-04+17%3A14%3A32.209188%2B00",
            "id": "1139",
            "issue": "988",
            "user": "vmilman"
        },
        {
            "content": "Victor.+This+looks+like+a+bug+in+the+Vanderbilt-%26amp%3Bgt%3B+USP%3Cbr+%2F%3E%0D%0Aconversion+code+which+I+received+from+you+and+distributed%3Cbr+%2F%3E%0D%0Awith+the+UKCP+distribution.++Do+you+know+who+looks+after+this%3F",
            "created_on": "2009-08-20+11%3A08%3A49%2B01",
            "id": "163",
            "issue": "179",
            "user": "krefson"
        },
        {
            "content": "I+did+not+even+know+this+code+was+being+distributed.+Chris%3Cbr+%2F%3E%0D%0Awas+the+main+author+and+probably+the+best+person+for+bug%3Cbr+%2F%3E%0D%0Afixing%2C+I+played+with+it+a+little+-+we+are+talking+some+10%3Cbr+%2F%3E%0D%0Ayears+ago.+It+is+not+really+used+anymore+-+shouldn%27t+we%3Cbr+%2F%3E%0D%0Aencourage+the+use+of+OTFG+instead%3F+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+wonder+how+meaningful+is+any+potential+that+produces+huge%3Cbr+%2F%3E%0D%0Anumbers...",
            "created_on": "2009-08-20+11%3A17%3A30%2B01",
            "id": "164",
            "issue": "179",
            "user": "vmilman"
        },
        {
            "content": "Chris+-+since+you+wrote+the+code...%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAre+such+large+q+function+parameters+that+they+overfill+the+field+meaningful%3F++Is+this+worth+fixing.",
            "created_on": "2009-08-20+11%3A31%3A32%2B01",
            "id": "165",
            "issue": "179",
            "user": "krefson"
        },
        {
            "content": "Such+a+long+time+ago+...+I+suggest+using+OTFG.+It+should+be+possible+to+make+very+small+core+radius+potentials.",
            "created_on": "2009-08-20+11%3A47%3A04%2B01",
            "id": "166",
            "issue": "179",
            "user": "cjp10"
        },
        {
            "content": "This+was+generated+by+the+new+call+to+secondd_symmetrise_dmat+from+phonon_enforce_dmat_sumrule%2C+called+from+efield+which%3Cbr+%2F%3E%0D%0Adoes+not+usually+renormalise+co-ordinates.++secondd_compute_atom_phases+now+checks+for+q%2F%3D+0+before+issuing+warning.+",
            "created_on": "2009-08-23+07%3A44%3A28%2B01",
            "id": "167",
            "issue": "180",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAttached%C2%A0B3LYP_detailed.tgz+that+uses+the+same+random+seed+and+compares+pre-+and+post-codefest+results+with+iprint%3D3.%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-07-21+15%3A55%3A37.571217%2B01",
            "id": "1604",
            "issue": "1565",
            "user": "vmilman"
        },
        {
            "content": "25%2FAug%2F2009+aperlov%3A%3Cbr+%2F%3E%0D%0AIt+looks+it+is+a+compiler+problem%2C+it+does+not+like+too+much+allocation+of+zero+length+arrays.+In+the+current+test+it+is%3Cbr+%2F%3E%0D%0A++++allocate%28beta_phi%28num_projectors_on_node%2Cslice%25nbands%29%2Cstat%3Dierr%29%3Cbr+%2F%3E%0D%0Ain+nlpot_apply_precon_slice+%28on+the+third+node+num_projectors_on_node+is+0%29%3Cbr+%2F%3E%0D%0AI%27ve+changed+it+to+%3Cbr+%2F%3E%0D%0A++++allocate%28beta_phi%28max%281%2Cnum_projectors_on_node%29%2Cslice%25nbands%29%2Cstat%3Dierr%29%3Cbr+%2F%3E%0D%0Aand+everything+runs+fine+again....%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aand+everything+",
            "created_on": "2009-08-25+14%3A31%3A11%2B01",
            "id": "169",
            "issue": "182",
            "user": "aperlov"
        },
        {
            "content": "PS%3A+there+are+numerous+%26amp%3Bquot%3Ballocate%26amp%3Bquot%3B+calls+in+nlpot+and+wave%3Cbr+%2F%3E%0D%0Awhere+num_projectors_on_node+is+used+as+a+dimension.+Should%3Cbr+%2F%3E%0D%0Awe+go+through+them+all%2C+or+is+there+a+more+elegant+solution%3F",
            "created_on": "2009-08-25+14%3A35%3A27%2B01",
            "id": "170",
            "issue": "182",
            "user": "vmilman"
        },
        {
            "content": "It+does+appear+that+the+test+was+performed+in+a+configuration%3Cbr+%2F%3E%0D%0Awithout+any+f+electron+despite+the+explicit+request.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AChris%2C+can+you+comment+please.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-08-31+11%3A27%3A09%2B01",
            "id": "171",
            "issue": "183",
            "user": "krefson"
        },
        {
            "content": "Change+made+and+checked+in%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-09-03+09%3A31%3A32%2B01",
            "id": "173",
            "issue": "169",
            "user": "krefson"
        },
        {
            "content": "Matt+-+this+sounds+like+an+issue+for+your+code.",
            "created_on": "2009-09-03+09%3A33%3A41%2B01",
            "id": "174",
            "issue": "182",
            "user": "krefson"
        },
        {
            "content": "Phil+tells+me+he+was+working+on+a+very+long-standing+problem+with+paging+and+wave-reassign+%28used+in+FSBC%29+and+has+fixed+it.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI%27ll+assign+this+one+to+him%2C+but+perhaps+Victor+can+repeat+the+test+and+close+this+bug+if+it+is+really+fixed.",
            "created_on": "2009-09-03+09%3A36%3A03%2B01",
            "id": "175",
            "issue": "172",
            "user": "krefson"
        },
        {
            "content": "I+can+confirm+%3A+it+is+fixed",
            "created_on": "2009-09-03+09%3A37%3A45%2B01",
            "id": "176",
            "issue": "172",
            "user": "aperlov"
        },
        {
            "content": "I+retract+that+last+comment+-+misleading+title.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+again+sounds+like+an+issue+that+Phil+told+me+he+had+fixed.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASasha+-+there+is+unlikely+to+be+a+%26amp%3Bquot%3Bcompiler+problem%26amp%3Bquot%3B+with+zero+length+arrays.+Intel+Fortran+supports+these+and+I+have+never+seen+a+problem.++However+there+may+be+an+MPI+problem%3Cbr+%2F%3E%0D%0Awith+a+collective+of+length+zero.",
            "created_on": "2009-09-03+09%3A47%3A36%2B01",
            "id": "177",
            "issue": "182",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change.+Checked+for+nlxc+initialisation+in+BS+calc.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-09-09+13%3A05%3A38%2B01",
            "id": "178",
            "issue": "57",
            "user": "sjc999"
        },
        {
            "content": "Fixed+by+code+change+%28nlxc_basis.F90%29.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-09-09+13%3A07%3A32%2B01",
            "id": "179",
            "issue": "55",
            "user": "sjc999"
        },
        {
            "content": "Fixed+by+code+change+in+cell.F90.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-09-09+15%3A14%3A50%2B01",
            "id": "180",
            "issue": "85",
            "user": "sjc999"
        },
        {
            "content": "Fix+in+phonon.F90+has+been+sent+to+Keith+%28as+he+owns+that+module%29+-+nlxc_initialise+was+not+getting+called.+The+fix+passes+Victor%27s+test+and+a+couple+of+other+simple+FD+calculations+with+PBE0+and+B3LYP%2C+etc+%28tested+in+parallel+on+kpt%2C+gv+and+mixed+distributions%29.+There%27s+possibly+an+issue+with+sX+FD+calculations+because+phonon.F90+never+passes+the+density+to+obtain+the+screening+length+and+so+some+forms+of+sX+screening+%28almost+never+used%21%29+might+be+inaccurate.+I%27ll+add+a+fix+in+nlxc.F90+to+sort+that+one+out+%28should+possibly+be+another+bug+report%29.",
            "created_on": "2009-09-09+16%3A00%3A12%2B01",
            "id": "181",
            "issue": "125",
            "user": "sjc999"
        },
        {
            "content": "Seems+to+have+been+a+compiler+bug+%28mis-optimisation%29.+The+BLAS+calls+seem+to+be+being+moved+outside+the+conditional+if%28num_projectors_on_node%26amp%3Bgt%3B0%29.+This+causes+problems+because+beta_phi%281%2C1%29+is+passed+to+the+BLAS+calls%2C+which+only+exists+if+there+are+any+projectors+on+the+local+node.+Passing+beta_phi+instead+seems+to+fix+the+problem.",
            "created_on": "2009-09-10+14%3A20%3A07%2B01",
            "id": "182",
            "issue": "182",
            "user": "pjh503"
        },
        {
            "content": "The+new+Hamiltonian-based+minimiser+can+now+be+used+with+real-space+pseudopotentials.+This+will+become+the+default+in+the+next+release+after+5.0.",
            "created_on": "2009-09-10+14%3A22%3A58%2B01",
            "id": "184",
            "issue": "128",
            "user": "pjh503"
        },
        {
            "content": "This+is+now+definitely+confirmed.++A+32-bit+RNG+is+not%3Cbr+%2F%3E%0D%0Anearly+good+enough%2C+but+the+64-bit+LFS+RNG+does+fix%3Cbr+%2F%3E%0D%0Athe+%26amp%3Bquot%3Bclash%26amp%3Bquot%3B+problem.",
            "created_on": "2009-09-14+15%3A32%3A25%2B01",
            "id": "185",
            "issue": "184",
            "user": "krefson"
        },
        {
            "content": "As+agreed+by+email%2C+I+will+change+the+behaviour+to+a+warning%3Cbr+%2F%3E%0D%0Aif+GEOM_FORCE_TOL+%26amp%3Blt%3B+%7CF%7C_max+%26amp%3Blt%3B%3D+2%2AGEOM_FORCE_TOL+and+an+abort%3Cbr+%2F%3E%0D%0Aonly+if++%7CF%7C_max+%26amp%3Bgt%3B+2%2AGEOM_FORCE_TOL.",
            "created_on": "2009-09-14+15%3A34%3A22%2B01",
            "id": "186",
            "issue": "185",
            "user": "krefson"
        },
        {
            "content": "Implemented+-+along+with+a+slight+rewording+and+tidying+of+error+messages.",
            "created_on": "2009-09-16+09%3A40%3A04%2B01",
            "id": "187",
            "issue": "185",
            "user": "krefson"
        },
        {
            "content": "Quick+question+-+if+you+expect+user+to+set+CASTEP_TMPDIR%3Cbr+%2F%3E%0D%0Abefore+the+run%2C+why+not+to+set+simply+TMPDIR+and+do+no%3Cbr+%2F%3E%0D%0Achanges+the+code%3F",
            "created_on": "2009-09-18+08%3A19%3A33%2B01",
            "id": "188",
            "issue": "187",
            "user": "vmilman"
        },
        {
            "content": "Victor%2C%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AMy+point+is+that+TMPDIR+%2Adoes+not+work%2A+on+some+platforms+and+with+some+compilers.++And+even+where+it+does+the%3Cbr+%2F%3E%0D%0Abehaviour+is+different+if+it+is+%2Anot%2A+set.+%28in+some+cases+the+default+is+%2Ftmp%2C+in+others+the+current+directory.%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AFinally+some+brain-damaged+batch+systems+use+TMPDIR+for+job+queue+files+and+will+break+if+you+try+to+change+it.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+point+of+this+item+is+to+implement+consistent+behaviour.",
            "created_on": "2009-09-18+08%3A55%3A06%2B01",
            "id": "189",
            "issue": "187",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-09-23+21%3A25%3A59%2B01",
            "id": "190",
            "issue": "125",
            "user": "sjc999"
        },
        {
            "content": "Patch+to+parameters.F90+supplied+to+Matt+and+checked+in",
            "created_on": "2009-09-30+16%3A22%3A13%2B01",
            "id": "191",
            "issue": "188",
            "user": "krefson"
        },
        {
            "content": "Phil%2C%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAs+with+another+bug%2C+the+immediate+locus+of+the+abort+is%3Cbr+%2F%3E%0D%0Ain+wave.++Please+reassign+if+you+think+the+pseudopotential%3Cbr+%2F%3E%0D%0Ais+just+bad.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AK.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-02-23+11%3A58%3A37%2B00",
            "id": "221",
            "issue": "233",
            "user": "krefson"
        },
        {
            "content": "or+perhaps+Grafenstein+and+Cremer%2C+J+Chem+Phys+130%2C+124105+%282009%29",
            "created_on": "2010-03-03+13%3A11%3A22%2B00",
            "id": "223",
            "issue": "236",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThis+is+a+materials+studio+issue+not+a+CASTEP+one.+If+Materials+Studio+set+sensibly+tight+values+of+these+tolerances+in+the+first+place%2C+there+would+be+no+messages.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+13%3A11%3A49.534217%2B01",
            "id": "1808",
            "issue": "1683",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+libraries+and+build+configurations+are+all+reported+in+the+.castep+files+which+I+attached%3A%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0Compiled+for+linux_x86_64_ifort14+on+Tue%2C+04+Mar+2014+16%3A02%3A57+%2B0000%3Cbr+%2F%3E%0A%C2%A0from+code+version+dc0a915a2593%C2%A0+Mon%2C+03+Mar+2014+18%3A22%3A54+%2B0000%3Cbr+%2F%3E%0A%C2%A0Compiler%3A+Intel+Fortran+14.0.0.080%3B+Optimisation%3A+intermediate%3Cbr+%2F%3E%0A%C2%A0MATHLIBS%3A+Intel+MKL%2811.1.0%29+%28LAPACK+version+3.4.1%29%3Cbr+%2F%3E%0A%C2%A0FFT+Lib+%3A+default%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0Compiled+for+linux_x86_64_ifort14+on+Sun%2C+23+Feb+2014+13%3A26%3A58+%2B0000%3Cbr+%2F%3E%0A%C2%A0from+code+version+99ee0f204fc0+Castep70_branch+Sat%2C+22+Feb+2014+10%3A21%3A45+%2B0000%3Cbr+%2F%3E%0A%C2%A0Compiler%3A+Intel+Fortran+14.0.0.080%3B+Optimisation%3A+fast%3Cbr+%2F%3E%0A%C2%A0MATHLIBS%3A+Intel+MKL%2811.1.0%29+%28LAPACK+version+3.4.1%29%3Cbr+%2F%3E%0A%C2%A0FFT+Lib+%3A+default%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ANote+that+Ifort+14+requires+a+lower+optimisation+level+of+-O2+for+ion_atom.f90.%C2%A0+But+the+only+effect+of+not+doing+this+is+to+miscompute+the+identity+difference.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-03-06+17%3A55%3A18.589354%2B00",
            "id": "1140",
            "issue": "988",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+writing+to+Fortran+default+output+and+calling+comms_abort.",
            "created_on": "2009-10-10+09%3A29%3A29%2B01",
            "id": "194",
            "issue": "192",
            "user": "krefson"
        },
        {
            "content": "Fix+checked+in+as+cell.F90+1.245",
            "created_on": "2009-10-14+07%3A53%3A08%2B01",
            "id": "195",
            "issue": "168",
            "user": "krefson"
        },
        {
            "content": "I+agree+that+cif+output+would+be+good.++There+are+several%3Cbr+%2F%3E%0D%0Apossible+degrees+of+sophistication%3B+an+external+postprocessing+tool+or+even+a+built-in+routine.++Ideally+it+would+need+to+handle+symmetry+as+well+though%2C+so+it+would%3Cbr+%2F%3E%0D%0Anot+be+completely+straightforward+to+enable+full+functionality.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAlso+the+iUCr+cif+libraries+can+probably+not+be+used+because+of+licensing+restrictions.+",
            "created_on": "2009-11-03+15%3A59%3A22%2B00",
            "id": "196",
            "issue": "199",
            "user": "krefson"
        },
        {
            "content": "I+don%27t+really+understand+what+this+would+achieve.++Perhaps+if+you+gave+an+example+of+a+few+circumstances+it+might+be+useful%2C+it+would+make+more+sense.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-11-03+16%3A01%3A21%2B00",
            "id": "197",
            "issue": "200",
            "user": "krefson"
        },
        {
            "content": "CASTEP+%28server%29+does+write+both+castep_bin+and+check%2C%3Cbr+%2F%3E%0D%0Aso+both+are+available.++It+is+up+to+the+MS+server+gateway%3Cbr+%2F%3E%0D%0Awhether+to+fetch+both+or+either.++Unless+I+have+misunderstood+there+is+nothing+to+be+done+here.++Should+I+close+this+report%3F",
            "created_on": "2009-11-03+16%3A03%3A31%2B00",
            "id": "198",
            "issue": "201",
            "user": "krefson"
        },
        {
            "content": "The+request+refers+to+back-up+files%3B+.check+is+saved+at%3Cbr+%2F%3E%0D%0Aregular+intrvals%2C+while+.castep_bin+is+not.",
            "created_on": "2009-11-03+16%3A13%3A08%2B00",
            "id": "199",
            "issue": "201",
            "user": "vmilman"
        },
        {
            "content": "Server+writes+castep_bin+only+at+the+very+end+after+the+job+is+done.%3Cbr+%2F%3E%0D%0AIf+you+run+e.g.+GO+check+file+is+written+at+least+after+each+step.%3Cbr+%2F%3E%0D%0AIf+the+job+was+killed+or+disk+got+full+or+job+was+stopped+from+the+interface+there+is+no+castep_bin+file+is+available.%3Cbr+%2F%3E%0D%0AThus+to+restart+calculations+one+needs+to+bring+back+and+send+to+the+server+a+whole+check+file....",
            "created_on": "2009-11-03+16%3A37%3A44%2B00",
            "id": "200",
            "issue": "201",
            "user": "aperlov"
        },
        {
            "content": "I+cannot+say+it+is+really+absolutely+necessary+but+can+save+some+time+on+editing+param+file.+And+saving+time+on+recalculating+something.++Especially+when+you+work+with+lda%2Bu.%3Cbr+%2F%3E%0D%0AI%27ve+started+some+calculations%2C+they+did+not+converge.+The+simplest+%28as+to+me%29+way+is+to+start+them+again+from+the+point+you+stopped+-+if+it+was+in+a+proper+direction.+After+I+do+it+I+see+it+starts+from+scratch+-+a+bit+disappointing+-+I+just+lost++check+file...+Or+I+want+to+change+values+of+U+and+continue...+Or+even+number+of+k-points+or+cutoff+but+I+am+happy+more+or+less+with+charge+densities.+In+all+the+scenarios+I+have+to+care+about+proper+keyword+for+continuation....",
            "created_on": "2009-11-03+16%3A43%3A35%2B00",
            "id": "201",
            "issue": "200",
            "user": "aperlov"
        },
        {
            "content": "Phil%2C+I+have+assigned+this+initially+to+you+as+it+looks+like%3Cbr+%2F%3E%0D%0Aa+wave+issue.++But+feel+free+to+pass+it+on+if+not.%3Cbr+%2F%3E%0D%0AKeith%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-02-23+11%3A56%3A08%2B00",
            "id": "220",
            "issue": "231",
            "user": "krefson"
        },
        {
            "content": "This+looks+very+like+the+bug+in+Intel%27s+MKL%2C+%28not+CASTEP%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASee%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Ahttp%3A%2F%2Fsoftware.intel.com%2Fen-us%2Farticles%2Fdgemm-and-sgemm-accuracy%2F%2F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+message%2C+from+my+release+notes+is%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++%2A%2A+WARNING+-+BUGS+IN+RECENT+MKL+VERSIONS+%2A%2A%3Cbr+%2F%3E%0D%0A++++++++N.B.+Do+not+use+versions+%26amp%3Bquot%3B10.1+Update+n%26amp%3Bquot%3B+%28n%3D1..3%29+or+10.2.%3Cbr+%2F%3E%0D%0A++++++++They+contain+bugs+which+cause+bad+results%2C+convergence+failure%3Cbr+%2F%3E%0D%0A++++++++or+error+exit.++See+%26amp%3Bquot%3BMKL%26amp%3Bquot%3B+notes+below.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-12-04+16%3A47%3A55%2B00",
            "id": "213",
            "issue": "218",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+am+afraid+I+still+get+the+same+error+with+the+code+version+7100%3C%2Fp%3E%0A",
            "created_on": "2016-07-26+14%3A35%3A59.616253%2B01",
            "id": "1605",
            "issue": "1507",
            "user": "vmilman"
        },
        {
            "content": "This+is+fixed+by+the+updates+to+comms.mpi.F90+in+the%3Cbr+%2F%3E%0D%0ACastep50_UKCP_branch+branch+of+CVS.+%28Specifically+1.39.2.1%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASince+I+noticed+and+fixed+several+bugs+in+this+module+in+the+course+of+those+upgrades%2C+I%27m+not+surprised+that+didn%27t+work.+This+was+probably+a+longstanding+issue%2C+as+this+code+had+not+been+touched+for+some+time.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-12-16+16%3A18%3A15%2B00",
            "id": "216",
            "issue": "223",
            "user": "krefson"
        },
        {
            "content": "Attached+the+files",
            "created_on": "2009-12-17+16%3A18%3A48%2B00",
            "id": "217",
            "issue": "224",
            "user": "vmilman"
        },
        {
            "content": "It+fails+also+with+WC+and+PBESOL%2C+only+seems+to+work+with+PBE+%28and+PBE+is+the+one+we+test+at+Accelrys+as+part+of+the+regression+suite%21%29",
            "created_on": "2009-12-18+13%3A14%3A30%2B00",
            "id": "218",
            "issue": "224",
            "user": "vmilman"
        },
        {
            "content": "Chris%2C+do+you+have+a+better+setting+for+Rb%3F",
            "created_on": "2010-01-26+11%3A59%3A49%2B00",
            "id": "219",
            "issue": "224",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAh+-+this+is+a+different+issue+-+restarting+with+a+different+geom_method.+Fixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2016-07-26+17%3A21%3A24.338447%2B01",
            "id": "1606",
            "issue": "1507",
            "user": "mijp1"
        },
        {
            "content": "%0AGentlemen%0AI+am+happy+to+confirm+that+there+is+no+problem+with+this+input+%3A+it+runs+fine+with+the+released+version+of+CASTEP.+Our+customers+accidentally+used+beta+version+of+CASTEP+....%0AThanks+for+cooperation%2C%0ASasha%0A",
            "created_on": "2014-03-06+17%3A55%3A56.250643%2B00",
            "id": "1141",
            "issue": "987",
            "user": "krefson"
        },
        {
            "content": "Thanks+Keith.+I+have+checked+in+an+updated+version+of+pot+%28v1.74%29+that+fixes+this+and+also+implements+the+explicit+allocate+of+%25real_std_pot+or+%25std_pot+as+needed.+This+is+mandated+by+the+spec+and+so+is+not+optional%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2010-03-15+10%3A18%3A34%2B00",
            "id": "228",
            "issue": "239",
            "user": "mijp1"
        },
        {
            "content": "Fixed.",
            "created_on": "2010-03-19+16%3A35%3A51%2B00",
            "id": "231",
            "issue": "189",
            "user": "krefson"
        },
        {
            "content": "This+is+a+support+request%2C+not+a+feature+request.%3Cbr+%2F%3E%0D%0AThe+mailing+list+should+deal+with+this+kind+of+enquiry.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-03-20+12%3A00%3A46%2B00",
            "id": "233",
            "issue": "144",
            "user": "krefson"
        },
        {
            "content": "I+attached+another+set+of+files+with+the+same+failure%2C+now+from+a+customer+",
            "created_on": "2010-04-14+17%3A55%3A21%2B01",
            "id": "242",
            "issue": "254",
            "user": "vmilman"
        },
        {
            "content": "here+are+PP+files+for+BTO",
            "created_on": "2010-04-15+16%3A15%3A13%2B01",
            "id": "243",
            "issue": "254",
            "user": "vmilman"
        },
        {
            "content": "last+time+it+failed+was+in+the+build+of+March+5th%2C+after%3Cbr+%2F%3E%0D%0Athat+total+energies%2Fforces+came+back+to+normal...+",
            "created_on": "2010-06-29+10%3A52%3A53%2B01",
            "id": "309",
            "issue": "207",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AWorks+fine+with+ifort14%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-03-25+17%3A13%3A00.952459%2B00",
            "id": "1144",
            "issue": "988",
            "user": "vmilman"
        },
        {
            "content": "Dear+Keith%2C+have+you+tried+the+original+example+%28cell7_8%29%3F+The+issue+could+be+down+to+compiler%2FOS%2Fetc.%2C+but+let%27s+first+try+all+the+examples+that+failed+for+us.",
            "created_on": "2010-04-29+08%3A38%3A44%2B01",
            "id": "256",
            "issue": "254",
            "user": "vmilman"
        },
        {
            "content": "Here+is+another+example+from+Japan+%28MS50.zip%29.+Apparently+the+same+worked+fine+in+MS4.4",
            "created_on": "2010-05-21+08%3A08%3A46%2B01",
            "id": "272",
            "issue": "254",
            "user": "vmilman"
        },
        {
            "content": "Done.%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2010-05-21+12%3A05%3A32%2B01",
            "id": "273",
            "issue": "226",
            "user": "mijp1"
        },
        {
            "content": "Done%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2010-05-21+12%3A45%3A10%2B01",
            "id": "274",
            "issue": "262",
            "user": "mijp1"
        },
        {
            "content": "CIF+file+is+now+written+conditional+on+new+parameter%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWRITE_CIF_STRUCTURE%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+is+also+the+possibility+of+writing+a+new+.cell+file+by%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWRITE_CELL_STRUCTURE%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-05-22+07%3A36%3A52%2B01",
            "id": "275",
            "issue": "199",
            "user": "krefson"
        },
        {
            "content": "This+is+still+a+problem+in+5.1.++The+inconsistency+between%3Cbr+%2F%3E%0D%0A%26amp%3Bquot%3Bspin%3D0%26amp%3Bquot%3B+in+.param+and+%26amp%3Bquot%3BSPIN%3D2%26amp%3Bquot%3B+is+not+detected+and+the%3Cbr+%2F%3E%0D%0Aspin+initialization+is+ignored.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+is+a+bit+awkward+as+an+initial+consistency+check+between%3Cbr+%2F%3E%0D%0Acsll+and+param+falls+between+two+stools.++But+%26amp%3Bquot%3Bdensity_initialize%26amp%3Bquot%3B+could+at+least+flag+it+up+with+a+warning.",
            "created_on": "2010-05-24+12%3A41%3A55%2B01",
            "id": "276",
            "issue": "202",
            "user": "krefson"
        },
        {
            "content": "I+agree.++better+check+with+Stewart+as+it%27s+his+module.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-07-01+17%3A18%3A19%2B01",
            "id": "314",
            "issue": "94",
            "user": "krefson"
        },
        {
            "content": "Done.%3Cbr+%2F%3E%0D%0A+++Matt",
            "created_on": "2010-06-30+11%3A40%3A55%2B01",
            "id": "311",
            "issue": "157",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed+for+8.0%3C%2Fp%3E%0A",
            "created_on": "2014-05-03+17%3A42%3A46.493561%2B01",
            "id": "1153",
            "issue": "1004",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+Matt+in+hirshfeld.F90%2C+rev.+1.11",
            "created_on": "2010-06-30+08%3A21%3A50%2B01",
            "id": "310",
            "issue": "304",
            "user": "vmilman"
        },
        {
            "content": "Fixed+by+code+change+made+by+Sasha.+The+problem+was+to+do+with+basis_initialise+calls+and+FBSC.%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2010-06-04+11%3A01%3A55%2B01",
            "id": "289",
            "issue": "263",
            "user": "mijp1"
        },
        {
            "content": "There%27s+one+further+uninitialized+variable+in+electronic%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIn+%26amp%3Bquot%3Belectronic_minimisation%26amp%3Bquot%3B+the+variable+%26amp%3Bquot%3Bresidual_norm%26amp%3Bquot%3B%3Cbr+%2F%3E%0D%0Ais+only+conditionally+initialised.++However+it+is+unconditionally+printed+at+iprint+%26amp%3Bgt%3B+1+at+line+1892%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++if%28on_root_node.and.elec_iprint%26amp%3Bgt%3B%3D2%29+then%3Cbr+%2F%3E%0D%0A++++++++++if%28dens_changed%29+then%3Cbr+%2F%3E%0D%0A++++++++++++write%28stdout%2C%2A%29+%27Norm+of+density+residual+is+%27%2Cresidual_norm%3Cbr+%2F%3E%0D%0A++++++++++else%3Cbr+%2F%3E%0D%0A++++++++++++write%28stdout%2C%2A%29+%27Density+was+not+mixed+in+this+cycle%27%3Cbr+%2F%3E%0D%0A++++++++++end+if%3Cbr+%2F%3E%0D%0A++++++++end+if%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-12+14%3A14%3A56%2B01",
            "id": "290",
            "issue": "301",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AWell%2C+I+just+had+a+look+into+the+routine+printing+error+message.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAs+I+can+see+there+is+a+comparison+right+before+the+abort%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0if+%28any%28real%28rho%2Cdp%29.gt.current_params%25magres_conv_tol%29%29+then%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0call+io_abort%28%27Error%3A+magres_apply_green_function_s2%3A+not+converged%27%29%3Cbr+%2F%3E%0A%C2%A0end+if%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+believe+at+least+max%28real%28rho%2Cdp%29%29+can+be+printed....%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-02-15+17%3A46%3A54.323586%2B00",
            "id": "1504",
            "issue": "1487",
            "user": "aperlov"
        },
        {
            "content": "Fixed+in+revision+1.107+of+io.F90%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AKR%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-14+15%3A18%3A47%2B01",
            "id": "292",
            "issue": "292",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+changes+in+wave+and+nlpot+to+handle+this+case.",
            "created_on": "2010-06-14+20%3A56%3A25%2B01",
            "id": "293",
            "issue": "233",
            "user": "pjh503"
        },
        {
            "content": "Fixed+by+use+of+F95+default+initialisation+in+the+wavefunction+type.",
            "created_on": "2010-06-14+20%3A57%3A14%2B01",
            "id": "294",
            "issue": "301",
            "user": "pjh503"
        },
        {
            "content": "LDA%2BU+code+is+maintained+by+Accelrys.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASasha+doesn%27t+appear+to+be+part+of+the+CASTEP+group+so+I+am+assigning+this+to+Victor.",
            "created_on": "2010-06-15+16%3A03%3A24%2B01",
            "id": "295",
            "issue": "291",
            "user": "krefson"
        },
        {
            "content": "This+is+obviously+just+another+occurrence+of+the+well-known+zheevd+problem.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-15+16%3A04%3A57%2B01",
            "id": "296",
            "issue": "303",
            "user": "krefson"
        },
        {
            "content": "Sasha+already+fixed+this+and+the+fix+is+available+in+all%3Cbr+%2F%3E%0D%0Arepositories+%28Accelrys+and+TCM%29",
            "created_on": "2010-06-15+16%3A08%3A37%2B01",
            "id": "297",
            "issue": "291",
            "user": "vmilman"
        },
        {
            "content": "Keith+might+well+be+right+that+the+failure+is+a+duplicate+of%3Cbr+%2F%3E%0D%0Athe+zheevd+issue%3B+however%2C+this+happens+in+a+specific+test%3Cbr+%2F%3E%0D%0Aand+we+have+a+reasonably+specific+date+when+it+started%3Cbr+%2F%3E%0D%0Afailing.+Our+build+of+30+April+was+OK%2C+4th+June+fails+%28I%3Cbr+%2F%3E%0D%0Adon%27t+have+intermediate+ones%29.+Could+you+perhaps+examine+the%3Cbr+%2F%3E%0D%0Acheckins+in+this+period+%3F",
            "created_on": "2010-06-15+16%3A34%3A36%2B01",
            "id": "298",
            "issue": "303",
            "user": "vmilman"
        },
        {
            "content": "The+reason+for+the+failure+can+be+tracked+down+to+the+change%3Cbr+%2F%3E%0D%0Athat+introduced+idle+nodes+in+phonon+calculations+as+a%3Cbr+%2F%3E%0D%0Adefault.+If+I+add+to+the+param+file%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Adevel_code+%3A+PHONON_NO_IDLE_NODES%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aall+is+well+again.+",
            "created_on": "2010-06-16+14%3A56%3A10%2B01",
            "id": "299",
            "issue": "303",
            "user": "vmilman"
        },
        {
            "content": "Fixed+by+code+change.",
            "created_on": "2010-06-16+15%3A54%3A46%2B01",
            "id": "300",
            "issue": "231",
            "user": "pjh503"
        },
        {
            "content": "This+is+obviously+just+another+occurrence+of+the+well-known+zheevd+problem.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-18+14%3A09%3A50%2B01",
            "id": "301",
            "issue": "303",
            "user": "krefson"
        },
        {
            "content": "The+new+ones+are+the+right+ones.++The+differences+come+from%3Cbr+%2F%3E%0D%0Afixing+a+bug+where+the+xc+energy+and+potential+were%3Cbr+%2F%3E%0D%0Ainconsistent+for+the+B88+and+LYP+routines.",
            "created_on": "2010-06-18+16%3A34%3A57%2B01",
            "id": "302",
            "issue": "302",
            "user": "domj"
        },
        {
            "content": "This+turned+out+to+be+caused+by+a+subtle+difference+in+the+way+that+raman_calculate+and+secondd_symmetry+call+basis_initialise.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+was+also+a+second+error+in+hartree.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ANow+all+fixed%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-19+13%3A40%3A42%2B01",
            "id": "303",
            "issue": "303",
            "user": "krefson"
        },
        {
            "content": "This+turned+out+to+be+caused+by+a+subtle+difference+in+the+way+that+raman_calculate+and+secondd_symmetry+call+basis_initialise.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+was+also+a+second+error+in+hartree.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ANow+all+fixed%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-19+15%3A15%3A07%2B01",
            "id": "304",
            "issue": "303",
            "user": "krefson"
        },
        {
            "content": "This+appears+fixed+with+removal+of+stack+arrays+from+phonon_symmetry_test.++Not+actually+tested+in+CASTEP%3Cbr+%2F%3E%0D%0Abut+should+be+OK.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-21+15%3A43%3A45%2B01",
            "id": "305",
            "issue": "112",
            "user": "krefson"
        },
        {
            "content": "A+small+changes+to+the+symmetry+tolerance+criteria+ensures+better+scaling+for+supercell+calculations%2C+and+fixes+the+cell_7_8+case.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+other+two+are+the+result+of+inaccurate+cell%2Fsymmetry+dimensions+and+the+appropriate+remedial+action+is+set+out+in+the+error+message.++Just+to+emphasize%3A+this+is+the+correct+and+desirable+behaviour+for+this+input.",
            "created_on": "2010-06-21+16%3A24%3A02%2B01",
            "id": "306",
            "issue": "254",
            "user": "krefson"
        },
        {
            "content": "Here+is+another+test+that+keeps+failing",
            "created_on": "2010-06-25+09%3A19%3A11%2B01",
            "id": "308",
            "issue": "286",
            "user": "vmilman"
        },
        {
            "content": "Fixed+with+an+additional+check+in+parameters",
            "created_on": "2010-07-02+06%3A33%3A13%2B01",
            "id": "315",
            "issue": "202",
            "user": "krefson"
        },
        {
            "content": "This+turned+out+to+be+a+numerical+instability+causing+problems+with+the+quartic+minimiser.+Fixed+by+code+change.",
            "created_on": "2010-07-16+13%3A31%3A37%2B01",
            "id": "317",
            "issue": "286",
            "user": "pjh503"
        },
        {
            "content": "Fixed+by+code+change.",
            "created_on": "2010-08-24+18%3A07%3A55%2B01",
            "id": "333",
            "issue": "313",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change.+md_crosscheck+now+returns+a+%27status%27+variable+that+md_run+can+test.",
            "created_on": "2010-08-24+18%3A08%3A21%2B01",
            "id": "334",
            "issue": "314",
            "user": "mijp1"
        },
        {
            "content": "Fixed.+md_crosscheck+now+returns+a+%27status%27+flag+that+is+tested+in+md_run.",
            "created_on": "2010-08-24+18%3A08%3A55%2B01",
            "id": "335",
            "issue": "314",
            "user": "mijp1"
        },
        {
            "content": "See%2C+for+example+routines+in+secondd_symmetry.F90%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++public+%3A%3A+secondd_code_present%3Cbr+%2F%3E%0D%0A++public+%3A%3A+secondd_code_integer%3Cbr+%2F%3E%0D%0A++public+%3A%3A+secondd_code_real%3Cbr+%2F%3E%0D%0A++public+%3A%3A+secondd_code_string%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+agree+that+a+common+set+in+io+would+be+sensible.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-08-24+20%3A48%3A40%2B01",
            "id": "336",
            "issue": "311",
            "user": "krefson"
        },
        {
            "content": "Added+a+cut-down+version+of+the+test+case+which+runs+in+20+mins+on+32+cores.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-01-18+21%3A31%3A44.826668%2B00",
            "id": "579",
            "issue": "469",
            "user": "krefson"
        },
        {
            "content": "Here%27s+another+demo+of+the+same+with+a+simpler+molecule%2C+methane.+This+runs%3Cbr+%2F%3E%0D%0Ain+80s+on+a+single+CPU+and+should+be+more+suitable+for+a+test+case.+There+is%3Cbr+%2F%3E%0D%0Adefinitely+an+excursion+visible+in+the+plot+of+the+Nose-Hoover+KE.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-01-19+09%3A13%3A16.456373%2B00",
            "id": "580",
            "issue": "469",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+key+fact+missing+from+the+description+is+that+the+erroneous+diagnostic+is+issued+on+a+continuation+run.%3C%2Fp%3E%0A%3Cp%3E%0AThis+would+appear+to+be+because+the+%22param%22+file+from+the+continuation+specified+the+%22spin_polarized%22+keyword+but+none+of+%22spin%22%2C+%22nup%22%2C+%22ndown%22+etc.%C2%A0+Were+this+an+initial+run+rather+than+a+continuation+the+diagnostic+ewould+be+correct.%3C%2Fp%3E%0A%3Cp%3E%0AI+suggest+that+the+test+and+the+one+a+few+lines+below+be+issued+only+for+a+new+run%2C+ie+conditional+upon+the+value+of+the+%22continuation%22+keyword+as+none+of+these+can+be+changed+on+continuation.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-05-17+10%3A48%3A36.404206%2B01",
            "id": "1162",
            "issue": "1008",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+think+this+is+a+very+important+point%2C+particularly+as+we+move+towards+creating+archives+of+CASTEP+results+-+a+user+%28even+automated+system%29+would+like+to+be+able+to+quickly+assess+the+reliability+of+a+calculation+result.+It+would+be+good+if+some+kind+of+summary+%2F+recapitulation+of+warning+messages+during+a+run+was+output+at+the+end+of+.castep+or+as+a+separate+file.+IIRC+the+.castep+says+at+the+end+if+there+were+warning+messages%2C+but+it+can+be+a+pain+to+find+them+%28what+exactly+should+you+search+for%3F%29%2C+and+then+they+might+be+things+you+were+expecting+anyway.+I+can+imagine+%22send+me+your+warnings%22+as+the+first+stage+of+checking+the+soundness+of+a+calculation.+Apologies+if+this+is+done+already+in+CASTEP+8%21%3C%2Fp%3E%0A%3Cp%3E%0AAnother+way+to+improve+warnings+would+be+%22Look+up+error+code+SHRTBNDS+for+more+info.%22+and+SHRTBNDS+has+the+kind+of+narrative+answer+below+that+puts+things+in+context.+It%27s+very+difficult+for+non-expert+users+to+judge+how+serious+a+particular+warning+is.%3Cbr+%2F%3E%3Cbr+%2F%3E%0ATools+such+as+checkcif+also+grade+warnings+e.g.%3Cbr+%2F%3E%0ARED+-+this+is+almost+certainly+wrong.+Please+check+very+carefully.%3Cbr+%2F%3E%0AAMBER+-+this+looks+suspicious.+Proceed+with+caution%3Cbr+%2F%3E%0AGREEN+-+nothing+actually+wrong%2C+but+you+might+address+the+problem+more+efficiently+if+you+did+X.%3Cbr+%2F%3E%3Cbr+%2F%3E%0AIf+you+are+trying+to+publish+a+structure+with+RED+warnings+from+checkcif+%28often+obligatory+when+reporting+crystal+structures%29%2C+you+have+to+justify+your+results+very+well+to+a+referee.+I+can+imagine+the+same+thing+for+publishing+CASTEP+results%21%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AI%27m+happy+to+share+info+on+the+heirarchical+warning+system+we+use+in+our+simulation+software.%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A04%3A34.06761%2B01",
            "id": "1163",
            "issue": "193",
            "user": "phodgkin"
        },
        {
            "content": "Fixed+by+code+changes+in+dftd+and+semp_disp_corr.+A+bit+of+a+hack+-+need+a+cleaner+mechanism+in+future.%3Cbr+%2F%3E%0D%0A+++Matt",
            "created_on": "2010-09-09+10%3A55%3A49.993056%2B01",
            "id": "532",
            "issue": "315",
            "user": "mijp1"
        },
        {
            "content": "Also+needed+a+code+fix+in+hirshfeld.F90+to+reset+initial+%26amp%3Bquot%3Bcurrent_cell%26amp%3Bquot%3B",
            "created_on": "2010-09-09+18%3A05%3A28.316845%2B01",
            "id": "533",
            "issue": "315",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2010-09-27+17%3A12%3A21.415951%2B01",
            "id": "540",
            "issue": "414",
            "user": "mijp1"
        },
        {
            "content": "I+agree+with+this+suggestion.+When+disk+space+is+scarce+jobs+can+fail+writing+the+check+file%2C+and+it+would+be+good+to+have+a+castep_bin+at+least.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+most+general+solution+would+be+to+have+a+separate+parameter+to+control%3Cbr+%2F%3E%0D%0Acastep_bin+output%2C+akin+to+num_backup_iter+for+the+check+file+but+independent%3Cbr+%2F%3E%0D%0Aof+it.",
            "created_on": "2010-11-04+16%3A18%3A17.131589%2B00",
            "id": "545",
            "issue": "201",
            "user": "pjh503"
        },
        {
            "content": "Bug+now+fixed.+Thanks+for+the+comprehensive+diagnosis+-+made+fixing+much+easier.+However%2C+the+solution+is+NOT+to+undo+the+forced+re-initialisation+as+suggested+-+this+was+deliberately+added+to+enable+finite+displacement+phonons+via+supercell+technique.+Rather%2C+there+was+one+other+piece+of+code+in+semp_disp_corr.F90+that+was+not+being+properly+reinitialised+and+this+is+now+fixed.+Thanks+to+Jorg+Meyer+for+helping.+Patch+file+attached+for+those+desperate+to+get+going+with+the+new+functionality.%3Cbr+%2F%3E%0D%0AFull+version+checked+into+CVS+along+with+other+minor+tweaks+to+DFTD+functionality.",
            "created_on": "2010-11-11+16%3A33%3A06.390706%2B00",
            "id": "547",
            "issue": "419",
            "user": "mijp1"
        },
        {
            "content": "The+comment+was+more+related+to+the+actual+formatting+of+the+output.%3Cbr+%2F%3E%0D%0A%28Quite+apparently%2C+my+thoughts+had+been+interrupted+while+writing+it%3Cbr+%2F%3E%0D%0Aso+that+I+don%27t+remember+the+%26amp%3Bquot%3Bbut%26amp%3Bquot%3B.%29+I+think+a+better+way+of+curing+%3Cbr+%2F%3E%0D%0Athis+is+by+adding+an+accordingly+trivial+check+to+electronic_minimisation%3Cbr+%2F%3E%0D%0Aitself+%28please+find+the+attached+patch%29+-+otherwise+a+routine+would+%3Cbr+%2F%3E%0D%0Aget+called+with+the+sole+purpose+of+deciding+not+do+anything.+",
            "created_on": "2011-01-19+10%3A55%3A37.846324%2B00",
            "id": "581",
            "issue": "466",
            "user": "jmeyer"
        },
        {
            "content": "%3Cp%3E%0AThis+issue+has+been+highlighted+now+by+Japanese+users%3C%2Fp%3E%0A",
            "created_on": "2016-07-28+09%3A33%3A56.45685%2B01",
            "id": "1611",
            "issue": "1486",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThis+report+has+been+neglected+too+long.+While+it%27s+really+a+joint+responsibility%2C+for+the+sake+of+definiteness%2C%3C%2Fp%3E%0A%3Cp%3E%0Ait+needs+assigning+to+someone+to+think+about+the+changes+and+how+it+could+be+done.%C2%A0+Eeny+meeny+miny+moe...%3C%2Fp%3E%0A%3Cp%3E%0A%2APhil%2A%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%28P.S.%C2%A0+You+can+also+change+the+assignment+if+you+really+don%27t+want+it%29.%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A20%3A08.942196%2B01",
            "id": "1164",
            "issue": "193",
            "user": "krefson"
        },
        {
            "content": "It+worked+neither+for+5.0+nor+for+5.5+though+the+diagnostic+was+different%3A%3Cbr+%2F%3E%0D%0AReading+ground+state+wavefunctions+of+supercell+for+phonon+calculation+from+Al_PhonDOS.fd_wvfn%3Cbr+%2F%3E%0D%0AError+model_read_occ_eigenvalues%3A+Data+missing+for+one+or+more+k-points.%3Cbr+%2F%3E%0D%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0D%0A+model_read_occ_eigenvalues%3Cbr+%2F%3E%0D%0A+phonon_wave_read%3Cbr+%2F%3E%0D%0A+phonon_force_constant_matrix%3Cbr+%2F%3E%0D%0A+phonon_calculate%3Cbr+%2F%3E%0D%0A+castep%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-12-09+15%3A30%3A06.556405%2B00",
            "id": "556",
            "issue": "450",
            "user": "aperlov"
        },
        {
            "content": "1st.+An+interesting++observation+has+been+done+%3A+Si+in+Si+is+not+always+working+starting+with+v+4.2+%3Cbr+%2F%3E%0D%0A2nd+Moreover+already+the+1st++step+in+SCF+energies+differ+if+you+have+50%25Si+and+50%25+Si+or+100%25Si+and+0%25Si+starting+from+the+4.2.%3Cbr+%2F%3E%0D%0A3rd.+The+problem+is+only+seen+with+USP.+%3Cbr+%2F%3E%0D%0A4th.+By+using+Newton+method+I+managed+to+trace+the+problem+to+the+very+localized+checkin%3A%3Cbr+%2F%3E%0D%0ANamely+nlpot.F90+version+109+works+well+and+110+is+not.+The+only+change+is+%E2%80%9Cnlpot_prepare_precon_ks%E2%80%9D+being+rewritten.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAs+I+understand+if+CASTEP+is+able+to+overcome+problems+the+of+preconditioner+it+converges+to+the+correct+result.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAttached+you+find+my+trivial+test%E2%80%A6%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-12-09+16%3A02%3A03.375044%2B00",
            "id": "557",
            "issue": "421",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0AThis+has+been+a+long+time+in+tracking+down+and+fixing.%C2%A0+This+issue+was+that+the+implicit+construction+of+the+Wigner-Seitz+cell+of+the+supercell+containing+the+force+constant+matrix+was+failing%C2%A0+for+some+very+skew+cells%2C+including+a+fraction+of+but+not+all+bct+examples+in+several+settings.+The+search+over+lattice+points+with+indices+-1%2C0%2C%2B1+is+NOT+sufficient+in+these+cases+to+find+all+points+close+enough+to+define+the+W-S+boundaries.%3C%2Fp%3E%0A%3Cp%3E%0AThe+revised+code+now+does+a+Niggli+cell+reduction+to+find+the+reduced+cell%2C+and+applies+the+-1%2C0%2C%2B1+indices+to+this.%C2%A0+I+velieve+%28but+have+not+proved+mathematically%29+that+this+is+sufficient.%C2%A0+It+certainly+fixes+all+of+the+bad+cases.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-05-29+16%3A20%3A11.904702%2B01",
            "id": "1172",
            "issue": "516",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+tried+this+case+just+now%2C+and+the+code+segments+after+a+trial+step+in+continuation.+Looks+like+the+riginal+problem+is+fixed%2C+but+there+is+a+new+one+%28output+is+attached%29%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-08-03+10%3A21%3A20.306337%2B01",
            "id": "1612",
            "issue": "1586",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThis+turns+out+to+be+a+quite+different+bug.+Victor%27s+test+has+LBFGS+with+variable+cell+%2B+cell+constraints+in+1st+run%2C+and+then+cell+constraints+turned+off+in+restart.+As+BFGS+%28and+LBFGS%29+do+not+update+the+inverse+Hessian+with+variable+cell+%2B+cell+constraints+this+meant+that+the+lbfgs_position_updates+array+was+of+zero+size+on+restart+%28correct+for+constraints+run%29+but+which+then+gave+an+array+error+with+the+constraints+being+turned+off+%28and+inverse+Hessian+updating+therefore+turned+on%29.%3C%2Fp%3E%0A%0A%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2016-08-05+23%3A02%3A27.323199%2B01",
            "id": "1614",
            "issue": "1586",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AAdded+to+io+and+propagated+through+parameters+%26amp%3B+cell_output+%28and+cloned%29+routines%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+23%3A14%3A59.961478%2B01",
            "id": "1811",
            "issue": "1271",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThis+is+certainly+so+close+to+completion+that+I%27m+going+to+mark+it+done.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A25%3A08.385238%2B01",
            "id": "1165",
            "issue": "161",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+7.0.3.%C2%A0+The+Ewald+DD+routine+seems+to+do+the+job+correctly%2C+though+it+is+rather+slow.%C2%A0+Perhaps+this+can+be+optimised+%28another+day%29.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-06-03+10%3A46%3A57.507897%2B01",
            "id": "1173",
            "issue": "990",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+fix+on+previous+B3LYP+code+change+%28rho+tolerance+in+B88%29.",
            "created_on": "2011-01-30+12%3A12%3A27.704207%2B00",
            "id": "589",
            "issue": "473",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AReassigned+to+Dominik%2C+and+bumped+up+priority+as+it%27s+now+part+of+the+CCPNC+workplan%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A26%3A05.40707%2B01",
            "id": "1166",
            "issue": "181",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+tried+this+case+just+now%2C+and+the+code+segments+after+a+trial+step+in+continuation.+Looks+like+the+riginal+problem+is+fixed%2C+but+there+is+a+new+one+%28output+is+attached%29%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-08-03+10%3A21%3A46.681303%2B01",
            "id": "1613",
            "issue": "1586",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ATurnes+out+to+be+more+difficult+than+anticipated.%C2%A0+A+job+for+another+day.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A29%3A14.355063%2B01",
            "id": "1167",
            "issue": "307",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+recent+check-in+from+AT+for+v8.0.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-17+10%3A42%3A28.602877%2B01",
            "id": "1207",
            "issue": "692",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ABug+fixed+by+code+change.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-17+14%3A02%3A11.012477%2B01",
            "id": "1208",
            "issue": "859",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ACumulant+is+there+already%2C+and+I+have+just+added+MPgrid+and+FBSC+to+the+appropriate+places+in+castep.f90%2C+geometry.f90+and+cell.f90.%3C%2Fp%3E%0A%3Cp%3E%0AStewart+%26amp%3B+Chris+need+to+put+the+hooks+in+for+XC+functionals+and+pspots+respectively+so+I+am+transferring+ownership+of+this+to+them.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-17+14%3A19%3A38.817536%2B01",
            "id": "1211",
            "issue": "942",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ADone.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-18+14%3A18%3A48.600793%2B01",
            "id": "1213",
            "issue": "1061",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ABug+fixed+by+code+change.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-28+15%3A12%3A54.721383%2B01",
            "id": "1215",
            "issue": "1008",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AUnable+to+reproduce+bug.+Closing.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-28+15%3A30%3A57.05732%2B01",
            "id": "1216",
            "issue": "537",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.+Same+bug+also+possible+in+DMD.+Code+inspection+showed+that+corresponding+bug+in+BFGS+etc+was+already+caught.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-29+21%3A27%3A50.003836%2B01",
            "id": "1218",
            "issue": "922",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFirst+version+checked+in+at+changeset%0A%3C%2Fp%3E%0A%0A%09%09%09%09%3Cp%3E%0A%09%09%09%09Changeset%3A%3C%2Fp%3E%0A%09%09%09%0A%09%09%09%0A%09%09%09%09%3Cp%3E%0A%09%09%09%096426+%2862be813b80a7%29+Added+DFPT%2BD+capability+to+calculate+phonons+with+dispersion+correction+applied+%E2%80%A6%3C%2Fp%3E%0A%09%09%09%0A%09%09%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-07-30+16%3A42%3A33.895909%2B01",
            "id": "1219",
            "issue": "900",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+requires+changes+in+an+external+module+that+does+not+have+knowledge+of+CASTEP+io+modules.+%C2%A0As+a+low+priority+issue%2C+we+can+consider+this+closed+as+%22won%27t+fix%22.%3C%2Fp%3E%0A",
            "created_on": "2014-08-01+17%3A11%3A35.359991%2B01",
            "id": "1220",
            "issue": "689",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AThe+two+routines+involved+are+%22parameters_reread_real%22+and+%22parameters_reread_physical%22%3C%2Fp%3E%0A",
            "created_on": "2014-08-06+13%3A36%3A56.99936%2B01",
            "id": "1221",
            "issue": "1090",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-08-15+12%3A29%3A58.468686%2B01",
            "id": "1225",
            "issue": "1091",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AChanged+to+%22hostname+-f%22%3C%2Fp%3E%0A",
            "created_on": "2014-08-17+15%3A51%3A10.668241%2B01",
            "id": "1226",
            "issue": "1093",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+have+seen+this+failure+to+trap+invalid+input+on+previous+occasions+and+agree+with+the+need+for+a+fix.%3C%2Fp%3E%0A%3Cp%3E%0AI+think+it+is+still+the+case+even+after+the+%22otflib%22+changes+each+line+in+%25BLOCK+SPECIES_POT+must+contain+two+%28or+more%3F%29+space-separated+entities.%C2%A0+Aborting+in+the+case+where+there+is+just+one+would+catch+the+common+error+case.%3C%2Fp%3E%0A%3Cp%3E%0AThis+could+go+in+around+line+4006%3C%2Fp%3E%0A%3Cp%3E%0A%26lt%3Bpre%26gt%3B%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+%21+Overwrite+any+defaults+already+set%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+do+i%3D1%2Ccurrent_cell%25num_species%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+do+j%3D1%2Cnum_lines%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+if%28atomic_symbol%28j%29.eq.current_cell%25species_symbol%28i%29%29+%26amp%3B%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+current_cell%25species_pot%28i%29%3Dtrim%28adjustl%28atomic_pot%28j%29%29%29%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+end+do%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+end+do%3Cbr+%2F%3E%0A%26lt%3B%2Fpre%26gt%3B%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0Awhich+currently+just+assigns+a+pseudopotential+descriptor+if+matched.%C2%A0+This+could+also+test+whether+atomic_pot+is+a+null+string.%C2%A0+We+could+also+test+here+whether+%28b%29+any+element+of+atomic_pot+remains+unmatched.%C2%A0+This+would+catch+cases+where+the+element+label+has+a+syntax+error%2C+but+would+disallow+the+inclusion+of+unused+species.%C2%A0+It+is+not+clear+from+the+spec+whether+the+latter+is+allowed.%3C%2Fp%3E%0A",
            "created_on": "2014-08-28+12%3A23%3A57.771671%2B01",
            "id": "1231",
            "issue": "1113",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AStill+need+to+think+about+use+cases.%3C%2Fp%3E%0A",
            "created_on": "2014-05-22+10%3A30%3A21.23424%2B01",
            "id": "1168",
            "issue": "631",
            "user": "krefson"
        },
        {
            "content": "Please+investigate+and+supply+test+case",
            "created_on": "2011-04-20+10%3A45%3A06.500182%2B01",
            "id": "642",
            "issue": "520",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-17+14%3A03%3A22.923858%2B01",
            "id": "1209",
            "issue": "970",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ADisagree.+Ideally%2C+NLXC+should+support+paging%2C+but+if+that+is+not+going+to+happen%2C+then+the+bandstructure+module+should+block+it.+I+have+made+that+change+to+bs.f90+to+close+this+bug.+However%2C+the+bigger+question+is+-+when+can+we+ditch+bs.f90+altogether+and+just+use+spectral%3F%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-17+14%3A37%3A53.898989%2B01",
            "id": "1212",
            "issue": "826",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2014-07-28+15%3A51%3A20.490286%2B01",
            "id": "1217",
            "issue": "847",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThere+is+a+standalone+tool+%22symmetry_snap%22+which+does+this.%C2%A0+Do+you+think+that+way+of+providing+the+functionality+is+sufficient%2C+or+is+there+still+a+case+for+doing+it+on+a+%22-dryrun%22%3F%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AKeith%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-08-29+15%3A50%3A18.484504%2B01",
            "id": "1232",
            "issue": "1103",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ADone+-+for+16.1.1+and+17.1%2C+at+least+for+phonon-related+tasks%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A02%3A57.395082%2B01",
            "id": "1523",
            "issue": "235",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAdded+by+Dominik+during+Codefest+2016.%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+enabled+support+for+phonons+and+added+test+suite+tests.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A37%3A47.289075%2B01",
            "id": "1529",
            "issue": "1162",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AIn+the+absence+of+any+follow+up%2C+I+assume+that+the+%22symetry_snap%22+too+satisfies+this+need%2C+and+will+close+the+request.%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A40%3A35.386095%2B01",
            "id": "1530",
            "issue": "1103",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+output+at+iprint%3D2+does+include+a+diagonalisation+and+printout%2C+incluing+the+frequencies.%3C%2Fp%3E%0A%0A%3Cp%3E%0ADoes+this+suffice%3F%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+16%3A12%3A46.123388%2B01",
            "id": "1531",
            "issue": "1207",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0Aiprint%3D2+is+probably+OK+as+a+workaround%2C+but+it+does+produce+very+large+files.+If+all+the+data+is+already+there%2C+perhaps+frequencies+output+could+be+moved+into+iprint%3D1%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0AThanks%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+16%3A22%3A19.31066%2B01",
            "id": "1532",
            "issue": "1207",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ADear+Keith%2C%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+think+the+funcitonality+could+be+useful%2C+and+for+a+more+general+purpose+than+just+symmetry+snapping%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0ARecently%2C%C2%A0a+number+of+my+calculations+have+crashed+just+after+the+population+analysis+%28but+just+before+the+Hirshfeld+analysis%29.+I+suspect+the+issue+is+related+to+memory%2C+as+I%E2%80%99m+very+close+to+the+memory+limit+of+my+machines.+Anyway%2C+the+problem+was+that+the+-out.cell+and+out-cif+files+were+never+procuded.+Since+I+had+the+.check+file+I+simply+ran+an+scf+calculaiton+%28after+turning+hirshfeld+analysis+off%29%2C+which+output+the+final+structures.+However+having+this+feature+in+the+dryrun%2C+or+a+standalone+tool+would+have+been+handy+and+saved+computer+time+%28and+queue+time%29.%3C%2Fp%3E%0A%0A%3Cp%3E%0ABest%2C%3Cbr+%2F%3E%0APatrick%3C%2Fp%3E%0A",
            "created_on": "2016-04-05+01%3A02%3A29.476983%2B01",
            "id": "1534",
            "issue": "1103",
            "user": "pab07"
        },
        {
            "content": "User+aperlov+started+a+discusssion+on+the+tracker+item%3A+%3Ca+href%3D%22javascript%3A%3B%22+class%3D%22discuss+%22+data-section%3D%22trackeritem%22++data-ref-id%3D%221551%22+data-forum-name%3D%22lda%2Bu+spectral+continuation+spectral+%22+onMouseOver%3D%22tooltip%28%27lda%2Bu+spectral+continuation+spectral+%27%29%22+onmouseout%3D%22tooltipexit%28%29%22%3E%0A%09%09%09%09%09%09%3Cimg+src%3D%22%2Fimages%2Fchat_icon_24.png%22+alt%3D%22lda%2Bu+spectral+continuation+spectral+%22+%2F%3E%0A%09%09%09%09%09%3C%2Fa%3E",
            "created_on": "2016-04-06+12%3A33%3A41.993428%2B01",
            "id": "1535",
            "issue": "1551",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change%3C%2Fp%3E%0A%3Cp%3E%0A%3C%2Fp%3E%0A%0A%09%09%09%09%3Cp%3E%0A%09%09%09%09Changeset%3A%3C%2Fp%3E%0A%09%09%09%0A%09%09%09%0A%09%09%09%09%3Cp%3E%0A%09%09%09%096473+%28733cb7544621%29+Fixed+negative+parallel+efficiency+estimates+on+very+quick+calculations.+%E2%80%A6%3C%2Fp%3E%0A%09%09%09%0A%09%09%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-09-03+13%3A57%3A28.130403%2B01",
            "id": "1234",
            "issue": "1100",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAs+this+calls+for+a+new+parameter%2C+over+to+you+Matt.%3C%2Fp%3E%0A",
            "created_on": "2014-09-03+14%3A07%3A40.33482%2B01",
            "id": "1235",
            "issue": "951",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change+in+parameters+to+print+with+more+precision%2C+and+by+code+change+in+model_check_dependencies+to+not+invalidate+wvfn+or+density+on+tiny+changes.%3C%2Fp%3E%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2014-09-04+10%3A34%3A34.093669%2B01",
            "id": "1237",
            "issue": "1090",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AIntended+change+-+not+a+bug%3C%2Fp%3E%0A",
            "created_on": "2014-09-06+18%3A37%3A49.187959%2B01",
            "id": "1238",
            "issue": "985",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ADone%3C%2Fp%3E%0A",
            "created_on": "2014-09-08+15%3A36%3A57.163084%2B01",
            "id": "1242",
            "issue": "1116",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AUnit+set+up+in+parameters%2C+io+and+constants.%3C%2Fp%3E%0A%3Cp%3E%0AUnit+used+in+output+by+popn+%26amp%3B+Hirshfeld.%3C%2Fp%3E%0A%3Cp%3E%0ANeed+to+propagate+to+other+routines%2C+e.g.%3C%2Fp%3E%0A%3Cp%3E%0AElectronic%3A%C2%A0+-%C2%A0+%222%2Aintegrated+spin+density%22%3Cbr+%2F%3E%0AHubbard%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+-+any+spin+output%3Cbr+%2F%3E%0Acell%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+-+SPIN%3D+keyword+and+cell_output+print+of+initialized+spins%3Cbr+%2F%3E%0Atddft%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+-+%22write%28stdout%2C%2A%29%27max_spin_den%22%3Cbr+%2F%3E%0Aparameters%C2%A0%C2%A0+-+%22spin%22+keyword+for+input+-+unless+this+is+moving+to+cell.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2014-09-09+16%3A54%3A56.530806%2B01",
            "id": "1245",
            "issue": "951",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThis+was+a+consequence+of+a+prior+error+and+erroneous+code+path%2C+which+was+fixed+by+commit%3C%2Fp%3E%0A%3Cp%3E%0Achangeset%3A%C2%A0%C2%A0+6291%3A4cd4e2e59e00%3Cbr+%2F%3E%0Abranch%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Castep70_branch%3Cbr+%2F%3E%0Auser%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Keith+Refson+%26lt%3BKeith.Refson%40stfc.ac.uk%26gt%3B%3Cbr+%2F%3E%0Adate%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Sat+May+17+10%3A21%3A59+2014+%2B0100%3Cbr+%2F%3E%0Asummary%3A%C2%A0%C2%A0%C2%A0%C2%A0+Fixed+logic+error+in+phonon+calculation+driver+which+messed+up+some+continuations%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AAdded+a+%22belt+and+braces%22+check+just+to+make+logic+completely+transparent%3C%2Fp%3E%0A%3Cp%3E%0ANothing+more+to+do.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-09-10+17%3A43%3A44.700249%2B01",
            "id": "1246",
            "issue": "1022",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+appears+to+be+a+failure+of+the+degenerate+modes+symmetry+detection.%C2%A0+In+fact+an+unhandled+case.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AThe+symmetry+code+searches+for+a+symmetry+operation+S+and+set+of+set+of+coefficients+l%2C+m+such+that%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0l+e%28i-1%29+%2B+m+e%28i%29+%3D+S+e%28i-1%29%3C%2Fp%3E%0A%3Cp%3E%0ABut+the+search+is+restricted+to+those+symmetry+opertions+without+a+non-symmorphic+displacement%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+%21+Can%27t+handle+operations+with+a+displacement+at+the+moment%2C+so+skip%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+if%28+sum%28abs%28current_cell%25symmetry_disps%28%3A%2Cnop%29%29%29%26gt%3B0.0_dp+%29+cycle%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ABut+in+the+rutile+structure%2C+all+of+thefourfold+axes+operations+are+screw+axes+and+are+excluded.%C2%A0+The+algorithm+falsely+reports+success+but+generates+an+invalid+transformation.%C2%A0+If+I+tighten+up+the+criteria+the+search+%28correctly%2C+wuithin+the%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0Ano+displacements+limitation%29+fails%3A%3C%2Fp%3E%0A%3Cp%3E%0Araman.f90%3A+line+1244%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+%21+Check+we+have+a+non-trivial+solution%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+if%28sqrt%28abs%28sum%28b%281%3Atrip_size%2C1%29%2A%2A2%29-1.0_dp%29%29+%26gt%3B+small+.or.+1.0_dp-abs%28b%281%2C1%29%29%26lt%3Bsmall%29then%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+if%28debug_flag%29+then%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+write%28stdout%2C%27%28%22Rejecting+Symm+Op+%22%2CI3%2C%22+%7Cb%7C%3D%22%2CF9.6%2C%22+b%3D%22%2C2F12.6%29%27%29+%26amp%3B%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+nop%2C+sqrt%28sum%28b%281%3Atrip_size%2C1%29%2A%2A2%29%29%2Cb%281%3A2%2C1%29%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+end+if%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+cycle+%21+Skip+to+the+next+symmetry+operation%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+end+if%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0Athen+the+result+is%3A%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ARaman%C2%A0%C2%A0+12%C2%A0%C2%A0+2.97636766E-04%C2%A0+-3.24395509E-05%C2%A0%C2%A0+1.18101785E-02%3Cbr+%2F%3E%0ARaman%C2%A0%C2%A0+12%C2%A0+-3.24395509E-05%C2%A0%C2%A0+2.97675971E-04%C2%A0+-1.11297224E-02%3Cbr+%2F%3E%0ARaman%C2%A0%C2%A0+12%C2%A0%C2%A0+1.18101785E-02%C2%A0+-1.11297224E-02%C2%A0+-3.94034608E-04%3Cbr+%2F%3E%0A%C2%A0Doublet+calculation+in+raman_get_degenerate%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0%C2%A0+1+%7Cb%7C%3D+1.000000+b%3D%C2%A0%C2%A0%C2%A0+1.000000%C2%A0%C2%A0%C2%A0+0.000000%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0%C2%A0+2+%7Cb%7C%3D+0.990361+b%3D%C2%A0%C2%A0%C2%A0+0.987392%C2%A0%C2%A0+-0.076628%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0%C2%A0+7+%7Cb%7C%3D+0.775979+b%3D%C2%A0%C2%A0+-0.775931%C2%A0%C2%A0+-0.008639%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0%C2%A0+8+%7Cb%7C%3D+1.069448+b%3D%C2%A0%C2%A0+-1.066475%C2%A0%C2%A0%C2%A0+0.079677%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0%C2%A0+9+%7Cb%7C%3D+1.015745+b%3D%C2%A0%C2%A0%C2%A0+1.015745%C2%A0%C2%A0+-0.000607%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0+10+%7Cb%7C%3D+0.974616+b%3D%C2%A0%C2%A0%C2%A0+0.971647%C2%A0%C2%A0+-0.076021%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0+15+%7Cb%7C%3D+1.094834+b%3D%C2%A0%C2%A0+-1.094828%C2%A0%C2%A0%C2%A0+0.003656%3Cbr+%2F%3E%0ARejecting+Symm+Op%C2%A0+16+%7Cb%7C%3D+0.750608+b%3D%C2%A0%C2%A0+-0.747578%C2%A0%C2%A0%C2%A0+0.067381%3Cbr+%2F%3E%0AWarning%3A+Solution+for+degenerate+tensor%C2%A0%C2%A0+13+not+found+-%3Cbr+%2F%3E%0Asetting+to+mode%C2%A0%C2%A0+12+instead%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ANone+of+these+symmetry+operations+has+a+decent+projection+onto+the+eigenvector+of+mode+13.%C2%A0+This+is+to+be+expected+as+the+doublet+is+caused+by+the+fourfold+symmetr%2C+but+fourfold+operations+are+currently+excluded+from+consideration.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-09-12+17%3A51%3A16.004232%2B01",
            "id": "1250",
            "issue": "1006",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AUpdate+for+8.0.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ACu-bis-small+still+fails%2C+immediately+on+start-up+but+at+least+with+a+diagnostic+now%3A%3C%2Fp%3E%0A%3Cp%3E%0Awave_add_slice_wv%3A+nb_dst+is+too+large%2C+insufficient+bands+in+wvfn%3Cbr+%2F%3E%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0A%C2%A0wave_add_slice_wv%3Cbr+%2F%3E%0A%C2%A0wave_transform_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_orthonormalise_over_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_Sorthonormalise_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_Sorthonormalise_wv%3Cbr+%2F%3E%0A%C2%A0wave_initialise_wv%3Cbr+%2F%3E%0A%C2%A0model_initialise%3Cbr+%2F%3E%0A%C2%A0castep%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0ASi8+geom+still+coredumps.%C2%A0+Strack+traceback+is+a+deallocate+in+%22wave_transofrm_slice%22%3C%2Fp%3E%0A%3Cp%3E%0A%28gdb%29+bt%3Cbr+%2F%3E%0A%230%C2%A0+0x0000003b2e232925+in+raise+%28%29+from+%2Flib64%2Flibc.so.6%3Cbr+%2F%3E%0A%231%C2%A0+0x0000003b2e23408d+in+abort+%28%29+from+%2Flib64%2Flibc.so.6%3Cbr+%2F%3E%0A%232%C2%A0+0x0000003b2e270837+in+__libc_message+%28%29+from+%2Flib64%2Flibc.so.6%3Cbr+%2F%3E%0A%233%C2%A0+0x0000003b2e276166+in+malloc_printerr+%28%29+from+%2Flib64%2Flibc.so.6%3Cbr+%2F%3E%0A%234%C2%A0+0x00007f893292670e+in+free+%28%29+from+%2Fopt%2Fibm%2Fplatform_mpi%2Flib%2Flinux_amd64%2Flibmpi.so.1%3Cbr+%2F%3E%0A%235%C2%A0+0x0000000003a7d8a7+in+for_dealloc_allocatable+%28%29%3Cbr+%2F%3E%0A%236%C2%A0+0x0000000000cf7bfd+in+WAVE%3A%3Awave_transform_slice+%28wvfn_slice%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFundamental%2Fwave.f90%3A25129%3Cbr+%2F%3E%0A%237%C2%A0+0x0000000000cbab55+in+WAVE%3A%3Awave_orthog_over_wv_wv_ks+%28wvfn1%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFundamental%2Fwave.f90%3A13457%3Cbr+%2F%3E%0A%238%C2%A0+0x000000000048051f+in+ELECTRONIC%3A%3Aelectronic_proj_grad_wv+%28wvfn%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFunctional%2Felectronic.f90%3A5963%3Cbr+%2F%3E%0A%239%C2%A0+0x000000000047e66b+in+ELECTRONIC%3A%3Aelectronic_sd_direction+%28wvfn%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFunctional%2Felectronic.f90%3A5205%3Cbr+%2F%3E%0A%2310+0x000000000047e0b1+in+ELECTRONIC%3A%3Aelectronic_step_direction+%28step_type%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFunctional%2Felectronic.f90%3A4922%3Cbr+%2F%3E%0A%2311+0x000000000046ee41+in+ELECTRONIC%3A%3Aelectronic_iter_diag_h+%28wvfn%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFunctional%2Felectronic.f90%3A1030%3Cbr+%2F%3E%0A%2312+0x0000000000469688+in+ELECTRONIC%3A%3Aelectronic_minimisation+%28wvfn%3DCannot+access+memory+at+address+0x7718%3Cbr+%2F%3E%0A%29+at+..%2F..%2FSource%2FFunctional%2Felectronic.f90%3A496%3Cbr+%2F%3E%0A%2313+0x000000000044770a+in+castep_IP_calculate_finite_basis_corr_+%28%29%3Cbr+%2F%3E%0A%2314+0x000000000044e38a+in+castep_IP_check_elec_ground_state_+%28%29%3Cbr+%2F%3E%0A%2315+0x0000000000432a17+in+castep+%28%29+at+..%2F..%2FSource%2Fcastep.f90%3A505%3Cbr+%2F%3E%0A%2316+0x0000000000430436+in+main+%28%29%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0Ahg+version+is+6475%3Ab7531177246b%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-09-03+14%3A40%3A30.117238%2B01",
            "id": "1236",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AImplemented+suring+CODEFEST+2016.%C2%A0+There+are+now+two+new+environment+variables%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0ACASTEP_PAGE_TMPDIR+and+CASTEP_TMPDIR%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+first+must+point+to+a+directory+available+%28but+not+necessarily+shared%29+for+every+MPI+process%2C+eg+%2Ftmp+if+large+enough.%C2%A0%C2%A0%C2%A0+Per-process+temporary+files+are+written+and+read+there.%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+directory+pointed+at+by+CASTEP_TMPDIR+need+only+exist+on+the+root+node%3B+save+wavefunction%2C+density+etc+files+for+phonon+calculations+are+saved+there.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A07%3A06.117547%2B01",
            "id": "1524",
            "issue": "187",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AIt+would+be+great+to+find+a+solution+or+a+workaround+for+the+upcoming+8.0+release...%3C%2Fp%3E%0A",
            "created_on": "2014-10-07+09%3A33%3A59.796432%2B01",
            "id": "1261",
            "issue": "1006",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AIt+turns+out+that+the+symmetry+displacement+was+a+bit+of+a+red+herring+-+this+has+no+effect+whatsoever+on+the%3Cbr+%2F%3E%0Asymmetry+transformation+to+an+eigenvector.%C2%A0+But+removing+the+test+does+NOT+fix+the+issue+as+the+fourfold+operations+are+now+considered+but+then+discarded.%3C%2Fp%3E%0A%3Cp%3E%0AThere+is+a+further+issue+with+the+algorithm.%C2%A0+It+was+implemented+to+search+for+a+single+ion+whose+eigendisplacement+can+be+used+to+determine+the+symmetry+tranformation%2C+which+assumes+that+the+effect+of+a+symmetry+operation+is+the+rotation+of+the+vector+of+that+ion.%C2%A0+But+that+only+works+in+the+case+where+the+symmetry+axis+passes+through+the+ion%2C+which+is+not+true+in+general.%C2%A0+In+fact+the+effect+of+the+symmetry+includes+the+rotation+of+one+ion+into+another%2C+and+in+the+case+of+4_1+axes+in+rutile+this+is+the+ONLY+significant+consequence+of+the+symmetry.%3C%2Fp%3E%0A%3Cp%3E%0AChanged+the+algorithm+to+consider+the+effect+of+the+symmetry+on+the+entire+eigenvector.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AThe+test+work+correctly+for+SnO2+%28rutile%29%2C+Si2+%28diamond%29+hexagonal+BN+and+methane+molecule.%3C%2Fp%3E%0A",
            "created_on": "2014-10-12+18%3A32%3A15.398876%2B01",
            "id": "1265",
            "issue": "1006",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AChanges+done+in+Electronic+by+Phil.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2014-11-04+13%3A25%3A02.287821%2B00",
            "id": "1272",
            "issue": "951",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AIt+would+be+great+to+find+a+solution+or+a+workaround+for+the+upcoming+8.0+release...%3C%2Fp%3E%0A",
            "created_on": "2014-10-07+09%3A35%3A04.576727%2B01",
            "id": "1262",
            "issue": "1085",
            "user": "vmilman"
        },
        {
            "content": "User+chandley+started+a+discusssion+on+the+tracker+item%3A+%3Ca+href%3D%22javascript%3A%3B%22+class%3D%22discuss+%22+data-section%3D%22trackeritem%22++data-ref-id%3D%221387%22+data-forum-name%3D%22SEDC+error+%22+onMouseOver%3D%22tooltip%28%27SEDC+error+%27%29%22+onmouseout%3D%22tooltipexit%28%29%22%3E%0A%09%09%09%09%09%09%3Cimg+src%3D%22%2Fimages%2Fchat_icon_24.png%22+alt%3D%22SEDC+error+%22+%2F%3E%0A%09%09%09%09%09%3C%2Fa%3E",
            "created_on": "2016-03-29+15%3A08%3A47.050882%2B01",
            "id": "1525",
            "issue": "1387",
            "user": "chandley"
        },
        {
            "content": "User+aperlov+started+a+discusssion+on+the+tracker+item%3A+%3Ca+href%3D%22javascript%3A%3B%22+class%3D%22discuss+%22+data-section%3D%22trackeritem%22++data-ref-id%3D%221560%22+data-forum-name%3D%22NMR+JCoupling+if+run+as+continuation+produces+something+different%22+onMouseOver%3D%22tooltip%28%27NMR+JCoupling+if+run+as+continuation+produces+something+different%27%29%22+onmouseout%3D%22tooltipexit%28%29%22%3E%0A%09%09%09%09%09%09%3Cimg+src%3D%22%2Fimages%2Fchat_icon_24.png%22+alt%3D%22NMR+JCoupling+if+run+as+continuation+produces+something+different%22+%2F%3E%0A%09%09%09%09%09%3C%2Fa%3E",
            "created_on": "2016-04-29+15%3A54%3A24.760911%2B01",
            "id": "1538",
            "issue": "1560",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.+Now+robust+wrt+changing+grid+scale+%26amp%3B+cut-off+energy+etc.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2016-04-30+01%3A04%3A07.544172%2B01",
            "id": "1543",
            "issue": "1439",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThere+may+be+a+common+cause+with+several+more+of+the+failures+reported+recently.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+error+lay+in+%22cell_reread%28%29%22%2C+which+was+ignoring+a+number+of+variables+in+the+.cell+including+%25BLOCK+PHONON_SUPERCELL_MATRIX+and+the+supercell+kpoint+specification.%C2%A0+What+seems+to+have+happened+is+that%3Cbr+%2F%3E%0Awe+were%2C+up+till+now%2C+getting+away+with+this+because+the+values+from+%22cell_read%22+persisted+in+%22current_cell%22.%3Cbr+%2F%3E%0AThe+changes+to+deprecate+current_cell+appear+to+have+broken+this+persistence%2C+and+these+variables+are+not+being%3Cbr+%2F%3E%0Acorrectly+set+by+the+current+code.%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+suspect+there+are+more%2C+similar+cases+to+find%2C+and+update+in+cell_reread.%C2%A0+Over+to+you+Stewart....%C2%A0+I+have+attached+my+patch+which+rereads+the+phonon+supercell+stuff.%3C%2Fp%3E%0A%0A%3Cp%3E%0AKeith%3C%2Fp%3E%0A",
            "created_on": "2016-04-30+15%3A09%3A44.540565%2B01",
            "id": "1544",
            "issue": "1559",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+fixed+this+prior+to+the+codefest+merge.+The+Hubbard+U+wasn%27t+being+initialised+correctly+on+a+restart.%3C%2Fp%3E%0A",
            "created_on": "2016-05-01+13%3A00%3A10.179288%2B01",
            "id": "1545",
            "issue": "1551",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AThe+message+about+singular+supercell+matrix+has+disappeared%2C+but+the+frequencies+are+not+good%3A%C2%A0at+any+k-point+there+are+two+triple+degenerate+modes+which+does+not+sound+right+at+all.+I+attached+the+latest%C2%A0%3Ca+href%3D%22https%3A%2F%2Fccpforge.cse.rl.ac.uk%2Fgf%2Fdownload%2Ftrackeritem%2F1559%2F7649%2FBN_PhonDisp.res.castep%22%3EBN_PhonDisp.res.castep%3C%2Fa%3E%C2%A0output.%3C%2Fp%3E%0A",
            "created_on": "2016-05-18+16%3A11%3A54.049822%2B01",
            "id": "1553",
            "issue": "1559",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AI+can+reproduce+this.+It+happens+when+we+are+k-point+parallel+and+the+k-points+are+non-evenly+distributed.%3C%2Fp%3E%0A",
            "created_on": "2015-03-17+11%3A19%3A34.871714%2B00",
            "id": "1314",
            "issue": "1212",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AVictor%2C%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%3Cp%3E%0AThe+problem+here+is+that+the+original+spec+is+at+variance+with+CASTEP+principles+and+common+sense.%C2%A0+It+is+a+shame+that+this+nonsense+slipped+passed+review.%3C%2Fp%3E%0A%3Cp%3E%0ACASTEP+regards+an+atom+of+a+species+as+being+potentially+symmetry+equivalent+to+any+other+atom%2C+and+it+is+fundamentally+inconsistent+with+that+principle+to+attempt+to+make+them+different.+Otherwise+density-symmetrize+will+do+thw+rong+thing.%3C%2Fp%3E%0A%3Cp%3E%0AYour+final+block+is+the+correct+way+to+handle+this.+CASTEP+%2AMUST%2A+be+told+that+the+atoms+differ%2C+and+the+extended+label+is+the+way+we+do+this.%3C%2Fp%3E%0A%3Cp%3E%0AI+think+we+can+regard+it+as+a+bug+that+CASTEP+accepts+the+first+block+without+error+and+will+fix+this+by+checking+and+aborting+in+such+cases.%3C%2Fp%3E%0A%3Cp%3E%0AKeith%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-03-19+11%3A44%3A25.258609%2B00",
            "id": "1315",
            "issue": "1253",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+do+agree+with+your+reasoning%2C+though+I+have+a+suspicion+that+for+example+spins+are+allowed+to+be+different....+AT+least+this+way+I+managed+to+get+some+antiferro+magnetic+solutions...%3C%2Fp%3E%0A%3Cp%3E%0ASasha%3C%2Fp%3E%0A",
            "created_on": "2015-03-19+12%3A50%3A21.654591%2B00",
            "id": "1317",
            "issue": "1253",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0ADone+in+Codefest+March+2015.%3C%2Fp%3E%0A",
            "created_on": "2015-03-31+14%3A25%3A12.136303%2B01",
            "id": "1322",
            "issue": "974",
            "user": "mijp1"
        },
        {
            "content": "Bug+fixed+by+checkin.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2011-12-01+17%3A28%3A01.147223%2B00",
            "id": "769",
            "issue": "624",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThanks+Keith%2C%3C%2Fp%3E%0A%3Cp%3E%0ANo+problem+-+we%27ll+modify+file+writer+to+use+labels+like+in+the+second+example.%3C%2Fp%3E%0A%3Cp%3E%0AA+question+regarding+the+spec+and+design+-+CASTEP+seems+to+accept+happily+different+spin%2Fmagmom+values+without+the+need+for+labels.+Is+the+logic+for+this+variable+different+by+design+or+by+accident+%28I+am+not+asking+to+chang+it%21%29%3F%3C%2Fp%3E%0A%3Cp%3E%0AVictor%3C%2Fp%3E%0A",
            "created_on": "2015-03-19+12%3A51%3A40.381458%2B00",
            "id": "1318",
            "issue": "1253",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AHopefully+this+request+can+be+closed+following+Codefest+2016.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A08%3A51.024504%2B01",
            "id": "1526",
            "issue": "899",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+same+story+is+with+TD+DFT+-+ok+if+run+from+scratch%2C+rubbish+if+as+continuation....%3C%2Fp%3E%0A",
            "created_on": "2016-04-29+15%3A56%3A46.291213%2B01",
            "id": "1539",
            "issue": "1560",
            "user": "aperlov"
        },
        {
            "content": "Fixed+by+Hg+checkin+b8a864860132%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-03-30+11%3A24%3A54.472508%2B01",
            "id": "809",
            "issue": "695",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+can+be+closed.%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A08%3A57.997171%2B01",
            "id": "1527",
            "issue": "1387",
            "user": "chandley"
        },
        {
            "content": "%3Cp%3E%0AThe+CASTEP+doctor+prescribes+attending+the+CASTEP+workshop+to+learn+about+convergence+plus+a+course+of+valium+for+this+case.+Not+a+bug.%3C%2Fp%3E%0A%0A%3Cp%3E%0AClosed.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-08-31+15%3A45%3A00.80181%2B01",
            "id": "1630",
            "issue": "1605",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+rewrote+cell_find_related_atoms+to+create+a+version+optimised+for+supercells%2C+and+a+new+versio+of+cell_reduce_symmetry+to+efficiently+handle+the+case+of+computing+the+subgroup+symmetry+on+makeing+a+supercell.%3C%2Fp%3E%0A%0A%3Cp%3E%0ANow+cell_supercell+is+almost+completely+correct+for+all+supercell+use%2C+and+reasonably+efficient.%C2%A0+The+only+compromise+is+to+make+the+call+to+spglib+to+analyse+the+symmetry+optional%2C+as+this+is+still+rather+too+costly+for+routine+use.%3C%2Fp%3E%0A%0A%3Cp%3E%0ATogether+with+some+other+optimizations%2C+this+reduces+the+time+for+the+test+case+run+on+16+cores+from+2900s+to+111s.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-08-31+16%3A27%3A25.107684%2B01",
            "id": "1631",
            "issue": "1614",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ANot+reproducible.%C2%A0+This+input+deck+works+correctly+for+me.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-08-31+17%3A18%3A36.750454%2B01",
            "id": "1632",
            "issue": "1620",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change+%287124%29.%3C%2Fp%3E%0A",
            "created_on": "2016-09-01+09%3A18%3A17.493532%2B01",
            "id": "1633",
            "issue": "1561",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0ABoth+spectral+and+bandstructure+respect+the+change+in+xc+functional.%3C%2Fp%3E%0A",
            "created_on": "2016-09-01+23%3A52%3A40.509544%2B01",
            "id": "1635",
            "issue": "1613",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AYou+are+correct+that+spectral_write_eigenvalues+doesn%27t+do+anything+%28it+was+created+because+bs_write_eigenvalues+existed%29.+The+eigenvalues+are+always+written+in+the+bands+file+-+and+that+is+their+primary+location.+I+never+understood+why+the+old+bandstructure+code+wrote+the+eigenvalues+in+the+castep+file.+We+could%2C+of+course%2C+duplicate+the+information+there.+Can+someone+make+a+good+case+why%3F%3C%2Fp%3E%0A",
            "created_on": "2016-09-02+08%3A37%3A42.839522%2B01",
            "id": "1636",
            "issue": "1548",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0ADone.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2016-09-02+18%3A20%3A45.071079%2B01",
            "id": "1637",
            "issue": "1265",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThis+cannot+be+reproduced+with+the+present+code+%2817.2%29%3B+marking+as+resolved.%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-09-06+15%3A46%3A19.146467%2B01",
            "id": "1638",
            "issue": "688",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+17.2%3C%2Fp%3E%0A%0A%3Cp%3E%0A%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-09-10+12%3A07%3A51.232413%2B01",
            "id": "1640",
            "issue": "1606",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ACode+changed+to+do+same+approximation+as+before.%3C%2Fp%3E%0A",
            "created_on": "2016-09-11+21%3A35%3A49.986409%2B01",
            "id": "1643",
            "issue": "1486",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AThe+case+for+this+has+been+made+irrelevant+by+the+new+2n%2B1+raman+functionality.+Closed.%3C%2Fp%3E%0A",
            "created_on": "2016-09-15+10%3A32%3A10.808039%2B01",
            "id": "1648",
            "issue": "1207",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThank+you+for+the+report.+%C2%A0CASTEPconv+has+its+own+project+page+on+CCPForge%3A%C2%A0%3Ca+href%3D%22http%3A%2F%2Fccpforge.cse.rl.ac.uk%2Fgf%2Fproject%2Fcastepconv%2F.%22%3Ehttp%3A%2F%2Fccpforge.cse.rl.ac.uk%2Fgf%2Fproject%2Fcastepconv%2F.%3C%2Fa%3E%3C%2Fp%3E%0A%3Cp%3E%0AYou+may+wish+to+contact+the+author%2C+Simone+Sturniolo%2C+directly+for+discussion%3A+simone.sturniolo%40stfc.ac.uk%3C%2Fp%3E%0A",
            "created_on": "2015-06-11+09%3A38%3A31.639256%2B01",
            "id": "1345",
            "issue": "1306",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AActually+one+does+not+need+any+continuation....It+crashes+without%3C%2Fp%3E%0A",
            "created_on": "2015-06-15+16%3A36%3A01.832711%2B01",
            "id": "1346",
            "issue": "889",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0AModule+integrated+in+md+%26amp%3B+geom%2C+and+checked+in.%3C%2Fp%3E%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2015-06-26+10%3A55%3A28.89942%2B01",
            "id": "1349",
            "issue": "1264",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ADone.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2015-06-26+11%3A22%3A52.307995%2B01",
            "id": "1350",
            "issue": "1281",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ADone.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2015-06-26+17%3A04%3A30.079346%2B01",
            "id": "1352",
            "issue": "961",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AStewart+-+any+views%3F%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-07-15+12%3A58%3A35.950813%2B01",
            "id": "1365",
            "issue": "1322",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AMarked+as+done.%C2%A0+Keith%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-07-15+13%3A00%3A10.300213%2B01",
            "id": "1366",
            "issue": "947",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ASeems+sensible.%C2%A0+Will+take+a+look.%3C%2Fp%3E%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-07-15+13%3A01%3A22.4927%2B01",
            "id": "1367",
            "issue": "1207",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+think+Chris+added+the+pseudopotentials+bib+entry+during+Codefest+2016.%C2%A0+The+XC+functionals+are+still+outstanding+-+bib.f90+only+has+PZ-LDA+and+PBE%2C+but+no+calls+have+been+added.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-03-29+15%3A12%3A33.633209%2B01",
            "id": "1528",
            "issue": "942",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+was+a+0%2F0+error.+fixed+in+17.2%3C%2Fp%3E%0A",
            "created_on": "2016-09-10+12%3A08%3A48.803844%2B01",
            "id": "1641",
            "issue": "1565",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ACan%27t+repeat.+Attached+files+contain+no+input.%3C%2Fp%3E%0A",
            "created_on": "2016-09-11+21%3A38%3A12.65164%2B01",
            "id": "1644",
            "issue": "1562",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AThe+default+C17+set+of+OTFG+potentials+include+modified+potentials+which+%28hopefully%29+remove+low+lying+ghost+states%2C+and+maintain+accuracy%2C+as+indicated+by+Delta.%3C%2Fp%3E%0A",
            "created_on": "2016-09-19+12%3A41%3A49.103897%2B01",
            "id": "1650",
            "issue": "1607",
            "user": "cjp10"
        },
        {
            "content": "Reworked+as+described+but+now+a+warning+message+rather+than+a+strict+abort.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2012-08-28+13%3A40%3A54.318462%2B01",
            "id": "882",
            "issue": "527",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AWorks+after+Stewart%27s+change+to+cell_reread%2C+code+version+7053%3C%2Fp%3E%0A",
            "created_on": "2016-06-02+12%3A49%3A16.598953%2B01",
            "id": "1564",
            "issue": "1559",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ANow+works+correctly+after+a+fix+in+parameters.f90+%289+May%2C+version+7038%29%3C%2Fp%3E%0A",
            "created_on": "2016-06-02+13%3A59%3A55.581615%2B01",
            "id": "1565",
            "issue": "1564",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ADixed+by+Matt%3B+the+problem+was+with+bad+reading+of+the+cutoff+energy%2C+that+ended+up+as+a+bogus+gmax.%3C%2Fp%3E%0A",
            "created_on": "2016-06-17+12%3A02%3A55.630874%2B01",
            "id": "1568",
            "issue": "1560",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AWorks+in+v17..2.+Must+have+been+fixed+without+closing+bug.+Close+for+now.%3C%2Fp%3E%0A",
            "created_on": "2016-09-11+21%3A43%3A14.629685%2B01",
            "id": "1645",
            "issue": "1590",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AI+am+afraid+this+is+still+not+correct+-+screened+XC+produces+the+same+eigenvalues+as+PBE.%3C%2Fp%3E%0A",
            "created_on": "2016-09-23+09%3A33%3A21.628602%2B01",
            "id": "1654",
            "issue": "1613",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThe+error+is%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AError%3A+io_open_file%3A+flag+not+recognised%3C%2Fp%3E%0A",
            "created_on": "2017-03-07+17%3A44%3A50.394395%2B00",
            "id": "1761",
            "issue": "1703",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+rename%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+12%3A20%3A11.599493%2B01",
            "id": "1806",
            "issue": "1687",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ANot+actioned.%3C%2Fp%3E%0A",
            "created_on": "2015-08-21+14%3A08%3A11.615721%2B01",
            "id": "1377",
            "issue": "21",
            "user": "cjp10"
        },
        {
            "content": "%3Cp%3E%0AThe+new+keywords+have+been+added+to+parameters+in+time+for+v9.0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+required+support+in+MD+has+not+yet+been+finalized+and+will+not+appear+in+v9.0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2015-08-27+12%3A12%3A51.232125%2B01",
            "id": "1381",
            "issue": "1265",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AI+remember+composing+a+response+but+have+a+horrible+feeling+it+was+never+sent.%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+only+other+set+I+can+think+of+would+be+%22SI%22%2C+which+would+use+some+suitably-chosen+prefixes+and+scales+of+the+SI+units.+That+would+be+something+for+purists%2C+but+I+can%27t+see+a+strong+use+case+for+it.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AKeith%3C%2Fp%3E%0A",
            "created_on": "2015-08-27+16%3A02%3A46.905471%2B01",
            "id": "1383",
            "issue": "1248",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+issue+was+more+complex+because+of+%28a%29+confusion+between+crystal+and+molecular+properties%2C+which+led+to+an+error+of+multiplication+by+sqrt%28volume%29+in+the+tensors%2C+%28b%29+a+nonstandard+computation+which+actually+computed+the+tensors+in+non-atomic+units+and+%28c%29+an+error+in+the+specification+of+the+output+units+and+%28d%29+an+error+in+the+conversion+to+raman+activities+and+%28e%29+unit+error+in+the+Raman+activities.+The+good+news+is+that+I+think+I+have+fixed+all+of+this.+I+have+tested+on+Silicon+and+AlAs%2C+and+get+Raman+Polarizabilities+of+19.8+and+9.1+Ang%2A%2A2%2C+which+agree+with+the+results+of+Veithen+and+Gonze+and+Ghozes+%5B%3Ca+href%3D%22http%3A%2F%2Flink.aps.org%2Fdoi%2F10.1103%2FPhysRevB.71.125107%22%3Ehttp%3A%2F%2Flink.aps.org%2Fdoi%2F10.1103%2FPhysRevB.71.125107%3C%2Fa%3E%5D+of+20.0+and+8.48.+The+Raman+Polarizability+in+A%2A%2A2+is+not+what+we+print%2C+but+is+defined+as+a%3Dsqrt%28reduced_mass%2Avolume%29+-+as+in+VGG+Equation+48.+The+Raman+susceptibility+tensor%2C+which+we+print+is+in+sqrt%28A%2Famu%29.+%5BIs+there+time+to+introduce+a+new+set+of+raman_susceptibility+units+for+this+release%3F%5D+The+orientationally+averaged+Raman+%3Cstrong%3E%2Aactivity%2A%3C%2Fstrong%3E+is+in+units+of+A%2A%2A4%2Famu%2C+and+has+the+same+numerical+value+as+in+CASTEP+8.0.+I+have+benchmarked+this+for+a+CH4+molecule+and+get+%5B4.53%2C+255.6%2C+146.2%5D+compared+to+%5B4.4%2C+247%2C+141%5D+as+published+by+Porezag+and+Pedersen+%5B%3Ca+href%3D%22http%3A%2F%2Flink.aps.org%2Fdoi%2F10.1103%2FPhysRevB.54.7830%22%3Ehttp%3A%2F%2Flink.aps.org%2Fdoi%2F10.1103%2FPhysRevB.54.7830%3C%2Fa%3E%5D.+To+reflect+the+correct+conversion+I+have+updated+the+output+to+include+the+correct+names+of+the+tensors+%28Raman+Susceptibility%29+and+intensity+%28Raman+activity%29.+I+recall+that+we+originally+benchmarked+the+Raman+code+against+molecular+systems%2C+and+we+must+have+only+looked+at+the+Raman+activity.+The+numbers+from+CASTEP+9+should+be+unchanged+from+CASTEP+8%2C+so+those+benchmarks+still+stand.+%5BBut+I+was+unable+to+locate+any+files+or+emails+so+if+anyone+has+a+copy+I+would+appreciate+this.%5D+But+as+of+CASTEP+9+we+now+correctly+compute+and+output+the+Susceptibility+tensor%2C+and+this+also+agrees+with+VGG%27s+numbers.%3C%2Fp%3E%0A",
            "created_on": "2015-09-14+10%3A10%3A35.920302%2B01",
            "id": "1389",
            "issue": "1085",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AChanged+default+values+to+match+geometry%2C+i.e.%3C%2Fp%3E%0A%0A%3Cp%3E%0Acurrent_params%25tssearch_force_tol%C2%A0%C2%A0+%3D%C2%A0+current_params%25geom_force_tol%3Cbr+%2F%3E%0Acurrent_params%25tssearch_disp_tol+%C2%A0+%C2%A0+%3D%C2%A0+current_params%25geom_disp_tol%3Cbr+%2F%3E%0Acurrent_params%25tssearch_energy_tol+%3D%C2%A0+current_params%25geom_energy_tol%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+agree+about+RMS+and+windowing+but+don%27t+want+to+change+that+during+code+freeze.+Will+tackle+afterwards.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2015-09-15+17%3A48%3A29.553136%2B01",
            "id": "1391",
            "issue": "1262",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AWe+have+discussed+this+and+apart+from+%27output_unit%3Datomic%27+there+have+been+no+other+suggestions+for+a+group+of+units+such+as+this.+Are+there+any%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2015-08-27+12%3A13%3A59.319388%2B01",
            "id": "1382",
            "issue": "1248",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed.%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+12%3A21%3A00.532803%2B01",
            "id": "1807",
            "issue": "1627",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AApparently+fixed+in%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0Achangeset%3A%C2%A0%C2%A0+6574%3A33eacf6adb67%3Cbr+%2F%3E%0Aparent%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+6567%3Ac4e1306face7%3Cbr+%2F%3E%0Auser%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Jonathan+Yates+%26lt%3Bjonathan.yates%40materials.ox.ac.uk%26gt%3B%3Cbr+%2F%3E%0Adate%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Wed+Mar+18+21%3A51%3A31+2015+%2B0000%3Cbr+%2F%3E%0Asummary%3A%C2%A0%C2%A0%C2%A0%C2%A0+Update+spectral+to+respect+write_orbitals%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-10-13+10%3A25%3A10.555379%2B01",
            "id": "1406",
            "issue": "1369",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0A13+Oct+2015%3A%C2%A0+Retest+with+CASTEP+9.0%3C%2Fp%3E%0A%0A%3Cp%3E%0A1.+Hooray%21+The+Si8-allbands+tests+work+at+last.%3C%2Fp%3E%0A%0A%3Cp%3E%0A2.+Cu_bis-small+still+aborts+with%3C%2Fp%3E%0A%0A%3Cp%3E%0Awave_add_slice_wv%3A+nb_dst+is+too+large%2C+insufficient+bands+in+wvfn%3Cbr+%2F%3E%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0A%C2%A0wave_add_slice_wv%3Cbr+%2F%3E%0A%C2%A0wave_transform_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_orthonormalise_over_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_Sorthonormalise_wv_ks%3Cbr+%2F%3E%0A%C2%A0wave_Sorthonormalise_wv%3Cbr+%2F%3E%0A%C2%A0wave_initialise_wv%3Cbr+%2F%3E%0A%C2%A0model_initialise%3Cbr+%2F%3E%0A%C2%A0castep%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-10-13+10%3A49%3A21.247354%2B01",
            "id": "1408",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+behaviour+has+changed+with+the+9.0+updates.%C2%A0+Now%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25block+species_pot%3Cbr+%2F%3E%0ASi_00.recpot%3Cbr+%2F%3E%0A%25endblock+species_pot%3C%2Fp%3E%0A%0A%3Cp%3E%0ASi_00.recpot+is+misinterpreted+as+a+library.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAmusingly%2C+this+causes+Si_00.recpot+to+be+actually+used+for+both+atoms+with%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25block+positions_frac%3Cbr+%2F%3E%0ASi+0.00+0.00+0.00%3Cbr+%2F%3E%0AGe+0.25+0.25+0.25%3Cbr+%2F%3E%0A%25endblock+positions_frac%3C%2Fp%3E%0A%0A%3Cp%3E%0A%3Cbr+%2F%3E%0Awhich+is+still+unexpected+and+surprising+behaviour.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-10-13+10%3A59%3A44.464989%2B01",
            "id": "1409",
            "issue": "1113",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AClosed+as+obsolete+for+9.0%3C%2Fp%3E%0A",
            "created_on": "2015-10-13+16%3A54%3A40.685406%2B01",
            "id": "1410",
            "issue": "1118",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+actual+memory+estimate+which+was+integer+overflowing+is+in+phonon%2C+in+%22phonon_castep_calc_storage%22.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+ram_acc%3D+ram_acc%2B+real%28%28current_cell%25num_phonon_kpoints%2B1%29%2A9%2Acurrent_cell%25num_ions%2A%2A2%2Aalgor_sizeof%28cmplx_i%29%2Cdp%29%2F%281024%2A%2A2%29%3C%2Fp%3E%0A%0A%3Cp%3E%0AHowever+the+statements+from+electronic+are+indeed+vulnerable+to+integer+overflow%2C+as+Victor+correctly+identified.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+fix+is+to+convert+one+of+the+individual+terms+in+the+product+to+real%2C+and+not+the+whole+product%2C+as+currently+done+here.+That+is+too+late+to+avoid+the+overflow.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-10-14+15%3A33%3A27.76727%2B01",
            "id": "1412",
            "issue": "1395",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AInterestingly+enough+this+happens+only+if+I+ask%C2%A0for%C2%A0finite_basis_corr%3C%2Fp%3E%0A%0A%3Cp%3E%0Acommenting+this+line+in+the+param+file+bring+Fermi+level+in+the+bands+file+to+normal...%3C%2Fp%3E%0A",
            "created_on": "2016-06-27+14%3A59%3A40.097323%2B01",
            "id": "1577",
            "issue": "1563",
            "user": "aperlov"
        },
        {
            "content": "%3Cp%3E%0AAlmost+certainly+%22mostly+harmless%22%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-10-13+10%3A27%3A38.505339%2B01",
            "id": "1407",
            "issue": "1307",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ACheckpointing+is+not+part+of+the+NMR+functionality.%3C%2Fp%3E%0A%0A%3Cp%3E%0AWill+not+fix.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+11%3A59%3A11.618121%2B01",
            "id": "1804",
            "issue": "60",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAttached+files+from+the+riginal+report%3C%2Fp%3E%0A",
            "created_on": "2017-08-03+15%3A14%3A32.973686%2B01",
            "id": "1897",
            "issue": "1761",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change+as+indicated+by+Victor.+Now+passes+test+OK.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2016-06-29+23%3A59%3A32.535017%2B01",
            "id": "1581",
            "issue": "1563",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThe+problem+occurs+because+the+following+call+sets+current_cell%25phonon_supercell_matrix+to+zero%2C+and+obviously+that+makes+it+hard+to+invert.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0%21+CODEFEST+KR+-+model_initialise+uses+current_cell+as+input.+%C2%A0Copy+across+for+now.%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0call+cell_copy%28supercell%2C+current_cell%29%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-06-28+16%3A55%3A03.875553%2B01",
            "id": "1579",
            "issue": "1596",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThe+latest+version+des+not+crash%2C+but+numerical+results+are+different+from+the+previous+version%3C%2Fp%3E%0A",
            "created_on": "2016-07-13+10%3A54%3A21.727385%2B01",
            "id": "1587",
            "issue": "1565",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A",
            "created_on": "2016-09-30+18%3A44%3A27.169364%2B01",
            "id": "1665",
            "issue": "1613",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0APerhaps+this+stop-gap+measure+is+sufficient%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0%21+CODEFEST+KR+-+model_initialise+uses+current_cell+as+input.+%C2%A0Copy+across+for+now.%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0%21+VM%3A+make+sure+to+keep+%C2%A0phonon_supercell_matrix%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0supercell%25phonon_supercell_matrix%3Dcurrent_cell%25phonon_supercell_matrix%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0call+cell_copy%28supercell%2C+current_cell%29%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-07-01+16%3A22%3A26.684844%2B01",
            "id": "1584",
            "issue": "1596",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by%C2%A0+Changeset%3A+7087+%28afccf4ed764b%29%3C%2Fp%3E%0A%0A%3Cp%3E%0AIt+seems+that+cell_supercell%28%29+was+called+from+hirshfeld+%28with+a+unit+supercell%29+on+the+supercell+generated+from+within+phonon.%C2%A0+The+case+of+supercelling+a+supercell+was+not+being+handled+correctly%2C+and+now+is.%3C%2Fp%3E%0A",
            "created_on": "2016-07-13+09%3A43%3A14.138704%2B01",
            "id": "1585",
            "issue": "1596",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+problem+was+with+the+use+of+an+old+version+of+spglib+library%3C%2Fp%3E%0A",
            "created_on": "2016-10-03+15%3A20%3A45.936395%2B01",
            "id": "1668",
            "issue": "1620",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AModified+summary.+%C2%A0This+bug+became+apparent+with+the+adoption+of+OTFG+NC+PSPs.%3C%2Fp%3E%0A",
            "created_on": "2016-10-11+12%3A00%3A35.760111%2B01",
            "id": "1670",
            "issue": "1544",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+changeset+7192+%28571076d72a09%29.%3C%2Fp%3E%0A",
            "created_on": "2016-10-12+09%3A00%3A14.388288%2B01",
            "id": "1671",
            "issue": "1544",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AThis+was+actually+a+parallel+desynchronization%2C+internal+to+electronic_minimisation%28%29+resulting+following+pickup+of+an+MPI+process+left+idle+for+one+perturbation.%C2%A0+It+turns+out+that+if+the+value+of+mdl%25total+energy+differs+on+INPUT+to+electronic_minimisation%28%29+the+internal+logic+for+determining+convergence+misfires+resulting+in+a+parrall+desync+and+subsequent+crash+or+hang.%3C%2Fp%3E%0A%0A%3Cp%3E%0AFixed+by%C2%A0+re-syncing+mdl%25total+energy+following+the+pickup+of+idle+threads.+However+it+would+be+good+if+electronic_minimisation+could+be+made+more+robust.%C2%A0+I+don%27t+think+that+it+is+documented+anywhere+that+the+total+energy+value+on+input+is+significant%2C+and+this+is+not+an+obvious+thing+to+assume%21%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-10-13+12%3A35%3A09.302939%2B01",
            "id": "1672",
            "issue": "1640",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AStewart%27s+analysis+is+absolutely+correct%2C+as+supported+by+the+call+stack+at+the+time+of+crash%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0Acastepexe.exe+0000000000A2670E%3C%2Fp%3E%0A%0A%3Cp%3E%0Abasis_mp_basis_ma+12028+basis.f90+castepexe.exe+00000000009D1B81%3C%2Fp%3E%0A%0A%3Cp%3E%0Abasis_mp_basis_in+1128+basis.f90+castepexe.exe+00000000004B808C%3C%2Fp%3E%0A%0A%3Cp%3E%0Acastep_IP_run_ban+1574+castep.f90+castepexe.exe+00000000004B0D75%3C%2Fp%3E%0A%0A%3Cp%3E%0AMAIN__+650+castep.f90%3C%2Fp%3E%0A",
            "created_on": "2016-10-21+14%3A03%3A24.155958%2B01",
            "id": "1674",
            "issue": "889",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThe+underlying+reason+is+the+complex+to+gamma+basis+set+change+in+going+from+SCF+to+band+structure+calculation.+Work+around%3A+use+devel_code+GAMMA_OFF.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-10-21+14%3A46%3A27.913263%2B01",
            "id": "1675",
            "issue": "889",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AUser+is+Tom+Durrant+%28PhD+student+at+UCL%29.%3C%2Fp%3E%0A%0A%3Cp%3E%0ABug+fixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2015-10-27+12%3A13%3A25.711023%2B00",
            "id": "1437",
            "issue": "1427",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0ATested+again+in+16.1.x+-+which+includes+the+fix+so+that+my+Li2NH+MD+works+in+band+parallel.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+Cu_bis-small+example+%2Astill%2A+aborts+with+the+same+internal+error+from+wave_add_slice.%3C%2Fp%3E%0A%0A%3Cp%3E%0AIs+this+simply+because+it+is+a+spin-polarized+case%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0A%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-11-10+12%3A02%3A31.581705%2B00",
            "id": "1448",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A",
            "created_on": "2015-11-17+18%3A01%3A14.407693%2B00",
            "id": "1459",
            "issue": "499",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0AH2box10.tgz+contains+input+and+baseline.+Emprty+band+energy+is+different%2C+and+all+the+tests+returning+band+gaps+are+now+producing+different+results.B3LYP_DOS.tgz+shows+the+changes+in+eigenvalues+withiout+continuation%2C+so+continuation+might+now+be+a+red+herring+here%3C%2Fp%3E%0A",
            "created_on": "2016-07-14+09%3A48%3A20.565407%2B01",
            "id": "1589",
            "issue": "1565",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AHere+is+a+cut-down+testcase+with+a+1x1x1+supercell+which+fails+in+exactly+the+same+manner+but+far+more+quickly.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0ARunning+a+%22debug%22+build+on+this+test+case+%2828+cores%29+rather+frustratingly+gets+past+the+locus+of+the+original+failure%2C+as+far+as+2+EDFT+cycles%2C+but+then+fails+with%3C%2Fp%3E%0A%0A%3Cp%3E%0Aforrtl%3A+severe+%28408%29%3A+fort%3A+%288%29%3A+Attempt+to+fetch+from+allocatable+variable+REALSPACE_COEFFS_AT_GAMMA+when+it+is+not+allocated%3C%2Fp%3E%0A%0A%3Cp%3E%0AImage%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+PC%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Routine%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Line%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Source%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+%C2%A0%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+000000000869F1C0%C2%A0+Unknown%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Unknown%C2%A0+Unknown%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+0000000001A2C46D%C2%A0+nlpot_mp_nlpot_ap%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+6273%C2%A0+nlpot.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000006EAEFB%C2%A0+electronic_mp_ele%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+15195%C2%A0+electronic.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000006C9D84%C2%A0+electronic_mp_ele%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+14440%C2%A0+electronic.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+0000000000582AC3%C2%A0+electronic_mp_ele%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+1235%C2%A0+electronic.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+000000000056CD85%C2%A0+electronic_mp_ele%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+503%C2%A0+electronic.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+000000000235BA26%C2%A0+phonon_mp_phonon_%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+4137%C2%A0+phonon.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+000000000224B5C0%C2%A0+phonon_mp_phonon_%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+628%C2%A0+phonon.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+000000000040F11C%C2%A0+MAIN__%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+633%C2%A0+castep.f90%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000004068CE%C2%A0+Unknown%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Unknown%C2%A0+Unknown%3Cbr+%2F%3E%0Alibc.so.6%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00007F7841703B05%C2%A0+Unknown%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Unknown%C2%A0+Unknown%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000004067DF%C2%A0+Unknown%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Unknown%C2%A0+Unknown%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0Awhich+may+be+a+different+problem.....%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2015-11-24+17%3A34%3A08.486329%2B00",
            "id": "1463",
            "issue": "1465",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+was+caused+by+a+combination+of+two+things.%3C%2Fp%3E%0A%0A%3Cp%3E%0A1.+spglib+%26lt%3B%3D+1.9.5+space+group+detection+fails+in+the+case+where+atoms+overlap%3C%2Fp%3E%0A%0A%3Cp%3E%0A2.+spglib_get_dataset+returns+a+null+pointer+on+failure+to+detect+a+space+group%3C%2Fp%3E%0A%0A%3Cp%3E%0A3.+spglib_f08.f90+%28from+spgib%29+failed+to+correctly+handle+error+conditions+-+specifically+it+called+c_f_pointer+on+the+null+pointer+return+resulting+in+a+segfault.%3C%2Fp%3E%0A%0A%3Cp%3E%0AA.+I+have+fixed+spglib_f08+by+adding+some+semi-decent+error+handling%2C+plus+access+to+the+new+error+handling+functions+in+1.9.5.+This+means+that+a+VCA+run+succeeds+but+prints+an+empty+string+for+the+spacegroup+-+plus+a+.0001.err+file+with+the+spglib+error+message%3C%2Fp%3E%0A%0A%3Cp%3E%0AB.+After+discussing+this+with+Atshushi+Togo%2C+future+versions+of+spglib+will+be+able+to+detect+space+groups+in+the+presence+of+partial+occupancies.%C2%A0+This+will+happen+with+an+SPGlib+version+upgrade.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-11-01+13%3A11%3A49.356378%2B00",
            "id": "1685",
            "issue": "1654",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+for+17.2.%C2%A0+cell_read+now+defaults+%22supercell_kpoint_mp_grid%22+to+%22-2+-2+-2%22%2C+and+cell_supercell+uses+this+to+discriminate+.%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-11-06+16%3A56%3A49.188361%2B00",
            "id": "1689",
            "issue": "1659",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AOK%2C+let%27s+say+it%27s+not+a+bug+and+wait+for+any+further+arguments+from+the+original+reporters.%3C%2Fp%3E%0A",
            "created_on": "2016-11-14+17%3A40%3A17.973513%2B00",
            "id": "1691",
            "issue": "1548",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AAnother+datum%2C+more+relevant+methinks.%C2%A0+Running+with+the+Oracle+compiler+in+debug+mode+gives+the+following+abort%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%2A%2A%2A%2A%2A%2A%C2%A0+FORTRAN+RUN-TIME+SYSTEM%C2%A0+%2A%2A%2A%2A%2A%2A%3Cbr+%2F%3E%0ASubscript+out+of+range.+Location%3A%C2%A0+line+5092+column+54+of+%27ion.f90%27%3Cbr+%2F%3E%0ASubscript+number+1+has+value+7+in+array+%27BETA_PHI%27%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%2A%2A%2A+Process+received+signal+%2A%2A%2A%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+Signal%3A+Aborted+%286%29%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+Signal+code%3A%C2%A0+%28-6%29%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+0%5D+%2Flib64%2Flibpthread.so.0%28%2B0xf890%29+%5B0x7f595739e890%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+1%5D+%2Flib64%2Flibc.so.6%28gsignal%2B0x37%29+%5B0x7f5956d1c187%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+2%5D+%2Flib64%2Flibc.so.6%28abort%2B0x118%29+%5B0x7f5956d1d538%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+3%5D+%2Fopt%2Foracle%2Fsolarisstudio12.4%2Flib%2Famd64%2Flibfsu.so.1%28%2B0x17c7a%29+%5B0x7f595782fc7a%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+4%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x1c0be68%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+5%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0xdf2f89%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+6%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x4ead31%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+7%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x4fbd5f%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+8%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x5728c4%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B+9%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x1153036%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B10%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x10f5987%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B11%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x479f11%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B12%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x406e38%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B13%5D+%2Flib64%2Flibc.so.6%28__libc_start_main%2B0xf5%29+%5B0x7f5956d08b05%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%5B14%5D+%2Fhome%2Fkr%2FCASTEP%2Fbuild%2FCASTEP-head.hg%2Fobj%2Flinux_x86_64_sun--debug%2Fcastep.mpi%28%29+%5B0x406cd2%5D%3Cbr+%2F%3E%0A%5Bslater%3A03606%5D+%2A%2A%2A+End+of+error+message+%2A%2A%2A%3C%2Fp%3E%0A%0A%3Cp%3E%0ADespite+the+lack+of+line+numvers+in+the+traceback%2C+the+array+bounds+error+occurs+just+18+lines+before%3Cbr+%2F%3E%0A%C2%A0the+original+segmentation+fault.%C2%A0+Perhaps+this+is+closer+to+the+root+cause+of+the+crash.%3C%2Fp%3E%0A",
            "created_on": "2015-11-24+17%3A52%3A32.375679%2B00",
            "id": "1464",
            "issue": "1465",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAha%2C+I+think+I+have+spotted+the+cause.+The+Intel+compiler+debug+did+indeed+pick+this+up%2C+as+did+the+Oracle+-+I+should+have+looked+more+closely.%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+call+stack+of+the+failure+is....%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0castepexe.exe%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000008B7760%C2%A0+ion_mp_ion_beta_a%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+5110+ion.f90%3Cbr+%2F%3E%0Acastepexe.exe%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+00000000018F8232%C2%A0+nlpot_mp_nlpot_ap%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+6273+nlpot.f90%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+oracle+compiler%27s+diagnostic+is%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0Subscript+out+of+range.+Location%3A%C2%A0+line+5092+column+54+of+%27ion.f90%27%3Cbr+%2F%3E%0ASubscript+number+1+has+value+7+in+array+%27BETA_PHI%27%3C%2Fp%3E%0A%0A%3Cp%3E%0Awhile+the+Intel%27s+is+at+almost+the+same+spot+in+the+call+stack%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0forrtl%3A+severe+%28408%29%3A+fort%3A+%288%29%3A+Attempt+to+fetch+from+allocatable+variable+REALSPACE_COEFFS_AT_GAMMA+when+it+is+not+allocated%3C%2Fp%3E%0A%0A%3Cp%3E%0AImage%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+PC%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Routine%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Line+Source%3Cbr+%2F%3E%0Acastep.mpi%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+0000000001A2C46D%C2%A0+nlpot_mp_nlpot_ap%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+6273+nlpot.f90%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+call+in+question+reads%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+call+ion_beta_add_real_all%28nsp%2Cni%2Cslice%25kpoint%2Cnl_d%25real_nl_d%28%3A%2C%3A%2Cni%2Cnsp%2Cslice%25spin%29%2C+%26amp%3B%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+%26amp%3B+weight_gamma%2CVnl_slice%25realspace_coeffs_at_gamma%28%3A%2C1%2Cnb%29%29%3C%2Fp%3E%0A%0A%3Cp%3E%0Aand+indeed+there+is+no+sign+that+%22Vnl_slice%25realspace_coeffs_at_gamma%22+is+ever+allocated.%C2%A0+Suspiciously%2C+further+up+the+routine+%22nlpot_apply_real_slice%22+I+see%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0+if%28.not.allocated%28Vnl_slice%25realspace_coeffs%29%29+then%3C%2Fp%3E%0A%0A%3Cp%3E%0Aallocate%28Vnl_slice%25realspace_coeffs%28max_grid_points%2C1%2CVnl_slice%25realspace_nbands_max%29%2Cstat%3Dierr%29%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+if%28ierr%2F%3D0%29+call+io_abort%28%27Error+allocating+memory+to+Vnl_slice%25realspace_coeffs+in+nlpot_apply_real_slice%27%29%3Cbr+%2F%3E%0A%C2%A0%C2%A0%C2%A0+end+if%3C%2Fp%3E%0A%0A%3Cp%3E%0A-+so+it+appears+that+in+the+complex+case%2C+it+was+deemed+necessary+to+allocate+Vnl_slice%25realspace_coeffs%2C+but+this+was+missed+for+the+Gamma+case.%C2%A0+I+would+also+guess+that+%22Vnl_slice%25realspace_coeffs_at_gamma%22+was+allocated+elsewhere+%28in+pot+or+wave%29+for+the+initial+SCF%2C+but+deallocated+upon+the+supercell+generation+and+basis+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAdding+in+the+obvious+%22allocate%22+clause+does+indeed+allow+the+run+to+proceed+past+the+point+of+failure.+The+call+to+%22nlpot_apply_real%22+at+electronic.f90%3A15195+now+succeeds%2C+but+electronic_allpy_H_slice+fails+on+the+next+line%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+slice_temp%25realspace_coeffs+%3D+slice_temp%25realspace_coeffs+%2B+slice_temp_nl%25realspace_coeffs%3C%2Fp%3E%0A%0A%3Cp%3E%0Awhich+has+clearly+never+been+written+to+handle+the+realspace%2Fgamma%3Cbr+%2F%3E%0Acombination.%3C%2Fp%3E%0A",
            "created_on": "2015-11-25+12%3A48%3A15.011421%2B00",
            "id": "1465",
            "issue": "1465",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ASeems+to+work+now%3C%2Fp%3E%0A",
            "created_on": "2017-02-03+11%3A12%3A26.633074%2B00",
            "id": "1735",
            "issue": "1524",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+17.2+branch.+%C2%A0To+be+merged+with+trunk.%3C%2Fp%3E%0A",
            "created_on": "2017-04-04+15%3A07%3A41.570051%2B01",
            "id": "1813",
            "issue": "1703",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AFixed+in%3C%2Fp%3E%0A%0A%3Cp%3E%0AChangeset%3A+6816+%281c354f431875%29+Fixed+array+bounds+bug+in+raman.f90%3C%2Fp%3E%0A",
            "created_on": "2015-11-25+12%3A51%3A34.08059%2B00",
            "id": "1466",
            "issue": "1433",
            "user": "krefson"
        },
        {
            "content": "Thanks+for+the+patch+Andrew%21%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-09-15+10%3A52%3A10.230618%2B01",
            "id": "1071",
            "issue": "717",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+can+replicate+this+problem+in+CASTEP+17.1+when+restarting+an+LBFGS+with+continuation+and+cell%C2%A0constraints%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0AError+comms_gcopy_real%3A+length+less+than+0%3C%2Fp%3E%0A%0A%3Cp%3E%0AThis+is+crippling+my+homoepitaxial+strain+calculations+on+a+large+magnetic+system%3B+the+calculation+must+be+restarted+every+few+LBFGS+iterations+in+order+to+correctly+remesh+the+kpoint+grid%2C+yet+convergence+of+the+SCF+loop+is+very+time-consuming+%28and+not+necessarily+robust%29+and+thus+it+is+only+really+feasible%C2%A0to+perform+a+continuation+run+as+I+have+done+for+the+bulk+system.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AAny+update+on+the+progress+of+a+fix+would+be+appreciated.%3C%2Fp%3E%0A%0A%3Cp%3E%0ABest%2C%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatthew%3C%2Fp%3E%0A",
            "created_on": "2016-07-15+18%3A06%3A06.870984%2B01",
            "id": "1599",
            "issue": "1586",
            "user": "matthew_evans"
        },
        {
            "content": "User+matthew_evans+started+a+discusssion+on+the+tracker+item%3A+%3Ca+href%3D%22javascript%3A%3B%22+class%3D%22discuss+%22+data-section%3D%22trackeritem%22++data-ref-id%3D%221586%22+data-forum-name%3D%22LBFGS+Geom+opt+with+cell+constraints+fails+and+writes+invalid+checkpoint%22+onMouseOver%3D%22tooltip%28%27LBFGS+Geom+opt+with+cell+constraints+fails+and+writes+invalid+checkpoint%27%29%22+onmouseout%3D%22tooltipexit%28%29%22%3E%0A%09%09%09%09%09%09%3Cimg+src%3D%22%2Fimages%2Fchat_icon_24.png%22+alt%3D%22LBFGS+Geom+opt+with+cell+constraints+fails+and+writes+invalid+checkpoint%22+%2F%3E%0A%09%09%09%09%09%3C%2Fa%3E",
            "created_on": "2016-07-15+18%3A28%3A04.554216%2B01",
            "id": "1600",
            "issue": "1586",
            "user": "matthew_evans"
        },
        {
            "content": "%3Cp%3E%0AThis+was+fixed+for+16.1+by+Phil%3C%2Fp%3E%0A",
            "created_on": "2016-01-14+21%3A57%3A09.042865%2B00",
            "id": "1485",
            "issue": "1465",
            "user": "krefson"
        },
        {
            "content": "I+think+that+VmSize+is+probably+the+most+useful+at+present.%3Cbr+%2F%3E%0D%0AVmPeak+is+relatively+new+-+it%27s+not+in+%2Fproc%2Fself%2Fstatus+of%3Cbr+%2F%3E%0D%0Athe+2.6.9+kernel+of+our+STFC+cluster+which+runs+RHAS+4.++However+once+%26amp%3Bquot%3Bbrk%26amp%3Bquot%3B+has+been+called+to+increase+the+heap%2C%3Cbr+%2F%3E%0D%0Athe+standard+glibc+%26amp%3Bquot%3Bmalloc%26amp%3Bquot%3B+does+not+ever+return+memory%3Cbr+%2F%3E%0D%0Ato+the+system%2C+so+the+current+data+segment+usage+at+the%3Cbr+%2F%3E%0D%0Aend+is+usually+close+to+the+peak.++On+a+few+systems+I%3Cbr+%2F%3E%0D%0Ahave+tried%2C+the+two+figures+are+always+identical.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+RSS+size+is+problematic+-+what+if+the+run+was+over+memory+and+paging%3F++Then+the+memory+use+would+differ+from+the+requirement.++I+interpret+this+figure+as+the+requirement.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASo+I+still+think+VmSize+is+the+closest+to+a+%26amp%3Bquot%3Bgeneral+memory%26amp%3Bquot%3B%3Cbr+%2F%3E%0D%0Arequirement.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AKeith%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-04-13+17%3A24%3A43%2B01",
            "id": "94",
            "issue": "110",
            "user": "krefson"
        },
        {
            "content": "6.+The+module+in+its+current+form+does+not+deal+with+spins.%3Cbr+%2F%3E%0D%0AHirshfeld+spins+are+by+now+as+accepted+as+Hirshfeld+charges%3Cbr+%2F%3E%0D%0A-+this+probably+goes+into+%26amp%3Bquot%3Bfeature+request%26amp%3Bquot%3B+category.+",
            "created_on": "2009-06-30+16%3A31%3A29%2B01",
            "id": "117",
            "issue": "143",
            "user": "vmilman"
        },
        {
            "content": "The+problem+lies+in+the+way+that+RATTLE+detects+convergence.+With+multiple+types+of+constraints%2C+the+convergence+per+iteration+is+slow%2C+and+there+is+a+hard-limit+to+the+maximum+number+of+iterations+to+stop+run-away+calculations.+In+early+testing+with+just+1+type+of+constraint%2C+it+was+always+found+to+converge+within+3-5+iterations%2C+so+this+upper+limit+was+set+to+100.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWith+multiple+types+of+constraints+it+can+be+much+slower.+Just+increasing+the+upper+limit+helps%2C+but+can+also+be+wasteful+as+some+calculations+get+stuck+and+the+max+error+never+reduces.+Hence+need+a+better+set+of+exit+criteria.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ANow+done.%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2010-06-30+14%3A47%3A49%2B01",
            "id": "313",
            "issue": "305",
            "user": "mijp1"
        },
        {
            "content": "Implemented+a+subset+of+this+-+continuation%3A+default+now+starts+a+new+run+if+no+checkpoint+file+present.",
            "created_on": "2013-10-15+08%3A16%3A25.674599%2B01",
            "id": "1093",
            "issue": "200",
            "user": "krefson"
        },
        {
            "content": "1.+Fixed.%3Cbr+%2F%3E%0D%0A2.+Vratio+is+the+key+quantity+from+Hirshfeld+required+for+the+van+der+Waals+correction+schemes.+As+these+will+not+be+implemented+in+v5.0+this+output+will+be+removed+for+now.%3Cbr+%2F%3E%0D%0A3.+This+%26amp%3Bquot%3Bsupercell+file%26amp%3Bquot%3B+is+for+user+control+of+the+supercell+that+may+be+required+for+converged+calculation+of+the+Vratio%3A+this+is+the+ratio+of+the+Hirshfeld+volume+of+the+atom+in+the+system+with+the+free+atom%2C+and+for+small+real-space+cells+may+require+a+larger+radial+grid+than+is+accommodated+in+the+current_cell+-+hence+the+supercell+code.+The+Hirshfeld+Q+is+NOT+sensitive+to+this+parameter%2C+so+this+will+be+hidden+for+now.+Will+try+to+derive+an+automatic+heuristic+for+this+for+future+release+when+incorporate+the+vdW+correction.%3Cbr+%2F%3E%0D%0A4.+Fixed+-+cloned+from+popn.F90%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A5+-+missing+point%3F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A6.+Feature+request+-+please+resubmit+once+5.0+is+finalised.+Will+try+to+incorporate+into+v5.1%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++Matt%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-07-10+15%3A29%3A22%2B01",
            "id": "133",
            "issue": "143",
            "user": "mijp1"
        },
        {
            "content": "This+behaviour+arises+from+two+interacting+circumstances%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A1.+This+supercell+matrix+%28apparently+generated+by+Materials+Studio%29+is+a+pure+rotation.++The+supercell+code+makes+a+special+case+where+the+matrix+is+the+identity%2C+but+it+never+occurred+to+me+that+someone+might+want+to+gratuitously+rotate+the+primitive+cell+to+make+a+supercell.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++The+original+test+case+followed+the+general+case+code+path+which+has+another+problem+%28see+below%29.++Changing+the+supercell+matrix+to+the+identity+chose+the+special+case+path+which+is+more+efficient+%28ie+it+detects+that+the+supercell+and+primitive+cell+are+identical%29+and+avoided+the+problem.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++It+is+not+generally+possible+to+re-use+the+wavefunction+from+one+cell+to+initialise+a+rotated+cell.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A2.+The+email+and+bug+report+title+turns+out+to+be+misleading.++There+is+no+hang+on+the+%26amp%3Bquot%3Bgeneral+case%26amp%3Bquot%3B+code.+It+seems+that+some+of+the+general+dynamical+matrix+symmetry+analysis+algorithms+are+scaling+very+poorly+to+large+system+sizes+%28%26amp%3Bgt%3B300+atoms%29.++Essentially+the+scaling+was+N%2A%2A4%2C+and+the+analysis+code+was+taking+hours+or+even+days+to+run.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++",
            "created_on": "2009-07-10+16%3A05%3A36%2B01",
            "id": "135",
            "issue": "156",
            "user": "krefson"
        },
        {
            "content": "A+similar+crash+with+a+slightly+different+stack+is+in%3Cbr+%2F%3E%0D%0Acastep_6bRS%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B%09castepexe.exe%21ION%3A%3AION_BETA_PHI_REAL_ION_KP%28COMPLEX%288%29+%3Cbr+%2F%3E%0D%0AREAL_PHI%3D%7B...%7D%2C+INTEGER%284%29++NSP%3D1%2C+INTEGER%284%29++NI%3D1%2C%3Cbr+%2F%3E%0D%0AINTEGER%284%29++NK%3D1%2C+COMPLEX%288%29++BETA_PHI%3D%7B...%7D%29++Line+5967+%2B%3Cbr+%2F%3E%0D%0A0x2eb+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%09castepexe.exe%21WAVE%3A%3AWAVE_BETA_PHI_WV_KS%28TYPE%28WAVEFUNCTION%29%3Cbr+%2F%3E%0D%0A+WVFN%3D%7B...%7D%2C+INTEGER%284%29++NK%3D1%2C+INTEGER%284%29++NS%3D1%29++Line+18846%3Cbr+%2F%3E%0D%0A%2B+0x1fc+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21NLPOT%3A%3ANLPOT_APPLY_PRECON_WV%28TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN%3D%7B...%7D%2C+INTEGER%284%29++NK%3D1%2C+INTEGER%284%29++NS%3D1%2C+REAL%288%29+%3Cbr+%2F%3E%0D%0APRECON_VEC%3D%7B...%7D%2C+LOGICAL%284%29++UPDATE_PRECON%3D.FALSE.%2C%3Cbr+%2F%3E%0D%0ATYPE%28WAVEFUNCTION%29++PRECON_WVFN%3D+Undefined+pointer%2Farray%29+%3Cbr+%2F%3E%0D%0ALine+14481+%2B+0x1c+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21ELECTRONIC%3A%3AELECTRONIC_PROJ_GRAD_WV%28TYPE%28WAVEFUNCTION%29%3Cbr+%2F%3E%0D%0A+WVFN%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29++WVFN_GRADIENT%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0AREAL%288%29++EK%3D%7B...%7D%2C+REAL%288%29++OCC%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_DIRECTION%3D%7B...%7D%2C+COMPLEX%288%29+%3Cbr+%2F%3E%0D%0ABETA%3D%289.881312916824931E-324%2C1.50000000000000%29%2C%3Cbr+%2F%3E%0D%0ATYPE%28WAVEFUNCTION%29++WVFN_OLD_DIRECTION%3D+Undefined%3Cbr+%2F%3E%0D%0Apointer%2Farray%29++Line+6672+%2B+0x3a+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21ELECTRONIC%3A%3AELECTRONIC_CG_DIRECTION%28TYPE%28WAVEFUNCTION%29%3Cbr+%2F%3E%0D%0A+WVFN%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29++WVFN_GRADIENT%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0ALOGICAL%284%29++ES_SUBTRACTED%3D.TRUE.%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_DIRECTION%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_DIRECTION%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_GRADIENT%3D%7B...%7D%2C+REAL%288%29++OCC%3D%7B...%7D%2C+REAL%288%29+%3Cbr+%2F%3E%0D%0AEK%3D%7B...%7D%2C+COMPLEX%288%29+%3Cbr+%2F%3E%0D%0ABETA_OLD%3D%280.769158254123056%2C-7.485564244162227E-007%29%29++Line%3Cbr+%2F%3E%0D%0A6248+%2B+0x38+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21ELECTRONIC%3A%3AELECTRONIC_STEP_DIRECTION%28CHARACTER%284%29%3Cbr+%2F%3E%0D%0A+STEP_TYPE%3D%27CG++%27%2C+TYPE%28WAVEFUNCTION%29++WVFN%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0ATYPE%28WAVEFUNCTION%29++WVFN_GRADIENT%3D%7B...%7D%2C+LOGICAL%284%29+%3Cbr+%2F%3E%0D%0AES_SUBTRACTED%3D.TRUE.%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_DIRECTION%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_DIRECTION%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_GRAD%3D%7B...%7D%2C+REAL%288%29++OCC%3D%7B...%7D%2C+REAL%288%29++EK%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0ACOMPLEX%288%29+%3Cbr+%2F%3E%0D%0ABETA_OLD%3D%280.769158254123056%2C-7.485564244162227E-007%29%2C+%3Cbr+%2F%3E%0D%0A.tmp..T29477__V%2412303%3D%29++Line+5637+%2B+0x46+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21ELECTRONIC%3A%3AELECTRONIC_ITER_DIAG_H%28TYPE%28WAVEFUNCTION%29%3Cbr+%2F%3E%0D%0A+WVFN%3D%7B...%7D%2C+TYPE%28ELECTRON_DENSITY%29++DENS%3D%7B...%7D%2C+REAL%288%29+%3Cbr+%2F%3E%0D%0AOCC%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29++WVFN_GRADIENT%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0ALOGICAL%284%29++ES_SUBTRACTED%3D.TRUE.%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_DIRECTION%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_OLD_GRAD%3D%7B...%7D%2C+TYPE%28WAVEFUNCTION%29+%3Cbr+%2F%3E%0D%0AWVFN_DIRECTION%3D%7B...%7D%2C+TYPE%28POTENTIAL%29++LOCAL_POT%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0AREAL%288%29++FERMI_ENERGY%3D%7B...%7D%2C+REAL%288%29++EK%3D%7B...%7D%2C+REAL%288%29+%3Cbr+%2F%3E%0D%0AEIGENVALUES%3D%7B...%7D%2C+REAL%288%29++OCC_EIGENVALUES%3D%7B...%7D%2C%3Cbr+%2F%3E%0D%0ALOGICAL%284%29++OCC_EIGENVALUES_FREE%3D.FALSE.%2C+LOGICAL%284%29+%3Cbr+%2F%3E%0D%0AFULL_ORTHOGONALISATION%3D.FALSE.%2C+TYPE%28LCAO_DATA%29+%3Cbr+%2F%3E%0D%0ALDAU_OCCM%3D%7B...%7D%29++Line+2196+%2B+0x59+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21ELECTRONIC%3A%3AELECTRONIC_MINIMISATION%28TYPE%28WAVEFUNCTION%29%3Cbr+%2F%3E%0D%0A+WVFN%3D+Undefined+address%2C+TYPE%28ELECTRON_DENSITY%29++DENS%3D%3Cbr+%2F%3E%0D%0AUndefined+address%2C+REAL%288%29++OCC%3D+Undefined+address%2C+REAL%288%29%3Cbr+%2F%3E%0D%0A+ETOT%3D+Undefined+address%2C+REAL%288%29++EIGENVALUES%3D+Undefined%3Cbr+%2F%3E%0D%0Aaddress%2C+LOGICAL%284%29++CONVERGED%3D+Undefined+address%2C+REAL%288%29+%3Cbr+%2F%3E%0D%0AEFERMI%3D+Undefined+address%2C+TYPE%28LCAO_DATA%29++LDAU_OCCM%3D%3Cbr+%2F%3E%0D%0AUndefined+address%2C+INTEGER%284%29++LOCAL_IPRINT%3D+Undefined%3Cbr+%2F%3E%0D%0Aaddress%29++Line+1718+%2B+0x94+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0Acastepexe.exe%21CASTEP%3A%3ACHECK_ELEC_GROUND_STATE%28TYPE%28MODEL_STATE%29%3Cbr+%2F%3E%0D%0A+MDL%3D%7B...%7D%29++Line+1212+%2B+0x11+bytes%09Fortran%3Cbr+%2F%3E%0D%0A+%09castepexe.exe%21CASTEP%28%29++Line+883+%2B+0x15+bytes%09Fortran%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+time+dimensions+are+16+and+8.",
            "created_on": "2009-07-23+11%3A08%3A52%2B01",
            "id": "148",
            "issue": "163",
            "user": "vmilman"
        },
        {
            "content": "I%27m+now+doubting+my+previous+answer+was+correct+-+probably+the%3Cbr+%2F%3E%0D%0A3D+irrep+at+gamma+is+the+correct+one.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+have+checked+in+a+fix+for+a+related+but+more+serious+issue+-%3Cbr+%2F%3E%0D%0Asometimes+a+higher+dimensional+irrep+was+being+reported+for%3Cbr+%2F%3E%0D%0Athe+gamma+point+acoustic+modes+than+allowed+by+the+point+group.+%28E.g.+a+3d+irrep+in+a+hexagonal+or+2d+in+a+monoclinic+group%29.++I+corrected+this+by+adding+a+slight+splitting+of+the+acoustic+modes+when+enforcing+the+sum+rule.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+think+that+is+as+much+as+can+be+done+on+this+issue%2C+so+I%3Cbr+%2F%3E%0D%0Apropose+to+close+the+bug.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-08-16+12%3A33%3A48%2B01",
            "id": "162",
            "issue": "130",
            "user": "krefson"
        },
        {
            "content": "There+was+a+first+fix%3B+now+there+is+an+error+exit%2C+the+paged%3Cbr+%2F%3E%0D%0Aversion+fails+right+after+switch+to+bfgs%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0D%0A+Starting+BFGS+iteration++++++++++1+...%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0D%0AError+writing+wavefunction+coefficients+to+file+in+wave_page%3Cbr+%2F%3E%0D%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0D%0A+wave_page%3Cbr+%2F%3E%0D%0A+wave_copy_wv_wv_ks%3Cbr+%2F%3E%0D%0A+wave_copy_wv_wv%3Cbr+%2F%3E%0D%0A+geom_BFGS_backup%3Cbr+%2F%3E%0D%0A+geom_BFGS%3Cbr+%2F%3E%0D%0A+geometry_optimise%3Cbr+%2F%3E%0D%0A+castep%3Cbr+%2F%3E%0D%0A",
            "created_on": "2009-08-25+09%3A33%3A16%2B01",
            "id": "168",
            "issue": "172",
            "user": "vmilman"
        },
        {
            "content": "I%27m+not+convinced+by+this.+At+the+moment%2C+geometry+keeps+track+of+any+warnings%2C+including+being+out+of+iterations%2C+and+at+the+end+prints+a+summary+message%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%27There+were+at+least+%27%2Ciwarn%2C%27+warnings+during+this+run+%2A%2A%2A%27%3Cbr+%2F%3E%0D%0A%27%3D%26amp%3Bgt%3B+please+check+the+whole+of+this+file+carefully%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+would+suggest+that+it+would+be+better+for+MatStudio+to+pick+up+this+message+and+give+the+user+a+BIG+warning+to+read+the+.castep+file+carefully.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+are+many+problems+with+putting+a+hard%2Fsoft+division%2C+such+as+where+to+put+it+-+needs+vary+eg+phonon+needs+very+high+accuracy+geom+but+others+don%27t+-+and+what+if+you+have+a+case+just+on+the+division.+The+difference+between+a+geom+failure+and+an+electronic+failure+is+that+you+still+have+a+valid+wavefunction+etc+and+can+restart+or+doing+something+else+with+the+configuration+you+have+got%2C+whereas+an+electronic+failure+leaves+you+with+nothing.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2009-10-01+16%3A43%3A20%2B01",
            "id": "193",
            "issue": "190",
            "user": "mijp1"
        },
        {
            "content": "I+have+tried+the+BaTiO3+case+and+fail+to+reproduce+any+problem.++Do+you+have+a+reproducible+test+case%3F",
            "created_on": "2010-04-28+09%3A54%3A48%2B01",
            "id": "255",
            "issue": "254",
            "user": "krefson"
        },
        {
            "content": "There%27s+one+further+uninitialized+variable+in+electronic%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIn+%26amp%3Bquot%3Belectronic_minimisation%26amp%3Bquot%3B+the+variable+%26amp%3Bquot%3Bresidual_norm%26amp%3Bquot%3B%3Cbr+%2F%3E%0D%0Ais+only+conditionally+initialised.++However+it+is+unconditionally+printed+at+iprint+%26amp%3Bgt%3B+1+at+line+1892%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++if%28on_root_node.and.elec_iprint%26amp%3Bgt%3B%3D2%29+then%3Cbr+%2F%3E%0D%0A++++++++++if%28dens_changed%29+then%3Cbr+%2F%3E%0D%0A++++++++++++write%28stdout%2C%2A%29+%27Norm+of+density+residual+is+%27%2Cresidual_norm%3Cbr+%2F%3E%0D%0A++++++++++else%3Cbr+%2F%3E%0D%0A++++++++++++write%28stdout%2C%2A%29+%27Density+was+not+mixed+in+this+cycle%27%3Cbr+%2F%3E%0D%0A++++++++++end+if%3Cbr+%2F%3E%0D%0A++++++++end+if%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-06-12+15%3A30%3A53%2B01",
            "id": "291",
            "issue": "301",
            "user": "krefson"
        },
        {
            "content": "Actually+the+run+used+28+nodes+not+168%2C+giving+a+g-vector+group+of+14.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+In+fact+it+turns+out+that+this+is+an+issue+we+have+visited+before+-+in+version+3.0+in+2004%21+But+the+fix+was+actually+wrong+and+in%3Cbr+%2F%3E%0D%0Acertain+cases+it+was+possible+for+the+variable+max_x_columns+to+be%3Cbr+%2F%3E%0D%0Atoo+small%2C+and+several+arrays+undersized+resulting+in+an+array+bounds%3Cbr+%2F%3E%0D%0Aviolation.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWhile+I+believe+the+new+code+is+correct+in+all+circumstances%2C+my+checks+have+hilighted+an+inefficiency+in+the+grid+distribution+which+was+actually+first+hilighted+by+Martin+Plummer+back+in+2004%21++The+issue+occurs+when+%28a%29+NGY+%28standard+grid%29+is+even+and+%28b%29+NGY_FINE+%26amp%3Bgt%3B+NGY.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ATo+quote+the+original+comment+in+the+code%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%21+In+the+special+case+where+ngy+is+even+and+ngy_fine+is+greater+than+ngy%2C%3Cbr+%2F%3E%0D%0A%21+we+have+to+pick+up+the+columns+on+the+standard+grid+corresponding+to%3Cbr+%2F%3E%0D%0A%21+the+columns+ny%3Dngy%2F2%2B1%2C+nz%3Dngz%2F2%2B2...ngz%2C+which+are+in+the+negative%3Cbr+%2F%3E%0D%0A%21+half-space+and+do+not+have+a+corresponding+partner+in+the+positive+half%3Cbr+%2F%3E%0D%0A%21+space+of+the+standard+grid%2C+although+they+do+in+the+fine+grid.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AUnfortunately+the+current+code+distributes+these+additional+columns+in%3Cbr+%2F%3E%0D%0Aa+way+which+can+sample+only+a+subset+of+the+g-vector+groups+in+the+case%3Cbr+%2F%3E%0D%0Awhere+%28GY_FINE-NGY%29+has+common+divisor+with+NUM_IN_GV_GROUP%2C++The+calculation+in+point+has+grids%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASTD++++54++72++120%3Cbr+%2F%3E%0D%0AFINE++108+135++240%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aso+NGY_fine-NGY%3D63+and+on+a+gvector+group+size+of+14+the+distribution%3Cbr+%2F%3E%0D%0Aof+X+columns+is%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABasic+++++615+612+616+610+617+612+614+609+616+611+613+610+614+612%3Cbr+%2F%3E%0D%0AAdditional++0+++0+++0+++0+++0++29+++0+++0+++0+++0+++0+++0++30+++0%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+new+code+does+set+max_x_columns+to+655+in+this+case+-+the+slight%3Cbr+%2F%3E%0D%0Aoverestimation+is+due+to+the+basic+part.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-11-06+15%3A46%3A05.264783%2B00",
            "id": "546",
            "issue": "418",
            "user": "krefson"
        },
        {
            "content": "I+do+not+reproduce+this+error+with+5.5.1%2C+either+in+serial+or+parallel.%3Cbr+%2F%3E%0D%0AYour+example+runs+to+completion.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+code+will+%28intentionally%29+attempt+to+reread+any+so-named+.fd_wvfn%3Cbr+%2F%3E%0D%0Afile+which+exists+at+run-time%2C+to+avoid+recomputing+the+unperturbed%3Cbr+%2F%3E%0D%0Asupercell+ground+state+in+the+event+of+a+crash+or+restart.+It+seems+highly%3Cbr+%2F%3E%0D%0Alikely+that+you+had+left+an+old+.fd_wvfn+file+in+place+from+a+different+run+%3Cbr+%2F%3E%0D%0Awhich+failed.++CASTEP+deletes+the+file+at+the+end+of+a+successful+run.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AFeel+free+to+re-open+the+bug+if+you+can+come+up+with+a+reproducible+test+case.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2010-12-22+14%3A28%3A33.523002%2B00",
            "id": "567",
            "issue": "450",
            "user": "krefson"
        },
        {
            "content": "I+just+tried+again+on+the+latest+code%3A+still+get+the+error+as+Sasha+described%2C+%26amp%3Bquot%3BError+in+phonon_rationalise_kpoints%26amp%3Bquot%3B.+There+is+no+issue+with+the+presence+of+old+fd_wvfn+files%2C+the+runs+are+done+in+a+directory+that+contains+only+cell+and+param+files.+Since+the+issue+is+perfectly+reproducible+in+our+builds%2C+we+really+need+an+investigation%3A%3Cbr+%2F%3E%0D%0A-+check+that+source+repositories+are+in+sync%3B+if+they+are%3A%3Cbr+%2F%3E%0D%0A++-+compare+libraries+and+compilers%3Cbr+%2F%3E%0D%0A++-+perhaps+try+CDG+builds+with+different+compiler%2Flibraries%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AOtherwise+running+out+of+ideas...",
            "created_on": "2011-01-07+13%3A53%3A47.835636%2B00",
            "id": "571",
            "issue": "450",
            "user": "vmilman"
        },
        {
            "content": "OK%2C+in+that+case+I+suggest+that+you+download+the+academic+version+source%3Cbr+%2F%3E%0D%0Aand+executables+from+CCPforge.++It+should+be+a+quick+test+to+see+if%3Cbr+%2F%3E%0D%0Athe+academic+code+fails+for+you+too.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AYou+failed+to+specify+what+architecture+and+system+you+observed+the+run+failing+on.+Perhaps+this+is+system+specific+with+your+machine%3F",
            "created_on": "2011-01-13+12%3A00%3A47.097418%2B00",
            "id": "575",
            "issue": "450",
            "user": "krefson"
        },
        {
            "content": "I+followed+your+suggestion+which+required+getting+castep-5.5.1+executable+and+building+FFTW3+dynamic+library.+It+indeed+works+fine+for+me.+What%27s+more%2C+our+MS+5.5+also+works+fine.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+is+a+difference+in+that+the+current+executable+generates+a+different+set+of+k-points+for+the+supercell+compared+to+your+set+or+MS+5.5+released+version.+The+supercell+is+a%3D+5.726858%2C+angles+60+deg%2C+k-points+mesh+is+5x5x5%2C+and+%26amp%3Bquot%3Bcorrect%26amp%3Bquot%3B+version+generates+10+k-points+while+the+current+one+has+19.+This+is+probably+due+to+the+fact+that+Jonathan%27s+changes+are+not+part+of+the+5.5.1+-+could+you+check+how+many+k-points+you+get+with+your+current+version%3F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+case+adds+weight+to+my+suggestion+to+remove+the+change+in+the+k-point+generation+until+it%27s+fixed+properly...+%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-01-13+13%3A34%3A31.26082%2B00",
            "id": "576",
            "issue": "450",
            "user": "vmilman"
        },
        {
            "content": "As+this+is+clearly+a+side+effect+of+the+kpoint+change%2C+I+am+closing+this+bug.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIn+future%2C+please+state+which+version+of+the+code+is+necessary+to+reproduce+the+error.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-01-17+10%3A09%3A24.844738%2B00",
            "id": "577",
            "issue": "450",
            "user": "krefson"
        },
        {
            "content": "Sorry%2C+I+should+have+given+some+more+instructions.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Axmgrace+E_Hamilt%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Awill+show+exactly+what+I+mean.++The+KE%2C+PE+and+total+energy+are+behaving%3Cbr+%2F%3E%0D%0Aexactly+as+expected.",
            "created_on": "2011-01-18+14%3A10%3A47.060248%2B00",
            "id": "578",
            "issue": "469",
            "user": "krefson"
        },
        {
            "content": "On+further+investigation+of+both+the+methane+and+Zn-bis+cases%2C+it+seems+that+increasing+the+H-H+time+constant+MD_ION_T+has+the+effect+of+stabilising+the%3Cbr+%2F%3E%0D%0ANH+integration.++The+default+value+if+10%2A+timestep+is+too+small%2C+and+it+seems+that+the+rapid+dynamics+are+exceeding+the+stability+limit+of+the+integrator.%3Cbr+%2F%3E%0D%0AThis+harks+back+all+the+way+to+the+integrator+work+I+did+for+my+PhD+thesis%2C%3Cbr+%2F%3E%0D%0Ashowing+that+extended+system+thermostats+and+barostats+are+harder+to+integrate+than+Newton%27s+equations%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIf+10+%2A+delta+t+is+too+small+for+stability+of+the+integration+algorithm%2C+I+wonder+if+it+should+be+increased%3F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-01-20+07%3A31%3A29.567976%2B00",
            "id": "584",
            "issue": "469",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change.+In+B88+tolerance+on+rho+close+to+zero+to+tight+causing+numerical+noise+when+grad%28rho%29+small+as+well.",
            "created_on": "2011-01-30+12%3A10%3A46.975636%2B00",
            "id": "588",
            "issue": "471",
            "user": "sjc999"
        },
        {
            "content": "Fixed+by+code+change.",
            "created_on": "2011-02-07+10%3A15%3A02.522901%2B00",
            "id": "603",
            "issue": "459",
            "user": "pjh503"
        },
        {
            "content": "I+googled+these+keywords%2C+but+I+have+not+found+how+to+use+it.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AHow+to+use+it%3F",
            "created_on": "2011-02-22+13%3A48%3A22.912268%2B00",
            "id": "608",
            "issue": "199",
            "user": "fyr"
        },
        {
            "content": "Fixed+in+6.1",
            "created_on": "2012-08-27+18%3A23%3A58.249898%2B01",
            "id": "880",
            "issue": "754",
            "user": "krefson"
        },
        {
            "content": "Code+fixed.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2011-03-01+17%3A29%3A17.302809%2B00",
            "id": "612",
            "issue": "466",
            "user": "mijp1"
        },
        {
            "content": "The+problem+is+not+with+the+code+per+se%2C+but+rather+with+the+parameters+used.+It+is+hard+%28if+not+impossible%29+to+come+up+with+a+default+set+of+parameters+that+will+always+be+safe.+In+this+case%2C+the+jumps+in+the+value+of+the+%27conserved+Hamiltonian%27+are+a+good+diagnostic+that+the+parameter+choices+are+bad.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ATwo+possibilities+occur+to+me%3A%3Cbr+%2F%3E%0D%0A1%29+Change+the+default+parameter+values%3Cbr+%2F%3E%0D%0A2%29+Leave+them+as+they+are+and+add+some+monitoring+code+and+print+a+warning+diagnostic.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AHowever%2C+I%27ve+just+checked+in+a+new+thermostat%2C+the+Hoover-Langevin%2C+that+seems+to+perform+better+and+is+stable+even+with+these+defaults%21+Hence+I%27m+not+minded+to+do+anything+more+in+MD%2C+but+am+seriously+thinking+about+making+Hoover-Langevin+the+default+thermostat+in+parameters.F90+-+but+before+I+do+that+I%27d+like+to+see+it+being+used+more+widely+and+by+other+users+....%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++Matt",
            "created_on": "2011-03-01+17%3A33%3A06.262039%2B00",
            "id": "613",
            "issue": "469",
            "user": "mijp1"
        },
        {
            "content": "Possible+division+by+zero+in+sX+when+cell+has+large+region+of+vacuum.+Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-04-15+18%3A04%3A21.518858%2B01",
            "id": "637",
            "issue": "517",
            "user": "sjc999"
        },
        {
            "content": "We+need+two+new+parameters+to+allow+calculation+of+raman+spectra+over%3Cbr+%2F%3E%0D%0Aa+restricted+frequency+range%2C+as+in+many+cases+the+full+range+is+not+needed%3Cbr+%2F%3E%0D%0Aand+the+calculations+can+be+very+expensive%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++raman_range_low%3Cbr+%2F%3E%0D%0A++raman_range_high%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aboth+physical+units+of+frequency.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AText%3A+%26amp%3Bquot%3BLower+and+upper+limits+of+a+frequency+window+for+which+raman+intensities+will+be+calculated.%26amp%3Bquot%3B%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+rather+than+calculating+all+intensities+%28as+they+are+expensive%29.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ADefaults%3A+%3Cbr+%2F%3E%0D%0Araman_range_low+%3A+0%3Cbr+%2F%3E%0D%0Araman_range_high+%3A+1eV++%28which+is+higher+than+all+physical+frequencies%2C+so%3Cbr+%2F%3E%0D%0A+++++++++++++++++++++++++unless+we+include+muonium%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-04-20+09%3A38%3A35.19041%2B01",
            "id": "639",
            "issue": "518",
            "user": "krefson"
        },
        {
            "content": "please+change+the+default+for+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0APHONON_SUM_RULE+and%3Cbr+%2F%3E%0D%0ABORN_CHARGE_SUM_RULE+from+FALSE+to+TRUE.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-04-20+09%3A41%3A07.787591%2B01",
            "id": "640",
            "issue": "518",
            "user": "krefson"
        },
        {
            "content": "And+another+two+requests+for+phonon+parameters%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_force_constants%29%25key++++++++++++%3D%3Cbr+%2F%3E%0D%0A%27PHONON_WRITE_FORCE_CONSTANTS%27%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_force_constants%29%25typ++++++++++++%3D+%27L%3AB%27%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_force_constants%29%25description++++%3D+%27%2A%21+Write+out+real-space+force+constant+matrix+%21%2A+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Selects+whether+to+write+out+the+real-space+force+constant+matrix+from+a+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+phonon+supercell+or+interpolation+calculation+%28to+the+%26amp%3Blt%3Bseedname%26amp%3Bgt%3B.castep+file%29+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Allowed+values%3A+TRUE+or+FALSE+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Default+value+%3A+FALSE%27%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_dynamical%29%25key++++++++++++%3D%3Cbr+%2F%3E%0D%0A%27PHONON_WRITE_DYNAMICAL%27%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_dynamical%29%25typ++++++++++++%3D+%27L%3AB%27%3Cbr+%2F%3E%0D%0A++++++keywords%28ikey_phonon_write_dynamical%29%25description++++%3D+%27%2A%21+Write+out+reciprocal+space+dynamical+matrix+%21%2A+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Selects+whether+to+write+out+the+reciprocal+space+dynamical+matrices+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+from+a+phonon++calculation+%28to+the+%26amp%3Blt%3Bseedname%26amp%3Bgt%3B.castep+file%29+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Allowed+values%3A+TRUE+or+FALSE+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Default+value+%3A+FALSE%27%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-04-20+09%3A52%3A30.486132%2B01",
            "id": "641",
            "issue": "518",
            "user": "krefson"
        },
        {
            "content": "This+is+HIGH+priority+-+most+of+the+existing+phonon+tests+stopped+working+in+a+similar+fashion.+%3Cbr+%2F%3E%0D%0Aiprint%3D2+output+for+castep_9a+is+attached+using+both+current+and+pre-changed+executable.+2nd+order+variational+energy+for+the+Gamma+point+has+changed%2C+while+it%27s+the+same+as+before+for+all+other+points+used+in+the+calculation.+The+issue+is+not+parallel%3B+results+are+all+from+a+serial+run+that+takes+no+more+than+a+minute.",
            "created_on": "2011-04-20+12%3A10%3A27.645397%2B01",
            "id": "643",
            "issue": "520",
            "user": "vmilman"
        },
        {
            "content": "I+am+not+sure+why+the+bug+was+demoted+in+priority.+Sasha+put+quite+a+lot+of+effort+to+trace+the+change+in+behaviour+to+a+single+check-in+that+was+made+nearly+three+years+ago.+It+appears+that+the+modification+of+nplot_prepare_precon_ks+in+version+1.110+of+nlpot.F90+made+USP+VCA+calculations+rather+suspect+%28norm-conserving+is+fine%29.+The+test+cases+are+tiny+and+take+seconds+to+run%2C+so+one+hopes+it+should+be+possible+for+Phil+to+identify+what+went+wrong+in+this+branch+going+from+v109+to+v110.",
            "created_on": "2011-04-20+14%3A24%3A07.436404%2B01",
            "id": "645",
            "issue": "421",
            "user": "vmilman"
        },
        {
            "content": "Stewart%2C%3Cbr+%2F%3E%0D%0A++Two+requests%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%25block+species_chemical_pot%3Cbr+%2F%3E%0D%0A%5Bunits%5D%3Cbr+%2F%3E%0D%0Aspecies_1+mu1%3Cbr+%2F%3E%0D%0A.....%3Cbr+%2F%3E%0D%0A%25endblock+species_chemical_pot%3Cbr+%2F%3E%0D%0Aas+a+way+of+entering+the+chemical+potential+for+each+species+in+a+variable+atom+number+calculation.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%25block+cell_velocity+%5Bor+lattice_vel+-+up+to+you%5D%3Cbr+%2F%3E%0D%0A%5Bunits%5D%3Cbr+%2F%3E%0D%0Aa_vel%281%3A3%29%3Cbr+%2F%3E%0D%0Ab_vel%281%3A3%29%3Cbr+%2F%3E%0D%0Ac_vel%281%3A3%29%3Cbr+%2F%3E%0D%0A%25endblock%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Athis+is+to+enable+users+to+start+or+continue+NPT+calculations+by+manually+specifying+the+cell+vector+velocities.+I+have+a+patch+submitted+by+Brent+to+do+this+which+I+am+posting+on+to+you.+I%27ve+not+checked+it+properly%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++Matt%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-04-21+17%3A22%3A46.16531%2B01",
            "id": "647",
            "issue": "519",
            "user": "mijp1"
        },
        {
            "content": "Done+and+checked+in.+I%27ve+made+a+1-line+addition+to+castep+main+which+updates+the+data+in+parameters+before+the+call+to+parameters_output+so+that+it+is+picked+up+and+output+along+with+the+other+data.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0APlease+test+and+let+me+know+if+all+is+OK.%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2011-04-26+16%3A56%3A58.706048%2B01",
            "id": "649",
            "issue": "416",
            "user": "mijp1"
        },
        {
            "content": "Found+one+minor+bug+when+using+PHONON_DFPT_METHOD%3DGREEN+with+no+extra+bands.%3Cbr+%2F%3E%0D%0AFixed.",
            "created_on": "2011-05-31+11%3A20%3A20.189569%2B01",
            "id": "676",
            "issue": "520",
            "user": "krefson"
        },
        {
            "content": "Confirmed+by+simple+test+case.++The+original+md+file+Si2-md.md.0+is+deleted+and%3Cbr+%2F%3E%0D%0Athe+information+in+it+is+lost+%28except+by+taking+an+explicit+copy%29.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+continuation+run+appears+to+lose+the+wavefunction+from+the+first+run+for%3Cbr+%2F%3E%0D%0Asome+reason%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AContinuing+from+previous+run+without+ground+state+wavefunction.%3Cbr+%2F%3E%0D%0AContinuing+from+previous+run+without+ground+state+density.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-05-31+11%3A38%3A43.210714%2B01",
            "id": "677",
            "issue": "537",
            "user": "krefson"
        },
        {
            "content": "Apparently+I+introduced+the+bug+at+the+time+of+rationalising+the+PSP+directory+search.++Now+fixed.+",
            "created_on": "2013-11-24+22%3A28%3A35.612582%2B00",
            "id": "1115",
            "issue": "957",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+it+CASTEP-codefest+2017+-+to+be+merged.%3C%2Fp%3E%0A",
            "created_on": "2017-04-05+14%3A38%3A22.276556%2B01",
            "id": "1814",
            "issue": "1692",
            "user": "cjp10"
        },
        {
            "content": "Yes%2C+there+is+a+problem+here.+When+we+did+the+gamma-point+changes+to+the+rest+of+castep%2C+we+made+the+%26amp%3Bquot%3Bpotential%26amp%3Bquot%3B+type+have+both+real+and+complex+parts%2C+whereas+the+previous+versions+had+everything+complex.+The+pot1d+code+does+not+seem+to+have+been+updated+for+these+changes%2C+and+consequently+tries+to+refer+to+non-existent+complex+data+in+these+write+statements%2C+hence+the+SIGSEGV+error.+I+presume+that+the+reason+it+works+sometimes+is+that+for+small+systems+you+have+multiple+k-points+and+so+the+old+code-path+is+used%2C+whereas+for+the+biggest+system+you+are+just+using+gamma+whereupon+the+error+strikes.+%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2011-06-14+11%3A58%3A08.103415%2B01",
            "id": "682",
            "issue": "539",
            "user": "mijp1"
        },
        {
            "content": "This+patch+somehow+has+not+yet+found+its+way+into+castep%2C+so+I+would+assume+that+continuations+from+singlepoint-%26amp%3Bgt%3BgeometryOptimise+do+not+work+as+intended.",
            "created_on": "2013-12-05+11%3A53%3A29.508844%2B00",
            "id": "1117",
            "issue": "859",
            "user": "pbro"
        },
        {
            "content": "This+looks+like+yet+another+case+of+insufficient+precision+of+input+co-ordinates.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere%27s+nothing+I+can+do+about+this.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-07-15+14%3A17%3A12.955613%2B01",
            "id": "700",
            "issue": "543",
            "user": "krefson"
        },
        {
            "content": "Done",
            "created_on": "2011-08-05+17%3A11%3A57.41501%2B01",
            "id": "708",
            "issue": "522",
            "user": "krefson"
        },
        {
            "content": "All+changes+made+as+requested+and+checked+in+to+CVS.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2011-08-24+20%3A02%3A30.623028%2B01",
            "id": "709",
            "issue": "518",
            "user": "mijp1"
        },
        {
            "content": "Added+extra+code%2Flogic+and+all+seems+to+be+OK.+Checked+into+CVS.%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2011-08-24+20%3A12%3A41.043664%2B01",
            "id": "710",
            "issue": "539",
            "user": "mijp1"
        },
        {
            "content": "Hoover-Langevin+seems+to+be+working+well+-+no+complaints+and+some+good+results.+Marking+this+%27bug%27+%28ie+not+a+bug%29+as+closed.%3Cbr+%2F%3E%0D%0A++++++++++Matt",
            "created_on": "2011-08-24+20%3A14%3A22.046422%2B01",
            "id": "711",
            "issue": "469",
            "user": "mijp1"
        },
        {
            "content": "Seems+to+be+fine+with+the+current+version%3B+the+error+was+on+Bjoern%27s+machine+%28MS+5.0%29",
            "created_on": "2011-08-30+10%3A37%3A26.05714%2B01",
            "id": "712",
            "issue": "558",
            "user": "vmilman"
        },
        {
            "content": "I+cannot+reproduce+this%3B+the+code+can+be+%26amp%3Bquot%3Bfixed%26amp%3Bquot%3B%2C+however%2C+with+the+current+logic+neither+ldau_check_lcao_states+nor+its+parent%2C+popn_check_lcao_basis%2C+are+needed.+They+both+start+with+%26amp%3Bquot%3Bif+%28current_cell%25species_lcao_states%28nsp%29.eq.0%29%26amp%3Bquot%3B.+By+the+time+CASTEP+gets+there%2C+this+array+has+long+been+filled+in+cell_read%2C+at+least+in+MatStudio+world.+OK%2C+I+see+where+this+is+coming+from+-+the+code+does+get+into+the+IF+loop+when+there+is+no+LCAO_STATES+block+in+the+cell+file.+Let%27s+fix.",
            "created_on": "2011-08-31+17%3A03%3A27.260221%2B01",
            "id": "713",
            "issue": "559",
            "user": "vmilman"
        },
        {
            "content": "Here+is+the+user%27s+test+case%2C+which+does+indeed+reproduce+the+bug.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAs+you+say+the+workaround+is+to+add+a+SPECIES_LCAO_STATES+block.",
            "created_on": "2011-09-02+15%3A31%3A37.68931%2B01",
            "id": "714",
            "issue": "559",
            "user": "krefson"
        },
        {
            "content": "Fix+has+been+submitted+to+Stewart+by+Sasha.",
            "created_on": "2011-09-02+16%3A13%3A30.712407%2B01",
            "id": "715",
            "issue": "559",
            "user": "vmilman"
        },
        {
            "content": "I+confess+that+Gamma-point+metals+is+a+case+I+had+neither+considered+nor+tested.%3Cbr+%2F%3E%0D%0AI+fixed+the+problem+which+led+to+the+abort.",
            "created_on": "2011-09-15+07%3A41%3A51.790703%2B01",
            "id": "716",
            "issue": "560",
            "user": "krefson"
        },
        {
            "content": "Bug+fix+checked+in.%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2011-09-19+13%3A16%3A19.202943%2B01",
            "id": "717",
            "issue": "561",
            "user": "mijp1"
        },
        {
            "content": "I+managed+to+get+the+crash+in+one+shot+run+",
            "created_on": "2011-09-20+13%3A42%3A36.890101%2B01",
            "id": "718",
            "issue": "562",
            "user": "aperlov"
        },
        {
            "content": "This+was+caused+by+some+missing+intialisation+which+led+to+a+bad%3Cbr+%2F%3E%0D%0Aattempt+to+restore+state+when+writing+a+backup+file.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ANow+fixed%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-09-20+18%3A24%3A38.168681%2B01",
            "id": "719",
            "issue": "562",
            "user": "krefson"
        },
        {
            "content": "Fix+has+been+checked+in+with+nlxc.F90+r+1.68%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-09-26+15%3A38%3A42.740039%2B01",
            "id": "723",
            "issue": "559",
            "user": "krefson"
        },
        {
            "content": "Fixed+with+cell.F90+1.260+and+secondd_symmetry+1.165",
            "created_on": "2011-09-26+15%3A40%3A12.795656%2B01",
            "id": "724",
            "issue": "492",
            "user": "krefson"
        },
        {
            "content": "I+thought+this+was+fixed+ages+ago+%28model.F90+v1.135%2C+28+Feb+2011%29+-+should+it+be+marked+as+closed%3F+We+can%27t+verify+at+Accelrys+if+the+failure+requires+that+many+cores+to+reproduce.",
            "created_on": "2011-09-27+15%3A23%3A21.410952%2B01",
            "id": "727",
            "issue": "499",
            "user": "vmilman"
        },
        {
            "content": "Who+knows+if+this+is+the+same+issue%2C+but+I+have+another+instance+of+a+band+parallel+run+failing+with+fix_occupancy%3Dtrue+-+2+atoms+silicon+with+4+bands+fails+with+4-way+band+parallelism.++As+this+runs+in+a+second+or+two+it+may+be+easier+to+debug+than+the+previous+instance...++In+this+case+-%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++2-way+k-point+and+2-way+band+parallel+works+correctly%3Cbr+%2F%3E%0D%0A+++1-way+k-point+and+4-way+band+parallel+with+recpot+works+correctly%3Cbr+%2F%3E%0D%0A+++1-way+k-point+and+4-way+band+parallel+with+usp+converges+to+wrong+energy.+",
            "created_on": "2011-09-28+10%3A21%3A33.454199%2B01",
            "id": "728",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "Fixed+in+wave.F90+1.259",
            "created_on": "2011-10-25+12%3A22%3A06.416524%2B01",
            "id": "751",
            "issue": "589",
            "user": "krefson"
        },
        {
            "content": "It%27s+actually+a+very+subtle+bug+in+electronic%2C+which+arose+from+a+combination+of+some+saved+state+%28which+should+not+have+been%29+with+the+phonon+calculation%27s+resetting+the+parallel+strategy+between+perturbations+and+leaving+nodes+idle.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIn+subroutine+electronic_minimisation+there+is+a+declaration%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++logical+%3A%3A+occ_eigenvalues_free%3D.false.++%21+initialise+to+fixed+spin%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Awhich+implicitly+adds+a+%26amp%3Bquot%3BSAVE%26amp%3Bquot%3B+attribute+to+the+declaration%2C+initialises+the+variable+once+at+program+startup+time+and+retains+its+value+from+one+call+of+electronic_minimisation%28%29+to+the+next.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+variable+was+becoming+desynchronised+between+processes+as+it+was+being+set+to+TRUE+on+only+the+active+processes+in+the+first+perturbation.++On+the+second+perturbation+the+value+on+entry+is+TRUE+on+those+processes+active+on+the+first+and+FALSE+on+those+which+were+idle.+This+caused+a+de-synchronisation+at+an+IF+statement+between+processes+resulting+in+a+hang.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-09-28+13%3A35%3A53.783919%2B01",
            "id": "729",
            "issue": "557",
            "user": "krefson"
        },
        {
            "content": "Hmm.+This+is+nothing+to+do+with+the+phonon+calculations+but+a+crash+in+efield+-+which+occurs+in+a+simple+case+with+no+expensive+phonons.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABut.++I+disagree+that+this+is+a+recent+regression.++I+get+exactly+the+same+catastrophic+convergence+failure+in+5.5.2.++This+does+depend+on+the+parallel+distribution+used+-+it+seems+to+fail+with+mixed+distributions+%2824-way%29+but+not+k-point+only+%2816-way%29.++It+also+fails+on+9+processes.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAt+the+moment+the+cause+of+this+is+a+mystery+to+me.",
            "created_on": "2011-10-05+17%3A38%3A41.284692%2B01",
            "id": "735",
            "issue": "587",
            "user": "krefson"
        },
        {
            "content": "I+have+now+isolated+this.+It+turns+out+to+be+due+to+the+disk+IO+collectives%3Cbr+%2F%3E%0D%0Aoptimizations%2C+which+were+also+backported+to+the+5.5+branch+between+5.5.1+and+5.5.2+%28which+explains+why+5.5.2+also+exhibits+the+problem%29.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAlmost+certainly+it+is+due+to+%26amp%3Bquot%3Bwave_apply_symmetry%26amp%3Bquot%3B+malfunctioning.++I+have+asked+Dominik+to+investigate.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-10-07+12%3A31%3A29.084521%2B01",
            "id": "737",
            "issue": "587",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+Phil%27s+checkin+electronic.F90%3A1.231",
            "created_on": "2011-10-07+14%3A25%3A15.421445%2B01",
            "id": "738",
            "issue": "557",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+wave.F90+1.259%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-10-25+17%3A12%3A10.49956%2B01",
            "id": "752",
            "issue": "587",
            "user": "krefson"
        },
        {
            "content": "Confirmed+that+Si2+test+case+fixed%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABut+the+Cu_w80+example+still+crashes.++The+original+bug+appears+to+be+fixed+-+originally+the+array+bound+fault+occurred+on+startup.++Now%2C+the+system+successfully+completes+the+SCF+minimisation%2C+but+crashes+immediately+the+first+MD+iteration+is+started.++This+again+appears+as+a+memory+error+detected+by+malloc%27s+check.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%2A%2A%2A+glibc+detected+%2A%2A%2A+%2Fwork%2Fe89%2Fe89%2Fkrefson%2Fbin%2Fcastep-25-Oct-2011%3A+malloc%28%29%3A+memory+corruption%3A+0x0000000005b2c%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AA+debug+executable+still+gives+the+same+error+%28no+array+bounds+violation+is+detected%29+but+does+give+a+traceback%3A%3Cbr+%2F%3E%0D%0Aforrtl%3A+severe+%28174%29%3A+SIGSEGV%2C+segmentation+fault+occurred%3Cbr+%2F%3E%0D%0AImage++++++++++++++PC++++++++++++++++Routine++++++++++++Line++++++++Source%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000000B46A71++wave_mp_wave_copy++++++++4329++wave.F90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000000B4523A++wave_mp_wave_copy++++++++4139++wave.F90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++00000000006098DA++md_mp_md_extrapol++++++++8205++md.F90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000000613866++md_mp_md_update_c++++++++9478++md.F90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++00000000005D6A7E++md_mp_md_run_+++++++++++++952++md.F90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++00000000004031AF++MAIN__+++++++++++++++++++1107++castep.f90%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000000401A3C++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000002A05E19++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-25-Oct-201++0000000000401915++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AWhen+I+attempt+a+restart+from+the+checkpoint+file%2C+the+exit+is+different+-+but+possibly+related%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AError%2C+wvfn_1%25nbands_max+%2F%3D+wvfn_2%25nbands_max+in+wave_dot_wv_wv_ks%3Cbr+%2F%3E%0D%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0D%0A+wave_dot_wv_wv_ks%3Cbr+%2F%3E%0D%0A+hamiltonian_apply_ks%3Cbr+%2F%3E%0D%0A+hamiltonian_diagonalise_ks%3Cbr+%2F%3E%0D%0A+electronic_minimisation%3Cbr+%2F%3E%0D%0A+md_get_forces%3Cbr+%2F%3E%0D%0A+md_run%3Cbr+%2F%3E%0D%0A+castep%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+occurs+on+any+number+of+processors%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AHoever%2C+I+have+managed+to+reproduce+the+ORIGINAL+symptoms+with+a+new+testcase+running+on+just+4+cores.++So+this+should+be+debuggable+at+last.++The+new+test+case+is+attached+and+gives+a+failing+stack+traceback+very+similar+to+the+original+one.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aforrtl%3A+severe+%28408%29%3A+fort%3A+%283%29%3A+Subscript+%232+of+the+array+ROTATION+has+value+-1+which+is+less+than+the+lower+bound+of+1%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AImage++++++++++++++PC++++++++++++++++Routine++++++++++++Line++++++++Source+++++++++++++%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000005BDD80A++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000005BDC385++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000005B9B3D6++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000005B46BB5++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000005B47009++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000003A2573F++wave_mp_wave_tran+++++++23656++wave.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000038BC2AA++wave_mp_wave_orth+++++++13264++wave.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000038B570F++wave_mp_wave_sort+++++++12974++wave.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000038B5107++wave_mp_wave_sort+++++++12911++wave.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000037CF19C++wave_mp_wave_init++++++++3507++wave.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++0000000001435B96++model_mp_model_in++++++++4009++model.F90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000004D0F74++MAIN__++++++++++++++++++++978++castep.f90%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000004CDE8C++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Alibc.so.6++++++++++00007F8F3332214D++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastep-27-Oct-201++00000000004CDD99++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+new+test+case+is+in+Cu_bis-small%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-10-27+18%3A48%3A28.007048%2B01",
            "id": "753",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "This+is+because+the+realspace_coeffs+array+of+H_eigenvectors+was+dimensioned+for+4+bands+irrespective+of+the+size+of+the+corresponding+array+in+eigenvectors.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AFixed+by+code+change+%28hamiltonian.F90%29.+In+fact+the+size+of+the+realspace+array+for+eigenvectors+was+very+large%2C+so+this+has+been+capped+to+the+usual+4+bands+%28change+to+wave.F90%29.",
            "created_on": "2011-10-28+01%3A50%3A13.970696%2B01",
            "id": "754",
            "issue": "496",
            "user": "pjh503"
        },
        {
            "content": "This+was+due+to+the+inverse+Q+matrix+in+the+preconditioning+being+multiplied+by+the+VCA+weight+instead+of+divided+by+it.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AFixed+by+code+change+%28nlpot.F90+version+1.168%29.",
            "created_on": "2011-10-28+01%3A56%3A55.207609%2B01",
            "id": "755",
            "issue": "421",
            "user": "pjh503"
        },
        {
            "content": "Fixed+by+code+change.+Both+real-+and+reciprocal-space+pseudopotential+calculations+now+use+hamiltonian_diagonalise.",
            "created_on": "2011-10-31+12%3A32%3A14.310384%2B00",
            "id": "756",
            "issue": "128",
            "user": "pjh503"
        },
        {
            "content": "OK%2C+this+is+in+my+optimisation+code%2C+but+it+looks+very+straightforward+to+fix+-+just+a+case+I+failed+to+consider.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-10-31+13%3A35%3A07.505474%2B00",
            "id": "757",
            "issue": "603",
            "user": "krefson"
        },
        {
            "content": "OK%2C+fixed.+Missed+that+special+case.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2011-10-31+14%3A09%3A15.458893%2B00",
            "id": "758",
            "issue": "603",
            "user": "krefson"
        },
        {
            "content": "Keith%27s+suggestion+above+is+on+the+right+lines+-+however+there+are+2+issues+with+the+existing+code+-+a+mis-identification+of+a+null+constraint+and+a+mis-identification+of+linear+dependencies.+Both+have+similar+trivial+fix.+Have+checked+in+changes+to+cell.F90+and+it+appears+to+pass+all+these+tests+OK.%3Cbr+%2F%3E%0D%0A++++++++Matt",
            "created_on": "2011-11-29+00%3A16%3A05.208571%2B00",
            "id": "762",
            "issue": "554",
            "user": "mijp1"
        },
        {
            "content": "Whoops.+Unintentional.+A+trim%28%29+was+missed+when+we+moved+from+literal+%27BFGS%27+to+geom_string.+It+would+be+bad+to+break+the+formats+for+just+1+version+and+the+fix+is+trivial+so+I%27ve+checked+it+in.%3Cbr+%2F%3E%0D%0A++++++++Matt",
            "created_on": "2011-11-30+17%3A57%3A28.462437%2B00",
            "id": "765",
            "issue": "621",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+checkin+-+thanks+Joly%21%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2011-11-30+19%3A03%3A18.275789%2B00",
            "id": "766",
            "issue": "622",
            "user": "mijp1"
        },
        {
            "content": "Confirmed.++As+the+original+submitter+was+too+lazy+to+add+a+test+case%2C+I+have+%3Cbr+%2F%3E%0D%0Amade+one.++This+writes+output+to+the+consile+on+a+2+core+run.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-02-03+16%3A05%3A36.314824%2B00",
            "id": "784",
            "issue": "689",
            "user": "krefson"
        },
        {
            "content": "now+in+progress....",
            "created_on": "2011-12-21+17%3A56%3A15.010631%2B00",
            "id": "771",
            "issue": "161",
            "user": "jry20"
        },
        {
            "content": "Fixed.",
            "created_on": "2012-01-15+13%3A15%3A24.86939%2B00",
            "id": "780",
            "issue": "504",
            "user": "sjc999"
        },
        {
            "content": "Done.",
            "created_on": "2012-01-15+13%3A16%3A03.021566%2B00",
            "id": "781",
            "issue": "512",
            "user": "sjc999"
        },
        {
            "content": "I+have+attached+a+cell+file+which+should+contain+the+optimised+geometry+and+the+pseudopotentials.++It+should+be+possible+to+remove+the+%26amp%3Bquot%3Bcontinuation%26amp%3Bquot%3B+from+the+param+file+and+run.++It+will+be+interesting+to+see+if+it+reproduces+the+hang+in+this+mode.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-02-13+14%3A11%3A05.439213%2B00",
            "id": "789",
            "issue": "625",
            "user": "krefson"
        },
        {
            "content": "There+is+another+instance+of+the+same+mis-spelling+in+the+help+text%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%24+grep+equlibration+Source%2FFundamental%2Fparameters.F90+%3Cbr+%2F%3E%0D%0A++++++++++++write+%28output_unit%2C95%29+%27enhanced+equlibration+method%27%2C%27NONE%27%3Cbr+%2F%3E%0D%0A++++++++++++write+%28output_unit%2C95%29+%27enhanced+equlibration+method%27%2C%27BERENDSEN%27%3Cbr+%2F%3E%0D%0A+++++++++++%26amp%3Bamp%3B+Specify+a+enhanced+scheme+for+speeding+equlibration+which+does+not+%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-02-16+17%3A12%3A29.068331%2B00",
            "id": "792",
            "issue": "704",
            "user": "krefson"
        },
        {
            "content": "I+agree%2C+and+will+support+this+change.++If+you+would+care+to+code+and+test+I+or+Chris+will+get+it+into+the+codebase.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+code+is+in+castep.f90+and+io.F90.+Grep+for+%26amp%3Bquot%3Bio_freeform_help%26amp%3Bquot%3B+and+%26amp%3Bquot%3Bcheck_print_help%26amp%3Bquot%3B%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AKeith",
            "created_on": "2012-03-30+11%3A23%3A36.632972%2B01",
            "id": "808",
            "issue": "717",
            "user": "krefson"
        },
        {
            "content": "Andrew+walker++%26amp%3Blt%3Bandrew.walker%40bris.ac.uk%26amp%3Bgt%3B+has+taken+this+up.....%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AMy+Cij+scripts+are+derived+from+the+work+of+Dan+Wilson+as+part+of+the+Materials+Grid+project.+At+some+point+I%27ll+get+around+to+writing+some+documentation+and+sensible+unit+tests+but+in+the+meantime+they+can+be+forked+from+https%3A%2F%2Fgithub.com%2Fandreww%2Felastic-constants+-+patches+are+most+welcome.+If+you+use+these+I+would+strongly+recommend+a+comparison+of+the+calculated+elastic+constants+with+symmetry+turned+off+%28in+the+CASTEP+input+and+by+forcing+a+triclinic+strain+pattern%29+with+one+with+the+symmetry+turned+on+%28in+CASTEP%2C+the+scripts+should+pick+up+the+strain+pattern+from+this%29.+If+the+two+results+differ+something+is+probably+wrong.+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+will+close+the+request+now.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-04-04+10%3A37%3A28.983016%2B01",
            "id": "810",
            "issue": "16",
            "user": "krefson"
        },
        {
            "content": "Completed+by+Dominik+Jochym+and+checked+in+to+Hg.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-04-04+10%3A39%3A28.162568%2B01",
            "id": "811",
            "issue": "206",
            "user": "krefson"
        },
        {
            "content": "Fixed+in+93d97fa6815d+%28Castep60_branch%29+and+340242afecb9+%28default+branch%29",
            "created_on": "2012-06-29+11%3A41%3A33.142168%2B01",
            "id": "847",
            "issue": "740",
            "user": "krefson"
        },
        {
            "content": "Fixed.%3Cbr+%2F%3E%0D%0A+++Matt",
            "created_on": "2012-07-22+13%3A52%3A50.723943%2B01",
            "id": "855",
            "issue": "704",
            "user": "mijp1"
        },
        {
            "content": "Fixed.%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2012-07-22+13%3A53%3A14.387284%2B01",
            "id": "856",
            "issue": "703",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2012-07-23+19%3A35%3A11.715896%2B01",
            "id": "857",
            "issue": "633",
            "user": "mijp1"
        },
        {
            "content": "Failed+to+reproduce+behaviour+even+with+these+input+files.+I+always+get+%26amp%3Bquot%3Bwith%26amp%3Bquot%3B+ground+state+wavefunction+and+no+problem.+Checked+code+path+and+seems+fine+to+me.+The+only+case+when+it+will+overwrite+the+old+file+is+if+there+is+no+data+in+the+restart%2C+whereupon+your+MD+trajectory+will+be+lost+anyway%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+think+any+problem+must+lie+in+model+...%3Cbr+%2F%3E%0D%0A++++++++Matt",
            "created_on": "2012-07-23+20%3A34%3A05.003514%2B01",
            "id": "858",
            "issue": "537",
            "user": "mijp1"
        },
        {
            "content": "I+still+see+this+in+the+3rd+August+version+%28no+continuation%29%3B+would+it+be+possible+to+fix+for+MS+6.1%3F+Note+that+the+job+runs+on+smaller+number+on+cores%2C+and+on+32+cores+it+stops+with+%26amp%3Bquot%3BError%3A+magres_apply_green_function_s2%3A+not+converged%26amp%3Bquot%3B.+I+attached+that+output.",
            "created_on": "2012-08-03+09%3A27%3A08.640365%2B01",
            "id": "861",
            "issue": "625",
            "user": "vmilman"
        },
        {
            "content": "Not+reproduced+crash+yet+even+with+same+param+%26amp%3Bamp%3B+cell+file+%26amp%3Bamp%3B+rand_seed+when+run+in+serial+-+hence+might+be+compiler+dependent+or+parallel+bug.%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2012-08-09+16%3A48%3A51.076492%2B01",
            "id": "863",
            "issue": "760",
            "user": "mijp1"
        },
        {
            "content": "Compiler+optimisation+level+changes+convergence+path+and+hence+slight+different+Hessian.+LAPACK+or+MKL+seems+to+sometimes+trash+Hessian+in+SVD+call.+Solution+is+to+backup+before+call.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABug+now+fixed+by+code+change.%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2012-08-15+18%3A09%3A46.008529%2B01",
            "id": "869",
            "issue": "760",
            "user": "mijp1"
        },
        {
            "content": "Fixed+along+lines+of+B+and+C+by+hg+commit+%23+1610",
            "created_on": "2013-10-23+15%3A15%3A53.443572%2B01",
            "id": "1102",
            "issue": "941",
            "user": "krefson"
        },
        {
            "content": "Implemented+in+hg+revision+6173++",
            "created_on": "2013-10-25+07%3A52%3A21.871855%2B01",
            "id": "1103",
            "issue": "870",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+commit+6185",
            "created_on": "2013-10-30+18%3A23%3A39.569529%2B00",
            "id": "1104",
            "issue": "938",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ADone.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2017-08-08+15%3A40%3A01.231261%2B01",
            "id": "1905",
            "issue": "1741",
            "user": "mijp1"
        },
        {
            "content": "There+is+a+bug+here%2C+but+not+as+described.+The+dipole+correction+is+working+fine.+The+problem+is+that+the+two+different+tests+have+two+different+initial+bond+lengths+and+generate+different+convergence+trajectories.+One+of+these+goes+into+bisection+search%2C+and+that+is+where+the+bug+lies+...+++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AStill+working+to+find+%26amp%3Bamp%3B+fix+the+bisection+bug.%3Cbr+%2F%3E%0D%0AMatt",
            "created_on": "2012-08-25+00%3A01%3A50.867958%2B01",
            "id": "875",
            "issue": "759",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change+-+there+was+an+over-zealous+validation+check+on+basis_de_dloge+that+is+never+required.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2012-08-25+00%3A02%3A55.240237%2B01",
            "id": "876",
            "issue": "764",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2012-08-25+00%3A17%3A16.983763%2B01",
            "id": "877",
            "issue": "489",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+adding+extra+test+in+parameters_validate.%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2012-08-25+00%3A48%3A58.646371%2B01",
            "id": "878",
            "issue": "527",
            "user": "mijp1"
        },
        {
            "content": "I+agree+-+in+fact+I+pointed+this+out+to+Chris+when+he+first+implemented+it%2C+but+we+were+so+glad+to+get+it+working+at+last+that+this+became+a+%26amp%3Bquot%3Brainy+day%26amp%3Bquot%3B+task+that+never+happened.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AActually%2C+the+existing+code+is+more+robust%2Ffriendly+then+at+first+glance+-+if+you+type+%26amp%3Bquot%3B.%2Fcastep+-h%26amp%3Bquot%3B+it+works+the+same+as+%26amp%3Bquot%3B.%2Fcastep+--help%26amp%3Bquot%3B+and+as+%26amp%3Bquot%3B.%2Fcastep+-help%26amp%3Bquot%3B.+In+fact%2C+ANY+invocation+with+1+arg+that+starts+with+a+%26amp%3Bquot%3B-%26amp%3Bquot%3B+will+produce+the+help+text%21%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AHence+it+would+be+trivial+to+change+the+default+from+%26amp%3Bquot%3B-help%26amp%3Bquot%3B+to+%26amp%3Bquot%3B--help%26amp%3Bquot%3B+-+but+what+is+not+so+obvious+is+how+to+differentiate+--help-search+...%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2012-08-25+01%3A00%3A46.896698%2B01",
            "id": "879",
            "issue": "717",
            "user": "mijp1"
        },
        {
            "content": "It+seems+I+hadn%27t+thought+this+through+fully.+This+is+not+quite+the+correct+condition+to+test%2C+as+it+disallows%2C+eg+a+calculation+with+a+single+H+atom.++I+think+adding+the+spin+polarization+state+into+the+test+should+rectify+this.+%3Cbr+%2F%3E%0D%0AThat+is%2C+disallow+a+non+spin-polarized+odd-electron%2C+fixed+occupancy+calculation.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-08-27+19%3A25%3A17.230762%2B01",
            "id": "881",
            "issue": "527",
            "user": "krefson"
        },
        {
            "content": "I+found+that+the+same+is+true+for+SHF-LDA%2C+which+we+used+for+a+while%2C+so+in+principle+it+seems+that+there+are+problems+with+the+logic+of+doing+FD+phonons+with+some+functionals.+Curiously+though%2C+when+I+tried+running+the+same+in+debugger%2C+CASTEP+stopped+a+lot+earlier+with%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Aforrtl%3A+severe+%28408%29%3A+fort%3A+%283%29%3A+Subscript+%231+of+the+array+NUM_PLANE_WAVES_QP+has+value+0+which+is+less+than+the+lower+bound+of+1%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AImage++++++++++++++PC++++++++Routine++++++++++++Line++++++++Source%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++0399B43A++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++038B203A++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++038B286E++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++00B5A12F++_NLXC_mp_NLXC_CAL+++++++++618++nlxc.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++019E276D++_ELECTRONIC_mp_EL++++++++2488++electronic.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++019BE154++_ELECTRONIC_mp_EL+++++++++334++electronic.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++0104A23E++_PHONON_mp_PHONON++++++++3860++phonon.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++00FF1125++_PHONON_mp_PHONON+++++++++519++phonon.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++00405A1E++_MAIN__+++++++++++++++++++494++castep.f90%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++03A76173++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++0393DB17++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0Acastepexe.exe++++++0393D9EF++Unknown+++++++++++++++Unknown++Unknown%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+comes+from%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++do+nq%3D1%2Cnqpts%3Cbr+%2F%3E%0D%0A++++++++++eqv_nk%3Dnq_to_scf_nk%28nq%29%3Cbr+%2F%3E%0D%0A++++++++++if%28eqv_nk%3D%3D-1%29+cycle+%21+if+kpoint+is+not+on+this+node%3Cbr+%2F%3E%0D%0A++++++++++nk_ident_nq%3Dnk_to_identical_nq%28eqv_nk%29%3Cbr+%2F%3E%0D%0A++++++++++do+pw_index_kp%3D1%2Cnum_plane_waves_qp%28nk_ident_nq%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Awhere+indeed+ns_ident_nq+is+zero.+Looks+to+me+like+release+build+goes+through+this...+An+added+inconvenience+is+that+I+cannot+debug+through+to+the+%E2%80%9Crelease%E2%80%9D+failure...+Inputs%2Foutputs+are+attached%2C+the+second+run+requires+copying+of+check+file+from+the+first+in+the+usual+MS+fashion.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-08-31+09%3A04%3A57.494735%2B01",
            "id": "883",
            "issue": "772",
            "user": "vmilman"
        },
        {
            "content": "Attached+iprint%3D3+output+files+of+a+cheaper+version+of+the+run+%28SPE%2C+and+smaller+Ecut%29",
            "created_on": "2012-08-31+10%3A49%3A57.473165%2B01",
            "id": "884",
            "issue": "772",
            "user": "vmilman"
        },
        {
            "content": "Fixed+by+change+6178%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABut+there+are+still+other+crashes%2C+eg+if+you+try+a+default+MD+run+in+band+parallel.",
            "created_on": "2013-10-30+18%3A25%3A30.954982%2B00",
            "id": "1105",
            "issue": "950",
            "user": "krefson"
        },
        {
            "content": "I+am+going+to+mark+this+as+%26amp%3Bquot%3Bwill+not+fix%26amp%3Bquot%3B.++With+7.0%2C+supercells+are+flagged+up+in+the+banner+now.",
            "created_on": "2013-10-30+18%3A48%3A13.161606%2B00",
            "id": "1106",
            "issue": "468",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+commit+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A5789+%2856f85f4bd6d0%29+Fix+for+array+bound+violation+in+OTF+generator+with+%28-1%29+as+local+component.",
            "created_on": "2012-09-07+09%3A55%3A40.959339%2B01",
            "id": "888",
            "issue": "774",
            "user": "krefson"
        },
        {
            "content": "I+have+added+a+devel-code+option+which+can+be+tried+in+the+rare+cases+where+this+remains+a+problem%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++devel_code+DMAT_SYMMETRY_SLOPPY%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Awill+cautiously+leave+any+irreproducible+symmetry+relations+in+the+dynamical+matrix+symmetry+map+unfilled.++It+is+almost+certain+that+the+subsequent+symmetry+completion+of+the+dynamical+matrix+will+fill+in+any+gaps+later%2C+and+I+have+not+seen+an+abort%2C+but+this+will+need+more+rigorous+checking.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-09-07+10%3A02%3A48.75097%2B01",
            "id": "889",
            "issue": "747",
            "user": "krefson"
        },
        {
            "content": "Seems+that+num_proc_in_smp+is+involved%3B+latest+version+runs+fine+with+%26amp%3Bquot%3B1%26amp%3Bquot%3B+on+any+number+of+cores%2C+but+fails+when+it%27s+set+to+12+or+8.",
            "created_on": "2012-09-19+14%3A06%3A06.760604%2B01",
            "id": "891",
            "issue": "625",
            "user": "vmilman"
        },
        {
            "content": "Fixed+ages+ago",
            "created_on": "2012-09-20+16%3A05%3A28.785945%2B01",
            "id": "900",
            "issue": "763",
            "user": "krefson"
        },
        {
            "content": "The+actual+parallel+desync+bug+is+definitively+fixed.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+spotted+this+vulnerability+while+investigating+a+problem+with+SHM%2FSMP+and+FFTs+resurning+the+wrong+result+in+a+machine-dependent+way.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AClosing+this+bug+as+fixed%2C+but+will+re-open+the+FFT+garbage+test.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2012-09-20+17%3A09%3A02.04085%2B01",
            "id": "901",
            "issue": "625",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change+in+this+routine+%26amp%3Bamp%3B+calling+context.%3Cbr+%2F%3E%0D%0A+++++++Matt",
            "created_on": "2012-10-10+16%3A04%3A57.368403%2B01",
            "id": "911",
            "issue": "785",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+turned+out+to+be+a+rather+subtle+edge-case+related+to+the+detailed+ordering+of+the+topmost+bands+when%3A+%28a%29+a+small+number+of+conduction+states+are+requested+%28nonzero%2C+but+smaller+than+one+optimisation+block%29%3B+%28b%29+a+large+number+of+optimisation+steps+were+requested%3B+and+%28c%29+the+valence+band+maximum+is+close+to+zero+%28a+small+multiple+of+smearing_width%29.",
            "created_on": "2013-05-30+18%3A53%3A18.346695%2B01",
            "id": "1024",
            "issue": "862",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+17.2.1%3C%2Fp%3E%0A",
            "created_on": "2017-08-09+12%3A43%3A01.77309%2B01",
            "id": "1908",
            "issue": "1734",
            "user": "krefson"
        },
        {
            "content": "Update+for+7.0%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+Cu_bis-small+example+still+aborts+with+a+memory%2Farray+bounds+error.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASi8+geometry+or+MD+also+crashes+with+a+memory+error.",
            "created_on": "2013-11-06+12%3A44%3A48.574595%2B00",
            "id": "1109",
            "issue": "499",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0A%3C%2Fp%3E%0A",
            "created_on": "2017-11-03+14%3A37%3A21.189603%2B00",
            "id": "1970",
            "issue": "1792",
            "user": "vmilman"
        },
        {
            "content": "On+a+further+thought%2C+this+is+almost+certainly+because+none+of+the+DFT%2BD+schemes+is+parameterized+for+W.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+are+actually+two+bugs%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A1.+Track+down+and+fix+why+the+error+message+want+awry%3Cbr+%2F%3E%0D%0A2.+Fix+this+io_abort+call+to+only+report+on+the+root+node%2C+as+it+is+creating+a+multiplicity+of+.err+files.%3Cbr+%2F%3E%0D%0A+",
            "created_on": "2012-12-28+14%3A49%3A22.659639%2B00",
            "id": "940",
            "issue": "834",
            "user": "krefson"
        },
        {
            "content": "Note+that+there+is+now+ONETEP+implementation+of+Dion%2BSoler+formalism.+The+most+recent+good+version+of+vdW-DFT+is+from+Angelos+Michaelides+http%3A%2F%2Fprb.aps.org%2Fabstract%2FPRB%2Fv84%2Fi20%2Fe201401",
            "created_on": "2013-01-03+16%3A00%3A00.356398%2B00",
            "id": "941",
            "issue": "236",
            "user": "vmilman"
        },
        {
            "content": "I+just+verified+that+the+attached+patch+fixes+this+problem+%28it+might+create+others%2C+but+none+that+I+can+see%29.",
            "created_on": "2013-02-06+16%3A11%3A33.199203%2B00",
            "id": "963",
            "issue": "859",
            "user": "pbro"
        },
        {
            "content": "Victor.+It+would+be+very+helpful+if%2C+whenever+you+want+to+report+a+segmentation+fault+or+similar+crash%2C+that+you+show+the+result+of+running+with+a+debug+build.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-04-24+11%3A14%3A09.553453%2B01",
            "id": "998",
            "issue": "889",
            "user": "krefson"
        },
        {
            "content": "Fixed+with+Hg+commit+4af17b899c41",
            "created_on": "2013-03-09+15%3A09%3A32.26653%2B00",
            "id": "971",
            "issue": "827",
            "user": "krefson"
        },
        {
            "content": "Fixed+with+commit+2ab2ac52865c",
            "created_on": "2013-03-09+15%3A10%3A28.274621%2B00",
            "id": "972",
            "issue": "856",
            "user": "krefson"
        },
        {
            "content": "On+further+investigation%2C+this+is+a+very+special+case%2C+and+can+probably+be+handled+with+a+special+case+piece+of+code.++The+issue+is+that+the+grid+consisting+of+the+point+k%3D%281%2F4%2C1%2F4%2C1%2F4%29+is+not+unique+under+cubic+symmetry.++It+could+either+be+a+2x2x2+grid+with+no+offset+or+an+offet+1x1x1+grid+without+a+time-reversal+inversion.++%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+current+code+assumes+the+former%2C+2x2x2+grid.+This+is+correct+for+simple+cubic.+However+it+is+not+compatible+with+fcc+symmetry+in+the+primitive+cell%2C+where+another+point+is+symmetry-generated+and+required.++So+the+MP+detection+fails+on+the+%26amp%3Bquot%3Bcompleteness%26amp%3Bquot%3B+test.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+suggest+that+the+case+of+a+single+k-point+which+generates+a+2x2x2+grid%2C+but+fails+the+completeness+test+can+specially+coded+to+return+the+1x1x1+grid.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+may+or+may+not+be+related+cases+for+lower-symmetry+systems+for+face-+and+body-centred+lattices.",
            "created_on": "2013-03-10+14%3A08%3A26.569432%2B00",
            "id": "973",
            "issue": "506",
            "user": "krefson"
        },
        {
            "content": "Some+more+investigation+on+this.++I+have+discovered+a+simpler+test+case+for+this+-+the+bct+C4+structure+of+http%3A%2F%2Fprl.aps.org%2Fabstract%2FPRL%2Fv104%2Fi12%2Fe125504.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+test+cases+perform+near+identical+interpolation+calculations+of+this+bct+structure.+This+is+a+wide-gap+insulator+and+a+a+sane+but+unconverged+calculation+can+be+run+with+a+2x2x2+MP+grid.%3Cbr+%2F%3E%0D%0AThe+ones+labeled+%26amp%3Bquot%3B-s-%26amp%3Bquot%3B+choose+lattice+vectors+along+the+trtragonal+%28111%29+directions+and+the+ones+labeled+%26amp%3Bquot%3B-s0-%26amp%3Bquot%3B+have+a+and+b+along+the+%28100%29+and+%28010%29.++The+K-point+sampling+is+an+OFFSET+2x2x2+grid+in+both+cases+containing+the+gamma+point.++This+gives+an+equivalent+sampling+between+the+two+cases%2C+unlike+the+non-offset+2x2x2+which+gives+inequivalent+k-point+sets+and+different+answers.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+DFPT+calculations+on+the+four+q-points+give+very+similar+dynamical+matrices+and+frequencies%3B+however+the+interpolations+show+simusoidal+Fourier+waves+for+%26amp%3Bquot%3B-s0-%26amp%3Bquot%3B+but+a+sensible+dispersion+for+%26amp%3Bquot%3B-s-%26amp%3Bquot%3B.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThere+is+some+inconsistency+between+phonon_recip_to_real%2C+phonon_real_to_fine%2C+phonon_supercell_vectors+about+whether++the+minimum+image+%28supercell%29+convention+is+applied+to+the+supercell+offset+vectors+%26amp%3Bquot%3Bdist_supercell%26amp%3Bquot%3B.+However+changing+this+makes+no+difference+to+the+results+of+the+interpolation.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-03-13+09%3A21%3A58.433606%2B00",
            "id": "974",
            "issue": "516",
            "user": "krefson"
        },
        {
            "content": "An+update+from+Phil+Hasnip%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+I+still+haven%27t+managed+to+reproduce+this+with+any+of+my+own+binaries%2C+but+I+%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+have+at+least+confirmed+it+occurs+with+the+HECToR+binary.+The+problem+appears+%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+to+be+the+usual+maths+library+instability+for+large+search+spaces%2C+so+%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+reducing+max_cg_steps+from+100+%28why%3F%21%29+to+5+fixes+the+problem.+I%27ll+keep+%3Cbr+%2F%3E%0D%0A%26amp%3Bgt%3B+trying+to+reproduce+it+from+source+which+would+let+me+track+it+down+better.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Amax_cg_steps+is+a+parameter+which+does+have+unpredictable+effects%2C+and+has+caused+problems+in+the+past.+Perhaps+we+ought+to+diable+this.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0APhil%27s+suspicion+that+this+is+a+%26amp%3Bquot%3Bmaths+library%26amp%3Bquot%3B+issue+is+contradicted+by+my+observation+that+the+case+fails+with+all+of+ifort%2FMKL%2C+gfortan%2FOpenBLAS+and+gfortran%2Flibsci+%28Cray%29+builds.++",
            "created_on": "2013-03-13+09%3A44%3A15.087309%2B00",
            "id": "975",
            "issue": "862",
            "user": "krefson"
        },
        {
            "content": "From+a+UI+point+of+view+the+obvious+thing+to+do+is+to+use+the+multiple-path+component+aspect+of+PSPOT_DIR%2C+so+you+could+for+example+set%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0APSPOT_DIR%3D.%3A%2Fusr%2Flocal%2Fshare%2Fpseudopotentials%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Awhich+would+search+the+current+directory+as+well.++In+fact+%26amp%3Bquot%3B.%26amp%3Bquot%3B+is+implicitly+there+for+.usp+and+.recpot+files+already.++But+as+you+write%2C+the+code+in+ion_atom+would+need+to+be+changed+to+implement+this.++This+could+be+done+by+changing+%26amp%3Bquot%3Bcell_find_pseudopotential%26amp%3Bquot%3B+into+a+public+routing+of+cell+and+simply+calling+it.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AComments%3F%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AKeith%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-03-21+17%3A58%3A09.816591%2B00",
            "id": "980",
            "issue": "870",
            "user": "krefson"
        },
        {
            "content": "Or+we+could+%28at+last%29+do+this+properly+and+do+the+real-space+transformation+on+the+fly+within+CASTEP+itself....%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-03-21+17%3A59%3A56.080093%2B00",
            "id": "981",
            "issue": "870",
            "user": "krefson"
        },
        {
            "content": "If+memory+serves%2C+this+was+fixed+in+6.0+but+I+forgot+to+close+the+bug.+It+is+definitely+fixed+in+6.1.",
            "created_on": "2013-05-29+18%3A09%3A51.233913%2B01",
            "id": "1023",
            "issue": "438",
            "user": "pjh503"
        },
        {
            "content": "Done+for+7.0",
            "created_on": "2013-11-08+18%3A16%3A26.487675%2B00",
            "id": "1111",
            "issue": "201",
            "user": "krefson"
        },
        {
            "content": "High+priority+due+to+it+segfaulting+all+my+runs.",
            "created_on": "2013-04-29+16%3A37%3A00.21946%2B01",
            "id": "1000",
            "issue": "893",
            "user": "pbro"
        },
        {
            "content": "By+coincidence+I+discovered+this+yesterday+and+checked+in+the+fix+for+this+at+lunchtime+today.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AStewart+will+need+to+review+the+fix.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-04-29+17%3A13%3A27.399351%2B01",
            "id": "1001",
            "issue": "893",
            "user": "krefson"
        },
        {
            "content": "Now+cross-checks+atom+species+%2F+XC+functional+and+DFT%2BD+scheme+BEFORE+starting+the+SCF+calculation.",
            "created_on": "2013-04-30+17%3A28%3A21.811253%2B01",
            "id": "1004",
            "issue": "834",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+commit+5945%3Ab063bd23e87e",
            "created_on": "2013-04-30+18%3A18%3A49.579905%2B01",
            "id": "1005",
            "issue": "878",
            "user": "krefson"
        },
        {
            "content": "Patch+applied+with+Phil%27s+consent.+02%2F05%2F2013",
            "created_on": "2013-05-03+10%3A12%3A43.34032%2B01",
            "id": "1007",
            "issue": "890",
            "user": "krefson"
        },
        {
            "content": "I+think+we+agreed+at+a+recent+meeting+in+Durham+that+this+would+be+done+by+adding+a+new+member+of+type+UNIT_CELL+named+something+like+ATOM_LABEL%28ni%2Cnsp%29+of+type+character+and+a+new+syntax+in+the+.cell+file.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIt+would+be+good+to+get+this+in+for+for+7.0.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-05-07+09%3A56%3A56.72834%2B01",
            "id": "1009",
            "issue": "738",
            "user": "krefson"
        },
        {
            "content": "This+sounds+like+something+that+could+best+be+done+with+the+aid+of+the+k.p+module.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIt+might+also+be+possible+in+orbitals2bands.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ACurrent+band+structure+calculations+only+know+about+a+list+of+k-points%2C+so+reconstructing+a+path+would+be+tricky+and+uunreliable.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-05-07+09%3A59%3A13.424992%2B01",
            "id": "1010",
            "issue": "750",
            "user": "krefson"
        },
        {
            "content": "This+test+reproducibly+shows+bad+convergence+in+the+standard+Accelrys+build+%28ifort+12%2C+MKL%29.+HOWEVER+-+it+reproducibly+works+fine+when+iprint%3D3+line+is+commented+out.+",
            "created_on": "2013-05-10+14%3A24%3A23.61275%2B01",
            "id": "1018",
            "issue": "862",
            "user": "vmilman"
        },
        {
            "content": "2%7C2.5%7C2.5%7C2.1%7C5.7%7C7%7C9%7C40U%3A50U%2B0U%2B0.125%3A41UU%28qc%3D3.75%29%5B%5D%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-05-22+15%3A52%3A15.043388%2B01",
            "id": "1022",
            "issue": "224",
            "user": "krefson"
        },
        {
            "content": "OK%2C+fixed+along+with+some+associated+bugs+which+caused+the+error+message+printing+to+fail.",
            "created_on": "2013-06-18+15%3A14%3A36.517944%2B01",
            "id": "1044",
            "issue": "917",
            "user": "krefson"
        },
        {
            "content": "Fixed.",
            "created_on": "2013-06-19+17%3A42%3A11.217615%2B01",
            "id": "1046",
            "issue": "898",
            "user": "krefson"
        },
        {
            "content": "Fixed+in+cahngeset+a464f49fc9be.++Error+was+caused+by+incorrect+call+to+tddft_calculate_forces+when+tddft_selected_state+was+zero.",
            "created_on": "2013-07-16+17%3A35%3A36.234785%2B01",
            "id": "1058",
            "issue": "921",
            "user": "domj"
        },
        {
            "content": "Fixed+by+code+change.%3Cbr+%2F%3E%0D%0A+++++Matt",
            "created_on": "2013-08-16+19%3A16%3A49.642275%2B01",
            "id": "1060",
            "issue": "897",
            "user": "mijp1"
        },
        {
            "content": "Fixed+by+code+change+-+now+allows+up+to+9.9%2A10%5E9+processors+...%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2013-08-16+19%3A20%3A53.458342%2B01",
            "id": "1061",
            "issue": "857",
            "user": "mijp1"
        },
        {
            "content": "Bisection+search+bug+fixed+ages+ago+-+forgot+to+close+this+bug+at+the+time.%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2013-08-16+20%3A11%3A04.175436%2B01",
            "id": "1062",
            "issue": "759",
            "user": "mijp1"
        },
        {
            "content": "Fixed.+Problem+was+in+basis+%28not+parameters%29+where+the+local+value+and+parameters+module+values+were+not+in+sync.%3Cbr+%2F%3E%0D%0A++++Matt",
            "created_on": "2013-08-19+12%3A45%3A26.43158%2B01",
            "id": "1063",
            "issue": "840",
            "user": "mijp1"
        },
        {
            "content": "This+is+on+the+list+but+I+don%27t+have+a+due+date+yet.",
            "created_on": "2013-08-19+16%3A28%3A52.494724%2B01",
            "id": "1064",
            "issue": "932",
            "user": "krefson"
        },
        {
            "content": "Following+dscussions+at+the+2013+Oxford+workshop%2C+we+also+think+it+would+be+a+good+idea+to+add+--version%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-08-23+13%3A56%3A49.152842%2B01",
            "id": "1065",
            "issue": "717",
            "user": "krefson"
        },
        {
            "content": "Same+bug+also+in+cell+file+reading.%3Cbr+%2F%3E%0D%0AFixed+by+code+change+-+replace+TAB+by+space+within+io_freeform_open+prior+to+any+keyword+parsing.%3Cbr+%2F%3E%0D%0A++++++Matt",
            "created_on": "2013-09-10+12%3A12%3A51.930733%2B01",
            "id": "1070",
            "issue": "935",
            "user": "mijp1"
        },
        {
            "content": "With+the+new+ion_atom+patch+of+%3Cbr+%2F%3E%0D%0AChangeset%3A%3Cbr+%2F%3E%0D%0A6077+%280f593be40ae6%29+Remerging+ion_atom+branch+with+support+for+multiple+OTFG+sets%2C%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Athe+OTFGs+all+build.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-09-15+10%3A53%3A31.72447%2B01",
            "id": "1072",
            "issue": "139",
            "user": "krefson"
        },
        {
            "content": "In+a+conversation+with+Stewart%2C+he+agreed+that+changing+phonon_kpoint_mp_offset+upon+continuation+ought+to+re-generate+the+list+of+phonon+kpoints+within+cell.%3Cbr+%2F%3E%0D%0A+",
            "created_on": "2013-09-22+13%3A54%3A31.180965%2B01",
            "id": "1075",
            "issue": "930",
            "user": "krefson"
        },
        {
            "content": "Fixed+with+code+change.",
            "created_on": "2013-09-24+11%3A31%3A54.438199%2B01",
            "id": "1076",
            "issue": "918",
            "user": "sjc999"
        },
        {
            "content": "Information+now+given+as+suggested.",
            "created_on": "2013-09-24+18%3A15%3A32.36457%2B01",
            "id": "1077",
            "issue": "911",
            "user": "sjc999"
        },
        {
            "content": "Fixed+by+code+change.",
            "created_on": "2013-09-24+19%3A55%3A30.03502%2B01",
            "id": "1078",
            "issue": "904",
            "user": "sjc999"
        },
        {
            "content": "Issue+with+parallel+strategy+-+stops+in+basis+with+out+of+bounds+error.+SCF+%284+kpts%29+done%2C+defaulting+to+kpt+parallel.+Restart+with+1+kpt%2C+but+retains+kpt+parallel+on+greater+than+one+core%2C+hence+one+core+has+1+kpt+and+the+rest+have+zero%2C+hence+basis+fails+with+out+of+bounds+-+num_plane_waves_kp+is+zero+on+all+but+one+core.+Logic+for+defaults+in+param+need+sorted+when+nkpts+%26amp%3Blt%3B+ncores.",
            "created_on": "2013-09-25+09%3A53%3A35.147445%2B01",
            "id": "1079",
            "issue": "889",
            "user": "sjc999"
        },
        {
            "content": "Paging+of+wvfns+insignificant+wrt+memory+in+NLXC+calculations%2C+hence+not+done.+Warning+should+remain%2C+but+defaults+in+param+needs+fixed.+NLXC+calculations+requires+default+of+no+wvfn+paging+and+%26amp%3Bquot%3Bopt_strategy+%3A+speed%26amp%3Bquot%3B%2C+or+equivalent.",
            "created_on": "2013-09-25+09%3A58%3A04.913742%2B01",
            "id": "1080",
            "issue": "826",
            "user": "sjc999"
        },
        {
            "content": "It+does+seem+like+the+fix+will+be+yet+more+lock-out+logic+in+parameters.+Reassigned+to+Matt+for+discussion+of+what%21",
            "created_on": "2013-09-25+10%3A28%3A32.857848%2B01",
            "id": "1081",
            "issue": "826",
            "user": "krefson"
        },
        {
            "content": "As+Keith+suggests%2C+cell_find_pseudopotential+has+been+made+public+for+ion_atom+to+call.+Passed+over+to+Chris+now.",
            "created_on": "2013-09-25+13%3A50%3A07.016358%2B01",
            "id": "1082",
            "issue": "870",
            "user": "sjc999"
        },
        {
            "content": "Just+tested+with+v7.0.+Fix+implemented+earlier+and+code+exits+with+correct+message.",
            "created_on": "2013-09-25+13%3A57%3A39.821298%2B01",
            "id": "1083",
            "issue": "556",
            "user": "sjc999"
        },
        {
            "content": "Added+atom+attribute+LABEL%3D%26amp%3Blt%3Btag%26amp%3Bgt%3B.+Known+%26amp%3Bquot%3Bfeature%26amp%3Bquot%3B%2C+multiple+atom+attributes+doesn%27t+work+%28eg.+SPIN%3D1%2C+LABEL%3Dwibble%29%2C+so+current+implementation+only+allows+a+single+attribute.+This+can+be+fixed+by+a+more+intelligent+cell_read_line_real%2Fchar.+Can+re-open+this+as+a+feature+request+if+anyone+actually+needs+it.",
            "created_on": "2013-09-25+14%3A01%3A21.440493%2B01",
            "id": "1084",
            "issue": "738",
            "user": "sjc999"
        },
        {
            "content": "Code+changed+so+that+duplicate+k-points+now+have+different+index+in+.bands+file.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-09-26+12%3A16%3A59.417238%2B01",
            "id": "1085",
            "issue": "204",
            "user": "sjc999"
        },
        {
            "content": "Done+and+included+in+7.0",
            "created_on": "2013-09-26+17%3A10%3A48.310553%2B01",
            "id": "1086",
            "issue": "530",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AChangeset%3A%3Cbr+%2F%3E%0D%0A6140+%28d5969d2b7f51%29+Added+code+to+ensure+phonon_%5Bfine_%5Dkpoint_mp_offset+is+used+even%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-09-26+17%3A51%3A36.518633%2B01",
            "id": "1087",
            "issue": "930",
            "user": "krefson"
        },
        {
            "content": "No+problems+after+1+year.+Now+made+the+default.",
            "created_on": "2013-10-08+12%3A29%3A05.224381%2B01",
            "id": "1088",
            "issue": "747",
            "user": "krefson"
        },
        {
            "content": "Having+thought+about+this+a+little%2C+I+think+a+fallback+to+%26amp%3Bquot%3Breuse%26amp%3Bquot%3B+would+be+the+%26amp%3Bquot%3Bright+thing%26amp%3Bquot%3B+in+such+an+infrequent+set+of+circumstances%2C+that+it+would+risk+more+unintended+calculations+than+it+saved.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AOn+the+other+hand%2C+changing+the+behaviour+of+%26amp%3Bquot%3Bcontinuation%3A+default%26amp%3Bquot%3B+to+start+a+new+run+if+no+.check+file+is+present+could+be+useful.++As+this+only+changes+the+behaviour+in+cases+which+would+have+aborted+previously%2C+it+has+to+be%3Cbr+%2F%3E%0D%0A+safe.+%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-10-14+17%3A59%3A22.846378%2B01",
            "id": "1089",
            "issue": "200",
            "user": "krefson"
        },
        {
            "content": "Fixed+by+code+change+%236158",
            "created_on": "2013-10-15+08%3A09%3A31.13619%2B01",
            "id": "1090",
            "issue": "952",
            "user": "krefson"
        },
        {
            "content": "%3Cbr+%2F%3E%0D%0AFrom+Sasha%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+tried+to+make+an+investigation+of+what+is+going+on+in+the+routine+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Apopn_calculate_density_matrix%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAnd+it+looks+it+does+the+following%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AU%3DT%2AS%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AR_0%3DU%2AT%5E%28%2B%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AHere+the+matrix+R+is+very+often+nearly+singular%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AR%3DR_0%5E%28-1%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AV%3DR%5E%28%2B%29%2AU%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AP%3DU%5E%28%2B%29%2Aocc%2AV%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AAnd+this+brings+back+the+results+to+normal+%28as+U%2AU+is+of+order+of+magnitude+R_0%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThus+if+we+had+an+infinite+number+of+digits+everything+should+be+find+but+numeric+noise+can+kill+the+result.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AIdeally+the+loops+must+be+rewritten%E2%80%A6%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ABut+there+is+another+thing.+It+looks+that+R_0+is+expected+to+be+Hermitian+by+its+physical+nature+though+not+much+efforts+was+put+into+insisting+on+this+point%E2%80%A6%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+mean+that+diagonal+components+are+set+to+be+real+but+nothing+is+done+about+offdiagonal.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+suggest+as+a+smallest+workaround+for+now+to+make++the+matrix+as+Hermitian%3A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Ai.e.+change++the+clause+before+calling+invert+from%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++do+na%3D1%2Cnbands_occupied%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++++++R_matrix%28na%2Cna%29%3Dcmplx%28real%28R_matrix%28na%2Cna%29%2Cdp%29%2C0.0_dp%2Cdp%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++end+do%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Ato%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++do+na%3D1%2Cnbands_occupied%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++++++R_matrix%28na%2Cna%29%3Dcmplx%28real%28R_matrix%28na%2Cna%29%2Cdp%29%2C0.0_dp%2Cdp%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++++++do+nb%3D1%2Cna-1%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++++++++R_matrix%28nb%2Cna%29%3D%28R_matrix%28nb%2Cna%29%2Bconjg%28R_matrix%28na%2Cnb%29%29%29%2F2%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++++++++R_matrix%28na%2Cnb%29%3DR_matrix%28nb%2Cna%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++++++enddo%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++++++++++end+do%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThis+change+helped+me+bring+results+for+Au+back+to+normal+but+it+will+cause+some+discrepancies+with+old+results%E2%80%A6%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++Atomic+Populations+%28Mulliken%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++-----------------------------%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0ASpecies+++Ion+++++s++++++p++++++d++++++f+++++Total++Charge+%28e%29%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A++Au+++++++1+++++2.00+++6.00++10.02+++0.00++18.02+++++0.98%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3D%3D%3D%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AFix+checked+in%2C+changeset+6153.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AP.S.++With+a+sensible+number+of+LCAO+states%2C+the+charge+on+montomic+Au+gives+the+correct+result+of+zero.++This+numerical+ill-conditioning+may+just+be+the+side+effect+of+a+marginal+projection+onto+an+inadequate+basis.%3Cbr+%2F%3E%0D%0A",
            "created_on": "2013-10-15+08%3A13%3A37.136088%2B01",
            "id": "1091",
            "issue": "940",
            "user": "krefson"
        },
        {
            "content": "Implemented+a+subset+of+this+-+continuation%3A+default+now+starts+a+new+run+if+no+checkpoint+file+present.",
            "created_on": "2013-10-15+08%3A16%3A17.084209%2B01",
            "id": "1092",
            "issue": "200",
            "user": "krefson"
        },
        {
            "content": "It+looks+like+there+was+a+mistake+introduced+with+the+new+NCM+code+integration.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0Adensity_calculate_wvfn_gamma+at+Density.f90+line+2062+reads%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++else++%5Bnspins+%3D%3D+2+case%5D%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A+++++++++%21+Only+do+this+if+we+have+non-local+projectors%3Cbr+%2F%3E%0D%0A+++++++++if%28max_ps_projectors+%26amp%3Bgt%3B+0.and.any%28augment%29%29then%3Cbr+%2F%3E%0D%0A++++++++++++call+ion_augmentation_charge%28wvfn%25nbands_max%2Cwvfn%25nkpts%2Cwvfn%25nspins%2C%26amp%3Bamp%3B%3Cbr+%2F%3E%0D%0A+++++++++++++++++wvfn%25nbands%2Cocc%2Ckpoint_weights_on_node%2Cwvfn%25beta_phi_at_gamma%2CQ_rho_sum_sp%29%3Cbr+%2F%3E%0D%0A+++++++++else%3Cbr+%2F%3E%0D%0A++++++++++++Q_rho_sum%3D0.0_dp%3Cbr+%2F%3E%0D%0A++++++++++++Q_rho_sum_sp%3D0.0_dp%3Cbr+%2F%3E%0D%0A+++++++++endif%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AThe+call+to+ion_augmentation_charge+has+only+8+arguments+and+ought+to+have+9.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AI+can%27t+understand+why+this+is+not+called+in+the+SCF+at+the+lower+cut-off+though.%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0AKeith%3Cbr+%2F%3E%0D%0A%3Cbr+%2F%3E%0D%0A",
            "created_on": "2014-01-03+15%3A33%3A20.741971%2B00",
            "id": "1120",
            "issue": "968",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+fixed+this+with+commit%3C%2Fp%3E%0A%0A%3Cp%3E%0Achangeset%3A%C2%A0%C2%A0+6856%3Af8ea1bd8badc%3Cbr+%2F%3E%0Auser%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Keith+Refson+%26lt%3BKeith.Refson%40stfc.ac.uk%26gt%3B%3Cbr+%2F%3E%0Adate%3A%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0%C2%A0+Tue+Dec+08+11%3A54%3A45+2015+%2B0000%3Cbr+%2F%3E%0Asummary%3A%C2%A0%C2%A0%C2%A0%C2%A0+Fixes+to+orbitals2bands+to+work+with+spectral%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AUnfortunately+that+was+too+late+for+16.1.%C2%A0+This+will+be+included+in+a+bugfix+release%2C+with+target+number%C2%A0+16.1.1.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AFor+now%2C+check+out+the+head+of+the+%22Castep161_branch%22+bugfix+release+branch%3B+this+contains+this+and+other+fixes.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2016-01-22+15%3A34%3A07.406418%2B00",
            "id": "1488",
            "issue": "1510",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatthew%3A+In+case+you+don%27t+have+live+repository+access%2C+I%27ve+also+uploaded%C2%A0+2+patch+files+that+should+fix+this+for+you.+Download+them+both+to+your%C2%A0CASTEP%2FSource%2FFunctional+directory%2C+and+then+within+that+directory+do%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0Apatch+%26lt%3B+model.patch%3C%2Fp%3E%0A%0A%3Cp%3E%0Apatch+%26lt%3B+geometry.patch%3C%2Fp%3E%0A%0A%3Cp%3E%0Athat+should+then+apply+the+patch+to+the+2+files+that+need+modifying+%28model.f90+and+geometry.f90%29.+Then+recompile+as+usual.+The+bug+is+that+the+wrong+data+is+written+to+the+check-file%2C+and+hence+the+problem+with+the+re-read.+I+have+fixed+it+in+a+way+that+means+you+should+be+able+to+restart+from+old+check-files+with+the+new+code+and+find+it+all+work.+Please+give+it+a+go+%26amp%3B+let+me+know+how+you+get+on.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2016-07-17+10%3A07%3A09.631365%2B01",
            "id": "1601",
            "issue": "1586",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThis+is+incorrect+syntax.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0Acastep+--help+search+all%3C%2Fp%3E%0A%0A%3Cp%3E%0Areturns+the+list+of+keywords+whose+text+matches+the+string+ALL.%C2%A0+What+you+mean+is%3C%2Fp%3E%0A%0A%3Cp%3E%0Acasttep+-help+all%3C%2Fp%3E%0A%0A%3Cp%3E%0ANot+a+bug.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+12%3A08%3A13.864121%2B01",
            "id": "1805",
            "issue": "1719",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AEnabled+for+final+structure.+Not+done+for+earlier+one+on+grounds+of+computational+cost.+Closed.%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2017-04-06+22%3A17%3A46.816383%2B01",
            "id": "1817",
            "issue": "1475",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AJust+checked+in+a+solution+to+this.+I+have+generalized+the+meaning+of+the+%27tie%27+constraints+on+cell+lengths.+Previously+setting%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25block+cell_constraints%3C%2Fp%3E%0A%0A%3Cp%3E%0A1+1+1%3C%2Fp%3E%0A%0A%3Cp%3E%0A0+0+0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25endblock+cell_constraints%3C%2Fp%3E%0A%0A%3Cp%3E%0Awould+only+operate+if%C2%A0a%3Db%3Dc+%28input+cross+check%29+and+would+enforce+a%3Db%3Dc+during+any+variable+cell+geom+opts.+This+has+now+been+generalized%2C+so+that+the+ratio+of+a%3Ab%3Ac+is+fixed+%28ditto+if+first+line+is+1+1+3+fixes+ratio+a%3Ab+etc%29.%3C%2Fp%3E%0A%0A%3Cp%3E%0AHence+the+above+set+of+constraints+is+now+iso-shape+%3D+keeps+ratio+of+cell+lengths+and+fixes+the+cell+angles.%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatt%3C%2Fp%3E%0A",
            "created_on": "2017-04-03+19%3A23%3A19.616906%2B01",
            "id": "1810",
            "issue": "1677",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AI+think+this+can+be+fixed+in+cell.+I+have+added+a+ps_lib+array+in+ion_atom_data.f90%2C+so+if+a+single+string+is+found+in+SPECIES_POT+is+can+be+checked+against+this%2C+and+whether+it+is+a+.otflib.%3C%2Fp%3E%0A",
            "created_on": "2017-04-05+15%3A09%3A49.083579%2B01",
            "id": "1815",
            "issue": "1113",
            "user": "cjp10"
        },
        {
            "content": "%3Cp%3E%0AIn+principle+this+is+a+misuse+of+the+FBSC.+However%2C+working+on+the+principle+of+least+surprise%2C+this+has+now+been+enabled+so+that+the+energies+are+smooth+and+use+FBSC+throughout+-+IFF+user+requested+-+not+on+by+default.%3C%2Fp%3E%0A%0A%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A",
            "created_on": "2017-04-06+22%3A08%3A16.697423%2B01",
            "id": "1816",
            "issue": "1686",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+commit+7267+%2834877c0365d9%29+on+Castep127_branch.%C2%A0+This+will+need+to+be+merged+into+head+later%2C+alongside+the+Codefest+merge.%C2%A0+Will+leave+open+until+then.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-05-09+16%3A22%3A45.07306%2B01",
            "id": "1822",
            "issue": "1734",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0ACorrection.%C2%A0+I+meant+that+the+code+will+fail+for+a+unit+cell+matrix+which+is+%3Cstrong%3Enon-symmetric%2C%3C%2Fstrong%3E+not+nondiagonal.%C2%A0+The+important+case+of+bcc+and+fcc+primitive+cells+are+both+symmetryic+and+non-diagonal+and+the+transpose+error+has+no+effect.%3C%2Fp%3E%0A%0A%3Cp%3E%0ACrystal+systems+which+succeed+are%3C%2Fp%3E%0A%0A%3Cp%3E%0Acubic%2C+including+fcc+and+bcc+primitive%3C%2Fp%3E%0A%0A%3Cp%3E%0Atetragonal%3C%2Fp%3E%0A%0A%3Cp%3E%0Aorthorhombic%3C%2Fp%3E%0A%0A%3Cp%3E%0Atrigonal+R+if+unique+axis+is+aligned+along+%5B111%5D%3C%2Fp%3E%0A%0A%3Cp%3E%0ACrystal+systems+which+%3Cstrong%3Ewill%3C%2Fstrong%3E+fail+are%3C%2Fp%3E%0A%0A%3Cp%3E%0Atrigonal+R+unless+unique+axis+is+aligned+along+%5B111%5D%3C%2Fp%3E%0A%0A%3Cp%3E%0Ahexagonal%3C%2Fp%3E%0A%0A%3Cp%3E%0Abody-centred+tetragonal+%28primitive%29%3C%2Fp%3E%0A%0A%3Cp%3E%0Abody-centred+orthorhombic+%28primitive%29%3C%2Fp%3E%0A%0A%3Cp%3E%0Amonoclinic+%28all%29%3C%2Fp%3E%0A%0A%3Cp%3E%0Atriclinic%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-05-12+11%3A35%3A45.038155%2B01",
            "id": "1823",
            "issue": "1734",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+tried+to+reduce+the+problem+to+a+smaller+case%2C+now+get+a+different+error+%28see+error1.tgz%29%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0AProblem+with+band-to-node+mapping+in+wave_write_all_par%3Cbr+%2F%3E%0ACurrent+trace+stack%3A%3Cbr+%2F%3E%0A%C2%A0wave_write_all_par%3Cbr+%2F%3E%0A%C2%A0wave_write_all%3Cbr+%2F%3E%0A%C2%A0model_write_all%3Cbr+%2F%3E%0A%C2%A0model_write%3Cbr+%2F%3E%0A%C2%A0phonon_model_write%3Cbr+%2F%3E%0A%C2%A0phonon_finite_displacement%3Cbr+%2F%3E%0A%C2%A0phonon_force_constant_matrix%3Cbr+%2F%3E%0A%C2%A0phonon_calculate%3Cbr+%2F%3E%0A%C2%A0castep%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-05-25+09%3A20%3A20.053249%2B01",
            "id": "1825",
            "issue": "1738",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change+in+locps+by+Phil+Hasnip.%3C%2Fp%3E%0A",
            "created_on": "2017-08-08+15%3A23%3A34.167371%2B01",
            "id": "1904",
            "issue": "1733",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AMerged+in+changeset%C2%A07281+%289219e18c6cc9%29.%3C%2Fp%3E%0A",
            "created_on": "2017-08-08+17%3A23%3A56.522287%2B01",
            "id": "1907",
            "issue": "1703",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AReassigned+to+Jonathan%3C%2Fp%3E%0A",
            "created_on": "2017-08-09+17%3A24%3A11.181175%2B01",
            "id": "1915",
            "issue": "1758",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AStewart%2C+is+there+any+progress+on+this+issue%2C+please%3F%3C%2Fp%3E%0A",
            "created_on": "2017-08-09+17%3A31%3A25.916027%2B01",
            "id": "1916",
            "issue": "1721",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A",
            "created_on": "2017-08-14+12%3A23%3A05.851271%2B01",
            "id": "1919",
            "issue": "1772",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0ADear+Dominik%2C+since+Stewart+is+going+to+enjoy+his+beach+vacation+for+some+time%2C+could+you+please+deal+with+this+report%3F+Thanks%3C%2Fp%3E%0A",
            "created_on": "2017-08-02+09%3A45%3A25.0647%2B01",
            "id": "1893",
            "issue": "1760",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ADone.+This+is+for+TS+not+MBD%2C+hence+the+above+code+snippet+not+correct%2C+but+general+idea+OK.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2017-08-06+15%3A04%3A42.383679%2B01",
            "id": "1900",
            "issue": "1741",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change+in+popn_output.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0Matt%3C%2Fp%3E%0A",
            "created_on": "2017-08-02+21%3A35%3A45.493655%2B01",
            "id": "1894",
            "issue": "1761",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThis+is+from+debug+traceback%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0Aforrtl%3A+error+%2873%29%3A+floating+divide+by+zero%3C%2Fp%3E%0A%0A%3Cp%3E%0Acastepexe.exe+%C2%A0+%C2%A0+%C2%A000000000005BFD08+%C2%A0algor_mp_algor_di+%C2%A0+%C2%A0+%C2%A0+%C2%A02572+%C2%A0algor.F90+castepexe.exe+%C2%A0+%C2%A0+%C2%A000000000005AEA12+%C2%A0algor_mp_algor_di+%C2%A0+%C2%A0+%C2%A0+%C2%A01596+%C2%A0algor.F90+castepexe.exe+%C2%A0+%C2%A0+%C2%A00000000000C77A14+%C2%A0wave_mp_wave_diag+%C2%A0+%C2%A0+%C2%A0+22915+%C2%A0wave.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A00000000001BE65CC+%C2%A0hamiltonian_mp_ha+%C2%A0+%C2%A0+%C2%A0+%C2%A01212+%C2%A0hamiltonian.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A000000000010613CF+%C2%A0electronic_mp_ele+%C2%A0+%C2%A0+%C2%A0+%C2%A0+496+%C2%A0electronic.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A0000000000153519B+%C2%A0geometry_mp_geom_+%C2%A0+%C2%A0+%C2%A0+%C2%A06912+%C2%A0geometry.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A00000000001589F08+%C2%A0geometry_mp_geom_+%C2%A0+%C2%A0+%C2%A0+12231+%C2%A0geometry.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A000000000014ABE9B+%C2%A0geometry_mp_geome+%C2%A0+%C2%A0+%C2%A0+%C2%A0+691+%C2%A0geometry.f90+castepexe.exe+%C2%A0+%C2%A0+%C2%A000000000004B0FD9+%C2%A0MAIN__+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0671+%C2%A0castep.f90%3C%2Fp%3E%0A",
            "created_on": "2017-07-26+14%3A01%3A21.218549%2B01",
            "id": "1891",
            "issue": "1757",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ADominik+isn%27t+responding+right+now%2C+perhaps+Matt+could+check+for+any+possible+bad+effects+from+increasing+the+length+of+the+string+from+80+characters%3F%3C%2Fp%3E%0A",
            "created_on": "2017-08-03+09%3A50%3A34.166845%2B01",
            "id": "1896",
            "issue": "1760",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ANB%3A%C2%A0Si2-core+test+fails+differently%2C+it+goes+through+with+Spectral+but+then+crashes+in+MPI+somewhere%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0+%C2%A0+%C2%A0Atomic+Populations+%28Mulliken%29%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0-----------------------------%3Cbr+%2F%3E%0ASpecies+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0Ion+Spin+%C2%A0+%C2%A0+%C2%A0s+%C2%A0+%C2%A0+%C2%A0p+%C2%A0+%C2%A0+%C2%A0d+%C2%A0+%C2%A0+%C2%A0f+%C2%A0+%C2%A0+Total+%C2%A0Charge%28e%29+%C2%A0+Spin%28hbar%2F2%29%3Cbr+%2F%3E%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0A%C2%A0+Si+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A01+%C2%A0+up%3A+%C2%A0+%C2%A0+0.87+%C2%A0+1.45+%C2%A0+0.00+%C2%A0+0.00+%C2%A0+2.32+%C2%A0+%C2%A0-0.10+%C2%A0+%C2%A0+%C2%A0+%C2%A00.55%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+1+%C2%A0+dn%3A+%C2%A0+%C2%A0+0.68+%C2%A0+1.10+%C2%A0+0.00+%C2%A0+0.00+%C2%A0+1.78%3Cbr+%2F%3E%0A%C2%A0+Si%3Ac+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A01+%C2%A0+up%3A+%C2%A0+%C2%A0+0.91+%C2%A0+1.77+%C2%A0+0.00+%C2%A0+0.00+%C2%A0+2.68+%C2%A0+%C2%A0+0.10+%C2%A0+%C2%A0+%C2%A0+%C2%A00.45%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+1+%C2%A0+dn%3A+%C2%A0+%C2%A0+0.65+%C2%A0+1.57+%C2%A0+0.00+%C2%A0+0.00+%C2%A0+2.22%3Cbr+%2F%3E%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0A%C2%A0%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0Bond+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+Population+%C2%A0+%C2%A0+%C2%A0+%C2%A0Spin+%C2%A0+%C2%A0+%C2%A0+Length+%28A%29%3Cbr+%2F%3E%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+Si+1+--+Si%3Ac+1+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.74+%C2%A0+%C2%A0+%C2%A0+%C2%A0-0.93+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A02.33434%3Cbr+%2F%3E%0A%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AWriting+analysis+data+to+Si2-core.castep_bin%3Cbr+%2F%3E%0A%C2%A0Trapped+SIGINT+or+SIGTERM.+Exiting...%3Cbr+%2F%3E%0A%C2%A0%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0Orbital+Populations+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0%3Cbr+%2F%3E%0A%C2%A0+--------------------------------------------------------%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0Ion+%C2%A0+%C2%A0Atom+%C2%A0+Orbital+%C2%A0+%C2%A0+%C2%A0Up+%C2%A0+%C2%A0+%C2%A0+%C2%A0Down+%C2%A0+%C2%A0+%C2%A0Spin%3Cbr+%2F%3E%0A%C2%A0+--------------------------------------------------------%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0Si+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0S+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A00.873+%C2%A0+%C2%A0+0.678+%C2%A0+%C2%A0+0.194%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0Si+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Px+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.408+%C2%A0+%C2%A0+0.378+%C2%A0+%C2%A0+0.030%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0Si+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Py+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.632+%C2%A0+%C2%A0+0.341+%C2%A0+%C2%A0+0.291%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0Si+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Pz+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.408+%C2%A0+%C2%A0+0.378+%C2%A0+%C2%A0+0.030%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Si%3Ac+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0S+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A00.753+%C2%A0+%C2%A0+0.648+%C2%A0+%C2%A0+0.105%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Si%3Ac+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Px+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.557+%C2%A0+%C2%A0+0.548+%C2%A0+%C2%A0+0.009%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Si%3Ac+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Py+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.658+%C2%A0+%C2%A0+0.475+%C2%A0+%C2%A0+0.183%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Si%3Ac+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0Pz+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+0.557+%C2%A0+%C2%A0+0.548+%C2%A0+%C2%A0+0.009%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Si%3Ac+%C2%A0+%C2%A0+1+%C2%A0+%C2%A0+%C2%A0S+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A00.153+%C2%A0+%C2%A0+0.005+%C2%A0+%C2%A0+0.149%3Cbr+%2F%3E%0A%C2%A0+--------------------------------------------------------%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A0Total%3A+%C2%A0+%C2%A0+%C2%A0+5.000+%C2%A0+%C2%A0+4.000+%C2%A0+%C2%A0+1.000%3Cbr+%2F%3E%0A%C2%A0+--------------------------------------------------------%3Cbr+%2F%3E%0AFatal+error+in+MPI_Recv%3A+Message+truncated%2C+error+stack%3A%3Cbr+%2F%3E%0AMPI_Recv%28204%29.......................%3A+MPI_Recv%28buf%3D0x8f79e50%2C+count%3D26%2C+MPI_DOUBLE_PRECISION%2C+src%3D1%2C+tag%3D101%2C+comm%3D0x84000005%2C+status%3D0x7fff3f5fc6e0%29+failed%3Cbr+%2F%3E%0AMPIDI_CH3U_Request_unpack_uebuf%28624%29%3A+Message+truncated%3B+30720+bytes+received+but+buffer+size+is+208%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-08-04+14%3A44%3A51.809959%2B01",
            "id": "1899",
            "issue": "1758",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ASame+final+structure%2C+different+definition+of+%22constrained%22+stress+tensor%3C%2Fp%3E%0A",
            "created_on": "2017-08-07+15%3A17%3A42.440911%2B01",
            "id": "1901",
            "issue": "1763",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ANon-issue.+Nothing+is+different+about+final+result%21%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2017-08-07+17%3A36%3A18.400288%2B01",
            "id": "1902",
            "issue": "1763",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AThanks+Matt%2C+could+you+also+add+the+new+functional+to+this+line+in%C2%A0semp_disp_corr.f90%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0Areal%28kind%3Dsedc_rk%29+function+sedc_get_d_ts_default%28xc%29%3Cbr+%2F%3E%0Aimplicit+none%3Cbr+%2F%3E%0Acharacter%28len%3D%2A%29+xc%3Cbr+%2F%3E%0Aselect+case%28xc%29%3Cbr+%2F%3E%0A%C2%A0+%C2%A0case+%28%22PBE%22%2C+%22PBE0%22%2C+%22PBE1PBE%22%2C+%22BLYP%22%2C+%22B3LYP%22%2C+%22AM05%22%2C+%3Cstrong%3E%22RPBE%22%2C+%22PBESOL%22%2C+%22PW91%22%3C%2Fstrong%3E%29%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+sedc_get_d_ts_default+%3D+20.0_sedc_rk%3Cbr+%2F%3E%0A%C2%A0+%C2%A0case+default%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+sedc_get_d_ts_default+%3D+0.0_sedc_rk%3Cbr+%2F%3E%0Aend+select%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-08-08+14%3A39%3A45.80967%2B01",
            "id": "1903",
            "issue": "1741",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ADear+Dominik%2C+let%27s+mark+this+as+closed+when+the+code+actually+makes+it+to+the+trunk...%3C%2Fp%3E%0A",
            "created_on": "2017-08-08+17%3A19%3A29.001065%2B01",
            "id": "1906",
            "issue": "1703",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AI+think+the+underlying+issue+is+one+about+estimating+the+memory+requirement.+Spectral+calculations+are+a+case+where+you+might+have+a+large+system+-+and+a+signifcant+number+of+k-points.+I%27ve+also+seen+users+get+very+confused+when+they+can%27t+fit+a+calculation+in+memory%2C+and+so+double+the+number+of+cores+-+but+the+memory+requirement+doesn%27t+actually+drop+as+castep+just+distributes+more+k-points.+Running+a+calculation+efficiently+requires+a+significant+amount+of+knowledge+about+what+the+code+is+doing%2C+and+that+can%27t+be+right.%3Cbr+%2F%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-08-09+15%3A26%3A30.812368%2B01",
            "id": "1911",
            "issue": "1767",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AI+think+I+raised+this+before%2C+but+I+suspect+that+the+memory+problem+arises+from+every+process+being+a+kpoint+master+and+therefore+having+a+complete+copy+of+all+grids.%C2%A0+Where+there+is+a+large+FINE_GRID_SCALE+%28as+in+my+calculations%2C+6+is+needed+with+Chris%27s+latest+Mn+and+Cr%29+this+means+that+whereas+the+wavefunctions+are+distributed+by+kpoint%2C+every+density+and+potential+is+replicated+on+every+process.%28Possibly+DM+contributes+here+too%29.%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+obvious+optimization+is+to+modify+density+and+pot_allocate+to+put+the+allocated+memory+into+shared+memory+%28again+using+FreeIPC%29+which+would+get+a+factor+of+20-24+reduction+on+most+clusters.+There+would+be+ramifications+for+the+use+and+update%2C+but+likely+mostly+confined+to+methods+in+the+respective+owner+modules+of+the+grids.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-08-09+15%3A42%3A54.392577%2B01",
            "id": "1914",
            "issue": "1767",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AAttached+BLYP.zip+that+contains+butane+and+benzene+-+the+former+is+OK%2C+the+latter+still+does+not+converge%3C%2Fp%3E%0A",
            "created_on": "2017-08-22+13%3A21%3A54.171269%2B01",
            "id": "1932",
            "issue": "1721",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AAttached+BIOVIA+fixed+version+for+your+perusal%3C%2Fp%3E%0A",
            "created_on": "2017-08-22+15%3A47%3A08.530723%2B01",
            "id": "1933",
            "issue": "1759",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change%3C%2Fp%3E%0A",
            "created_on": "2017-08-25+18%3A50%3A16.43604%2B01",
            "id": "1943",
            "issue": "1768",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+could+be+done.+However%2C+there+is+no+reuse+of+data+between+calculations+-+so+there+is+nothing+gained+from+an+external+script.+So+from+my+point+of+view+a+script+is+probably+the+most+flexible+way+of+achieving+this.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0Happy+to+discuss+further.%3C%2Fp%3E%0A",
            "created_on": "2017-12-20+11%3A59%3A35.441721%2B00",
            "id": "2005",
            "issue": "1617",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AThis+seems+to+be+a+problem+specific+to+opt_strategy+%3A+memory+being+used+with+the+TDDFT+Davidson+solver.+%C2%A0I%E2%80%99ll+look+into+fixing+it%2C+but+in+the+meantime%2C+I+can+suggest+using+the+conjugate+gradients+solver%2C+tddft_eigenvalue_method+%3A+cg%2C+which+has+lower+memory+requirements+and%C2%A0works+with%C2%A0opt_strategy+%3A+memory.%3C%2Fp%3E%0A",
            "created_on": "2017-10-09+15%3A51%3A32.548436%2B01",
            "id": "1963",
            "issue": "1788",
            "user": "domj"
        },
        {
            "content": "%3Cp%3E%0AClosed+as+a+duplicate+of+1789%3C%2Fp%3E%0A",
            "created_on": "2017-10-12+14%3A56%3A13.913619%2B01",
            "id": "1964",
            "issue": "1790",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AFixed+on+changeset%3A%C2%A0%C2%A0+7416%3Ad5035e7869a4%3C%2Fp%3E%0A",
            "created_on": "2017-10-20+12%3A24%3A04.316556%2B01",
            "id": "1965",
            "issue": "1765",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AClosing+report+as+original+bug+fixed+by+commit+7416+%28d5035e7869a4%29%3C%2Fp%3E%0A%0A%3Cp%3E%0AProblem+with+excessive+memory+on+large-scale+k-point+parallelism+still+there+though.%3C%2Fp%3E%0A",
            "created_on": "2017-10-20+12%3A28%3A17.575691%2B01",
            "id": "1966",
            "issue": "1767",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AI+see+no+such+problem+in+Materials+Studio+run+%28with+MS+2018%2C+admittedly%2C+but+using+the+same+strings%29.+Attached+is+an+image+with+two+DOS%2C+USP+left+and+NCP+right+%28I+ignored+very+high+peaks+for+semicore+states%29%3C%2Fp%3E%0A",
            "created_on": "2017-11-03+14%3A39%3A14.298486%2B00",
            "id": "1971",
            "issue": "1792",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AI+couldn%27t+replicate+the+USP+graph+with+optados.+I+have+attached+a+similar+DOS+graph+with+my+results+%28top+NCP%2C+bottom+USP%29.+USP+y-axis+is+on+a+different+scale%2C+additionally%C2%A0there+is+no+d-states+block+for+Ta+in+the+.pdos.dat+file%2C%C2%A0.+Both+optados+output+files+are+also+attached.%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-11-03+15%3A36%3A05.972416%2B00",
            "id": "1972",
            "issue": "1792",
            "user": "gan503"
        },
        {
            "content": "%3Cp%3E%0AI+have+attached+my+project+files+-+since+I+don%27t+use+optados%2C+perhaps+you+can+try+to+create+charts+from+those+yourself%3F%3C%2Fp%3E%0A",
            "created_on": "2017-11-03+18%3A02%3A53.531637%2B00",
            "id": "1973",
            "issue": "1792",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AI+have+managed+to+reproduce+the+correct+results%C2%A0with+optados+and+your+input.+After+further+investigation+I+noted+that+there+is+a+difference+in+the%C2%A0species_lcao_states+block.+I+usually+use%C2%A0the+default+values+generated+by+castep+in+my+runs+and+don%27t+include+a+species_lcao_states+block+in+my+.cell+file.%C2%A0+It+seems+that+castep+doesn%27t+estimate+correctly%C2%A0the+necessary+number+of+channels+for+Ta+when+USP+are+used.+Here+is+an+example%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A1.+Your+block+with+USP+%28correct+DOS+results%29%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25BLOCK+SPECIES_LCAO_STATES%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+Fe%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A03%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+Sb%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A04%3Cbr+%2F%3E%0A%C2%A0+%C2%A0+%C2%A0+%3Cstrong%3ETa%C2%A0+%C2%A0+%C2%A0+%C2%A0+%C2%A06%3C%2Fstrong%3E%3Cbr+%2F%3E%0A%25ENDBLOCK+SPECIES_LCAO_STATES%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A2.+The+default+block+with+USP+%28%3Cstrong%3Ewrong%3C%2Fstrong%3E+DOS+results%29%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25BLOCK+species_lcao_states%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Fe%C2%A0+%C2%A0+%C2%A0+3%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Sb%C2%A0+%C2%A0+%C2%A0+4%3Cbr+%2F%3E%0A%C2%A0%3Cstrong%3E+%C2%A0Ta%C2%A0+%C2%A0+%C2%A0+3%3C%2Fstrong%3E%3Cbr+%2F%3E%0A%25ENDBLOCK+species_lcao_states%3C%2Fp%3E%0A%0A%3Cp%3E%0A3.+The+default+block+with+NCP+%28correct+DOS+results%29%3A%3C%2Fp%3E%0A%0A%3Cp%3E%0A%25BLOCK+species_lcao_states%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Fe%C2%A0+%C2%A0+%C2%A0+5%3Cbr+%2F%3E%0A%C2%A0+%C2%A0Sb%C2%A0+%C2%A0+%C2%A0+4%3Cbr+%2F%3E%0A%C2%A0+%3Cstrong%3E%C2%A0Ta%C2%A0+%C2%A0+%C2%A0+5%3C%2Fstrong%3E%3Cbr+%2F%3E%0A%25ENDBLOCK+species_lcao_states%3C%2Fp%3E%0A%0A%3Cp%3E%0AProviding+a+meaningful+basis+set+in+the+species_lcao_states+block+fixes+the+issue.%3C%2Fp%3E%0A",
            "created_on": "2017-11-06+16%3A42%3A35.91406%2B00",
            "id": "1974",
            "issue": "1792",
            "user": "gan503"
        },
        {
            "content": "%3Cp%3E%0AFixed%21+That%27s+the+sort+of+bug+report+I+like+%3A-%29%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%C2%A0%C2%A0%C2%A0+Matt%3C%2Fp%3E%0A",
            "created_on": "2017-11-14+15%3A46%3A09.8946%2B00",
            "id": "1978",
            "issue": "1796",
            "user": "mijp1"
        },
        {
            "content": "%3Cp%3E%0AI+have+reproduced+this+with+a+much+simpler+test+case.+It+looks+like+mdl%25cell%25phonon_kpoint_mp_grid+is+being+incorrectly+set+on+the+initial+read+of+the+cell+file+to+%5B5%2C5%2C5%5D%2C+which+is+completely+unrelated+to+cell%25phonon_kpoints+which+actually+sample+a+3x3x3+grid.%3C%2Fp%3E%0A%0A%3Cp%3E%0AIt+seems+also+that+the+input+PHONON_KPOINT+set+is+not+recognised+as+a+grid+due+to+the+use+of+only+6+digit+precision.%3C%2Fp%3E%0A%0A%3Cp%3E%0AThis+bug+is+present+in+CASTEP+17.2+and+CASTEP+18.1%3C%2Fp%3E%0A%0A%3Cp%3E%0AThe+least+that+cell_read+could+do+would+be+so+set+cell%25phonon_kpoint_mp_grid+to+-1+in+this+case.This+needs+to+be+reported+at+the+user-visible+level.+Phonon+will+already+do+this.%C2%A0+Should+%22cell_read%22+report+a+%22near-miss%22%3F%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-11-17+08%3A47%3A50.731717%2B00",
            "id": "1980",
            "issue": "1797",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+is+a+consequence+of+the+efficient+k-point+reduction+algorithm+which+sorts+k-points+into+spherical+shells.+This+can+indeed+be+nondeterministic%2C+and+can+return+different%2C+but+equivalent%2C+kpoint+sets.+However+I+have+never+seen+a+change+on+the+same+machine+with+the+same+executable+before.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAgreed+that+the+interaction+with+continuation+is+poor.%C2%A0+But+the+defined+behaviour+is+to+allow+this+parameter+to+change+on+continuation.%3C%2Fp%3E%0A%0A%3Cp%3E%0AIn+principle+we+could+attempt+to+detect+whether+a+changed+set+is+equivalent+and+introduce+some+special+case+handling.%C2%A0+But+this+would+risk+introducing+bugs+elsewhere.%3C%2Fp%3E%0A%0A%3Cp%3E%0AAs+an+uncommon+edge-case+behaviour%2C+I+don%27t+see+a+good+case+to+invest+a+lot+of+time+on+a+fix%2C+which+would+at+best+be+heuristic+and+introduce+non-obvious+behaviour.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-11-17+08%3A55%3A10.045812%2B00",
            "id": "1981",
            "issue": "1798",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThis+happened+on+archer+and+I+also+noticed+that+it+doesn%27t+happen+all+the+time+even+for+the+same+job.+Could+it+be+because+of+the+node+assignment%3F%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+understand+that+the+qpoints+are+equivalent%2C+hence+the+final+results+would+be+the+same+with+both+sets.+However%2C%C2%A0the+real+problem+is+that+if+a+change+occurs%2C+and+on+archer+I+don%27t+know+when+this+will+happen%2C+the+.check+file+is+eventually+overwritten+%28as+it+should%29+without+giving+the+user+a+chance+to+react.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AFrom+now+on+I+will+start+making+a+backup+copy%C2%A0of+my+.check+file+before+continuing+a+phonon+job.+Would%C2%A0it+be+also+possible+to+make+this+automatic+in+castep%3F+For+example%2C+if+the+qpoint+list+is+changed%2C+make+a+copy+of+.check+to+.check_old_qpoint_list+%28similar+to+.check_bak%29.+This+could+save+a+lot+of+computation+time+and+some+storage+space%C2%A0in+case+of+an+unintended+qpoint+list+change.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-11-17+11%3A24%3A41.815589%2B00",
            "id": "1982",
            "issue": "1798",
            "user": "gan503"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+Stewart+in+18.0%3C%2Fp%3E%0A",
            "created_on": "2017-11-20+11%3A03%3A30.359618%2B00",
            "id": "1983",
            "issue": "86",
            "user": "krefson"
        },
        {
            "content": "Hi+Matt%2C%3Cbr+%2F%3E%0A%3Cbr+%2F%3E%0AThese+look+extremely+like+some+issues+that+I+fixed+fairly+recently.+In+%3Cbr+%2F%3E%0Aboth+cases+the+failing+run+used+CASTEP+17.2.1.+%28There+was+a+dryrun+using+%3Cbr+%2F%3E%0A18%2C+but+the+actual+run+used+17.2.1%29.+Please+will+you+try+again+using+%3Cbr+%2F%3E%0Aeither+CASTEP+18.1%2C+or+the+head+of+%26quot%3BCastep172_branch%26quot%3B.%3Cbr+%2F%3E%0A%3Cbr+%2F%3E%0AKeith%3Cbr+%2F%3E%0A%3Cbr+%2F%3E%0A%3Cbr+%2F%3E%0AOn+24%2F11%2F17+18%3A10%2C+CASTEP+-+Bugs+wrote%3A",
            "created_on": "2017-11-25+11%3A21%3A49.130929%2B00",
            "id": "1996",
            "issue": "1800",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AHi+Keith%2C%3C%2Fp%3E%0A%0A%3Cp%3E%0AYou+are+quite+right%2C+this+issue+is+not+present%C2%A0on+the+latest+check-in+of+18.1%2C+I+should+have+looked+harder%21%C2%A0Thank+you%21%3C%2Fp%3E%0A%0A%3Cp%3E%0ABest+wishes%2C%3C%2Fp%3E%0A%0A%3Cp%3E%0AMatthew%3C%2Fp%3E%0A",
            "created_on": "2017-11-27+12%3A25%3A23.654064%2B00",
            "id": "1997",
            "issue": "1800",
            "user": "matthew_evans"
        },
        {
            "content": "%3Cp%3E%0AFixed+in+18.2+%28Academic%29+release+by+checkin%3C%2Fp%3E%0A%0A%3Cp%3E%0Achangeset%3A%C2%A0%C2%A0+7453%3A935d493c6eb1%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-12-06+08%3A47%3A44.972998%2B00",
            "id": "1999",
            "issue": "1799",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0AThe+exact+kpoint+list+generated+depends+on+the+final+ordering+returned+by+a+heapsort+of+the+k+vector+lengths%2C+which+is+a+floating-point+comparison.+With+highly+optimized+executables+the+results+can+differ+according+to+processor+revision%2C+presence+of+specific+%28eg+vectorized+AVX%29+instruction+sets%2C+library+and+system+revisions.+I+suspect+the+chips+on+ARCHER+are+not+all+at+identical+revision+levels.%3C%2Fp%3E%0A%0A%3Cp%3E%0ASomewhat+against+the+usual+advice%2C+I+suspect+that+a+very+slight+%2814th+dp%29+symmetry+breaking+in+the+cell+vectors+might+help+stabilise+the+sort.%3C%2Fp%3E%0A%0A%3Cp%3E%0AP.S.%C2%A0+As+long+as+you+spot+it%C2%A0+and+keep+a+backup+checkpoint%2C+the+workaround+is+to+not+set+%22phonon_kpoint_mp_grid%22+in+the+.cell+file+for+the+continuation.%C2%A0+In+that+case+the+behaviour+is+to+re-use+the+exact+set+from+the+checkpoint+file.%3C%2Fp%3E%0A",
            "created_on": "2017-12-06+09%3A03%3A12.529036%2B00",
            "id": "2000",
            "issue": "1798",
            "user": "krefson"
        },
        {
            "content": "%3Cp%3E%0APerfect%2C+thanks+Keith.%3C%2Fp%3E%0A",
            "created_on": "2017-12-06+10%3A41%3A52.65255%2B00",
            "id": "2001",
            "issue": "1799",
            "user": "matthew_evans"
        },
        {
            "content": "%3Cp%3E%0AThis+looks+sensible%2C+and+I%27ve+been+thinking+about+doing+something+similar+for+a+while.+It+should+work+for+non-collinear+spin+states+too.+I%27ll+take+a+closer+look+and+see+what+it+needs.%3C%2Fp%3E%0A",
            "created_on": "2017-12-15+22%3A21%3A55.84522%2B00",
            "id": "2002",
            "issue": "1803",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0AI+think+this+is+pretty+much+an+impossible+request.%3C%2Fp%3E%0A",
            "created_on": "2017-12-20+11%3A50%3A52.367291%2B00",
            "id": "2003",
            "issue": "1609",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AI+assume+they+mean+take+the+g-tensor+and+hyperfine+parameters+and+simulate+the+lineshapes+you+see+in+experiment.+This+is+not+in+CASTEP%27s+domain.+I+think+there+are+tools+to+do+this+sort+of+thing+%28EPR+is+easier+than+NMR%2C+for+which+there+is+a+whole+field+doing+spin-dynamics+simulations.%3C%2Fp%3E%0A%0A%3Cp%3E%0ATry+%C2%A0%3Ca+href%3D%22http%3A%2F%2Fwww.easyspin.org%22%3Ehttp%3A%2F%2Fwww.easyspin.org%3C%2Fa%3E+but+I+have+no+direct+experience+with+this.%3C%2Fp%3E%0A%0A%3Cp%3E%0A%C2%A0%3C%2Fp%3E%0A",
            "created_on": "2017-12-20+11%3A54%3A36.346795%2B00",
            "id": "2004",
            "issue": "1610",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AThe+issue+here+is+that+CASTEP+relies+on+some+dubious+logic+to+set+the+lcao_states+-+when+%28for+OTFG%29+all+the+neccessary+information+is+availible.+Core+holes+also+mess+this+up.+ion_atom+should+be+making+the+correct+information+availible.%C2%A0%3C%2Fp%3E%0A%0A%3Cp%3E%0AI+reduced+the+priority%2C%C2%A0as+there+is+an+obvious+workaround.%3C%2Fp%3E%0A",
            "created_on": "2017-12-20+14%3A34%3A49.016216%2B00",
            "id": "2006",
            "issue": "1792",
            "user": "jry20"
        },
        {
            "content": "%3Cp%3E%0AFurther+cryptic+clarification+from+the+user%3A+%22So%2C+what+he+would+like+to+see+by+taking+spin+into+account+in+NMR+calculation+is+peak+broadening+caused+by+paramagnetic+materials%22+Does+this+help+at+all%3F%3C%2Fp%3E%0A",
            "created_on": "2017-12-21+16%3A57%3A45.816259%2B00",
            "id": "2008",
            "issue": "1609",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0ASorry%2C+ignore+the+last+comment.+If+it+does+not+make+sense%2C+forget+about+it+-+plenty+of+other+work+to+be+done.%3C%2Fp%3E%0A",
            "created_on": "2017-12-21+16%3A59%3A52.111449%2B00",
            "id": "2009",
            "issue": "1609",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AOK%2C+let%27s+forget+about+this+one.%3C%2Fp%3E%0A",
            "created_on": "2018-01-02+10%3A52%3A37.338414%2B00",
            "id": "2010",
            "issue": "1609",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThat+E-field+component+of+locpot+had+never+been+generalised+to+work+with+non-collinear+potentials.+Bug+fixed+and+checked+in.%3C%2Fp%3E%0A",
            "created_on": "2018-03-16+00%3A37%3A40.538145%2B00",
            "id": "2046",
            "issue": "1815",
            "user": "pjh503"
        },
        {
            "content": "%3Cp%3E%0AFixed+by+code+change.%3C%2Fp%3E%0A",
            "created_on": "2018-03-21+11%3A08%3A44.089594%2B00",
            "id": "2047",
            "issue": "1818",
            "user": "sjc999"
        },
        {
            "content": "%3Cp%3E%0AAdded+another+set+of+files%2C+smaller+cell.%3C%2Fp%3E%0A",
            "created_on": "2018-04-09+13%3A10%3A16.000428%2B01",
            "id": "2068",
            "issue": "1817",
            "user": "vmilman"
        },
        {
            "content": "%3Cp%3E%0AThe+call+to+geom_get_forces+is+in+geom_precon_exp_estimate_mu+which+is+called+by+geom_precon_exp_initialize+if+mu%3D0+as+it+tries+to+determine+an+optimal+value+automatically.%3C%2Fp%3E%0A%0A%3Cp%3E%0ACode+now+fixed+with+extra+symmetrization+step+in%C2%A0geom_precon_exp_estimate_mu%3C%2Fp%3E%0A",
            "created_on": "2018-04-10+12%3A17%3A00.764361%2B01",
            "id": "2069",
            "issue": "1817",
            "user": "mijp1"
        }
    ],
    "attachments": [
        {
            "file_name": "LaF3.zip",
            "ref_id": "286",
            "path": "attachments/LaF3.zip",
            "user": "vmilman"
        },
        {
            "file_name": "benzene.zip",
            "ref_id": "1721",
            "path": "attachments/benzene.zip",
            "user": "vmilman"
        },
        {
            "file_name": "Si-LBFGS_Cell_Constraints.tar.gz",
            "ref_id": "1586",
            "path": "attachments/Si-LBFGS_Cell_Constraints.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "MS50.zip",
            "ref_id": "254",
            "path": "attachments/MS50.zip",
            "user": "vmilman"
        },
        {
            "file_name": "Cu_bis_cutdown.tar.bz2",
            "ref_id": "469",
            "path": "attachments/Cu_bis_cutdown.tar.bz2",
            "user": "krefson"
        },
        {
            "file_name": "tss.tgz",
            "ref_id": "1130",
            "path": "attachments/tss.tgz",
            "user": "krefson"
        },
        {
            "file_name": "Si.tgz",
            "ref_id": "223",
            "path": "attachments/Si.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "MnO.zip",
            "ref_id": "233",
            "path": "attachments/MnO.zip",
            "user": "vmilman"
        },
        {
            "file_name": "09203vymq04.tgz",
            "ref_id": "162",
            "path": "attachments/09203vymq04.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Fe.tgz",
            "ref_id": "304",
            "path": "attachments/Fe.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "sXLDA.tgz",
            "ref_id": "207",
            "path": "attachments/sXLDA.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Ewald.tgz",
            "ref_id": "182",
            "path": "attachments/Ewald.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "09138vymq02.tgz",
            "ref_id": "135",
            "path": "attachments/09138vymq02.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "MS-29485.tgz",
            "ref_id": "302",
            "path": "attachments/MS-29485.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "phonons.tgz",
            "ref_id": "450",
            "path": "attachments/phonons.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "fase_gas.tar.bz2",
            "ref_id": "469",
            "path": "attachments/fase_gas.tar.bz2",
            "user": "krefson"
        },
        {
            "file_name": "vca.tgz",
            "ref_id": "421",
            "path": "attachments/vca.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "vcasi.tgz",
            "ref_id": "421",
            "path": "attachments/vcasi.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "Raman_BN.tgz",
            "ref_id": "303",
            "path": "attachments/Raman_BN.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "MS-31326.small.tgz",
            "ref_id": "496",
            "path": "attachments/MS-31326.small.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "08316f2hq03.tgz",
            "ref_id": "125",
            "path": "attachments/08316f2hq03.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "MS-43853.tgz",
            "ref_id": "971",
            "path": "attachments/MS-43853.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Si_LR_interp.tgz",
            "ref_id": "130",
            "path": "attachments/Si_LR_interp.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "iceviii-opt2.cell",
            "ref_id": "419",
            "path": "attachments/iceviii-opt2.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_0-6829-9487-snap.cell",
            "ref_id": "1664",
            "path": "attachments/C_0-6829-9487-snap.cell",
            "user": "krefson"
        },
        {
            "file_name": "methane_md.tar.bz2",
            "ref_id": "469",
            "path": "attachments/methane_md.tar.bz2",
            "user": "krefson"
        },
        {
            "file_name": "K2Cr3As3-QC5-d0025.castep-17.2.1",
            "ref_id": "1778",
            "path": "attachments/K2Cr3As3-QC5-d0025.castep-17.2.1",
            "user": "krefson"
        },
        {
            "file_name": "K2Cr3As3-QC5-d0025.cell",
            "ref_id": "1778",
            "path": "attachments/K2Cr3As3-QC5-d0025.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_0-6829-9487-snap.param",
            "ref_id": "1664",
            "path": "attachments/C_0-6829-9487-snap.param",
            "user": "krefson"
        },
        {
            "file_name": "C_0-6829-9487-snap.0001.err",
            "ref_id": "1664",
            "path": "attachments/C_0-6829-9487-snap.0001.err",
            "user": "krefson"
        },
        {
            "file_name": "MS44.zip",
            "ref_id": "254",
            "path": "attachments/MS44.zip",
            "user": "vmilman"
        },
        {
            "file_name": "bbdta-bs-afm.bands.bz2",
            "ref_id": "204",
            "path": "attachments/bbdta-bs-afm.bands.bz2",
            "user": "krefson"
        },
        {
            "file_name": "geometry.f90.tpsd.patch",
            "ref_id": "970",
            "path": "attachments/geometry.f90.tpsd.patch",
            "user": "pbro"
        },
        {
            "file_name": "BLYP.zip",
            "ref_id": "1721",
            "path": "attachments/BLYP.zip",
            "user": "vmilman"
        },
        {
            "file_name": "MgBa.zip",
            "ref_id": "467",
            "path": "attachments/MgBa.zip",
            "user": "vmilman"
        },
        {
            "file_name": "hubbard.f90",
            "ref_id": "1759",
            "path": "attachments/hubbard.f90",
            "user": "vmilman"
        },
        {
            "file_name": "ri05-err-castep_out.tar.gz",
            "ref_id": "179",
            "path": "attachments/ri05-err-castep_out.tar.gz",
            "user": "peijun"
        },
        {
            "file_name": "DNNC_NPH_35GPa_Speed_20100209.castep_sdp2",
            "ref_id": "231",
            "path": "attachments/DNNC_NPH_35GPa_Speed_20100209.castep_sdp2",
            "user": "vmilman"
        },
        {
            "file_name": "BaTiO3.zip",
            "ref_id": "254",
            "path": "attachments/BaTiO3.zip",
            "user": "vmilman"
        },
        {
            "file_name": "Ac.cell",
            "ref_id": "1053",
            "path": "attachments/Ac.cell",
            "user": "vmilman"
        },
        {
            "file_name": "mol_cryst_dftd.tgz",
            "ref_id": "263",
            "path": "attachments/mol_cryst_dftd.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "09132vymq01.tgz",
            "ref_id": "129",
            "path": "attachments/09132vymq01.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "doesnotwork.tgz",
            "ref_id": "291",
            "path": "attachments/doesnotwork.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "NMR_var_occ.tgz",
            "ref_id": "162",
            "path": "attachments/NMR_var_occ.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "EDFT_Slices.tgz",
            "ref_id": "438",
            "path": "attachments/EDFT_Slices.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "pot.patch",
            "ref_id": "239",
            "path": "attachments/pot.patch",
            "user": "krefson"
        },
        {
            "file_name": "ZrO2_cubic.castep",
            "ref_id": "286",
            "path": "attachments/ZrO2_cubic.castep",
            "user": "vmilman"
        },
        {
            "file_name": "EwaldCell.param",
            "ref_id": "119",
            "path": "attachments/EwaldCell.param",
            "user": "krefson"
        },
        {
            "file_name": "MnO-AFM-pbe-hf6-bs.param",
            "ref_id": "57",
            "path": "attachments/MnO-AFM-pbe-hf6-bs.param",
            "user": "krefson"
        },
        {
            "file_name": "BN_NMR.param",
            "ref_id": "123",
            "path": "attachments/BN_NMR.param",
            "user": "vmilman"
        },
        {
            "file_name": "BN_NMR.cell",
            "ref_id": "123",
            "path": "attachments/BN_NMR.cell",
            "user": "vmilman"
        },
        {
            "file_name": "iceviii-opt1.castep",
            "ref_id": "419",
            "path": "attachments/iceviii-opt1.castep",
            "user": "krefson"
        },
        {
            "file_name": "iceviii-opt1.param",
            "ref_id": "419",
            "path": "attachments/iceviii-opt1.param",
            "user": "krefson"
        },
        {
            "file_name": "iceviii-opt1.cell",
            "ref_id": "419",
            "path": "attachments/iceviii-opt1.cell",
            "user": "krefson"
        },
        {
            "file_name": "semp_disp_corr.patch",
            "ref_id": "419",
            "path": "attachments/semp_disp_corr.patch",
            "user": "mijp1"
        },
        {
            "file_name": "FeO.param",
            "ref_id": "202",
            "path": "attachments/FeO.param",
            "user": "krefson"
        },
        {
            "file_name": "failedH2.tgz",
            "ref_id": "473",
            "path": "attachments/failedH2.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "H2Box.tgz",
            "ref_id": "471",
            "path": "attachments/H2Box.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "BN.cell",
            "ref_id": "162",
            "path": "attachments/BN.cell",
            "user": "vmilman"
        },
        {
            "file_name": "DNNC_NPH_35GPa_Speed_20100209.param",
            "ref_id": "231",
            "path": "attachments/DNNC_NPH_35GPa_Speed_20100209.param",
            "user": "vmilman"
        },
        {
            "file_name": "DNNC_NPH_35GPa_Speed_20100209.cell",
            "ref_id": "231",
            "path": "attachments/DNNC_NPH_35GPa_Speed_20100209.cell",
            "user": "vmilman"
        },
        {
            "file_name": "MnO-AFM-pbe-hf6-bs.cell",
            "ref_id": "57",
            "path": "attachments/MnO-AFM-pbe-hf6-bs.cell",
            "user": "krefson"
        },
        {
            "file_name": "di.param",
            "ref_id": "84",
            "path": "attachments/di.param",
            "user": "jry20"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med.cell",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med.cell",
            "user": "krefson"
        },
        {
            "file_name": "09204vymq01.tgz",
            "ref_id": "163",
            "path": "attachments/09204vymq01.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "BTO-GGA-NC-Raman.castep",
            "ref_id": "185",
            "path": "attachments/BTO-GGA-NC-Raman.castep",
            "user": "vmilman"
        },
        {
            "file_name": "iceviii-opt2.param",
            "ref_id": "419",
            "path": "attachments/iceviii-opt2.param",
            "user": "krefson"
        },
        {
            "file_name": "iceviii-opt2.castep",
            "ref_id": "419",
            "path": "attachments/iceviii-opt2.castep",
            "user": "krefson"
        },
        {
            "file_name": "Ti_00PBE_OP.recpot",
            "ref_id": "254",
            "path": "attachments/Ti_00PBE_OP.recpot",
            "user": "vmilman"
        },
        {
            "file_name": "cell7_8_PhonDOS.param",
            "ref_id": "254",
            "path": "attachments/cell7_8_PhonDOS.param",
            "user": "vmilman"
        },
        {
            "file_name": "cell7_8_PhonDOS.castep",
            "ref_id": "254",
            "path": "attachments/cell7_8_PhonDOS.castep",
            "user": "vmilman"
        },
        {
            "file_name": "cell7_8_PhonDOS.cell",
            "ref_id": "254",
            "path": "attachments/cell7_8_PhonDOS.cell",
            "user": "vmilman"
        },
        {
            "file_name": "Ba_00.recpot",
            "ref_id": "254",
            "path": "attachments/Ba_00.recpot",
            "user": "vmilman"
        },
        {
            "file_name": "O_00PBE_OP.recpot",
            "ref_id": "254",
            "path": "attachments/O_00PBE_OP.recpot",
            "user": "vmilman"
        },
        {
            "file_name": "BTO-GGA-NC-Raman_Efield.castep",
            "ref_id": "185",
            "path": "attachments/BTO-GGA-NC-Raman_Efield.castep",
            "user": "vmilman"
        },
        {
            "file_name": "NaHF2-Ewtest.param",
            "ref_id": "119",
            "path": "attachments/NaHF2-Ewtest.param",
            "user": "krefson"
        },
        {
            "file_name": "NaHF2-Ewtest.cell",
            "ref_id": "119",
            "path": "attachments/NaHF2-Ewtest.cell",
            "user": "krefson"
        },
        {
            "file_name": "BN.param",
            "ref_id": "162",
            "path": "attachments/BN.param",
            "user": "vmilman"
        },
        {
            "file_name": "ri05.us735.tar.gz",
            "ref_id": "179",
            "path": "attachments/ri05.us735.tar.gz",
            "user": "peijun"
        },
        {
            "file_name": "ri07-pass.us735.tar.gz",
            "ref_id": "179",
            "path": "attachments/ri07-pass.us735.tar.gz",
            "user": "peijun"
        },
        {
            "file_name": "14.tar",
            "ref_id": "120",
            "path": "attachments/14.tar",
            "user": "krefson"
        },
        {
            "file_name": "ELF_Gamma.zip",
            "ref_id": "133",
            "path": "attachments/ELF_Gamma.zip",
            "user": "vmilman"
        },
        {
            "file_name": "methane_md.pdf",
            "ref_id": "469",
            "path": "attachments/methane_md.pdf",
            "user": "krefson"
        },
        {
            "file_name": "MgCO3.cell",
            "ref_id": "68",
            "path": "attachments/MgCO3.cell",
            "user": "krefson"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med-bs.castep",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med-bs.castep",
            "user": "krefson"
        },
        {
            "file_name": "Pbca_orient9-04phon.cell",
            "ref_id": "184",
            "path": "attachments/Pbca_orient9-04phon.cell",
            "user": "krefson"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med.param",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med.param",
            "user": "krefson"
        },
        {
            "file_name": "No275_PT.pdf",
            "ref_id": "171",
            "path": "attachments/No275_PT.pdf",
            "user": "mijp1"
        },
        {
            "file_name": "FeO_NMR.zip",
            "ref_id": "124",
            "path": "attachments/FeO_NMR.zip",
            "user": "vmilman"
        },
        {
            "file_name": "Zr_PBE_20.castep",
            "ref_id": "218",
            "path": "attachments/Zr_PBE_20.castep",
            "user": "vmilman"
        },
        {
            "file_name": "pyrite-P1.param",
            "ref_id": "145",
            "path": "attachments/pyrite-P1.param",
            "user": "krefson"
        },
        {
            "file_name": "Cu_bis_cutdown3-it20.pdf",
            "ref_id": "469",
            "path": "attachments/Cu_bis_cutdown3-it20.pdf",
            "user": "krefson"
        },
        {
            "file_name": "09351vymq02.tgz",
            "ref_id": "224",
            "path": "attachments/09351vymq02.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "ZrO2_cubic.cell",
            "ref_id": "286",
            "path": "attachments/ZrO2_cubic.cell",
            "user": "vmilman"
        },
        {
            "file_name": "job_shm.pbs",
            "ref_id": "418",
            "path": "attachments/job_shm.pbs",
            "user": "krefson"
        },
        {
            "file_name": "castep-gnu-debug.out",
            "ref_id": "418",
            "path": "attachments/castep-gnu-debug.out",
            "user": "krefson"
        },
        {
            "file_name": "pyrite.cell",
            "ref_id": "145",
            "path": "attachments/pyrite.cell",
            "user": "krefson"
        },
        {
            "file_name": "P_atm-ttc-again-Re-Retest_castep5_2_0-ps-LDA.param",
            "ref_id": "418",
            "path": "attachments/P_atm-ttc-again-Re-Retest_castep5_2_0-ps-LDA.param",
            "user": "krefson"
        },
        {
            "file_name": "TTC_gridspec_ip3.cell",
            "ref_id": "418",
            "path": "attachments/TTC_gridspec_ip3.cell",
            "user": "krefson"
        },
        {
            "file_name": "P_atm-ttc-again-Re-Retest_castep5_2_0-ps-LDA.cell",
            "ref_id": "418",
            "path": "attachments/P_atm-ttc-again-Re-Retest_castep5_2_0-ps-LDA.cell",
            "user": "krefson"
        },
        {
            "file_name": "castep-pathscale-debug.out",
            "ref_id": "418",
            "path": "attachments/castep-pathscale-debug.out",
            "user": "krefson"
        },
        {
            "file_name": "09063vymq01.tgz",
            "ref_id": "124",
            "path": "attachments/09063vymq01.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "castep_2b.param",
            "ref_id": "170",
            "path": "attachments/castep_2b.param",
            "user": "vmilman"
        },
        {
            "file_name": "troilite-afm.cell",
            "ref_id": "168",
            "path": "attachments/troilite-afm.cell",
            "user": "krefson"
        },
        {
            "file_name": "troilite.castep",
            "ref_id": "168",
            "path": "attachments/troilite.castep",
            "user": "krefson"
        },
        {
            "file_name": "FeO+CASTEP+Energy+%286%29.zip",
            "ref_id": "124",
            "path": "attachments/FeO+CASTEP+Energy+%286%29.zip",
            "user": "vmilman"
        },
        {
            "file_name": "parameters.F90-diff-2009-07-06-09-56-01.patch",
            "ref_id": "147",
            "path": "attachments/parameters.F90-diff-2009-07-06-09-56-01.patch",
            "user": "krefson"
        },
        {
            "file_name": "castep_2b.cell",
            "ref_id": "170",
            "path": "attachments/castep_2b.cell",
            "user": "vmilman"
        },
        {
            "file_name": "pagingproblem.tgz",
            "ref_id": "172",
            "path": "attachments/pagingproblem.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "di.cell",
            "ref_id": "84",
            "path": "attachments/di.cell",
            "user": "jry20"
        },
        {
            "file_name": "No275.pdf",
            "ref_id": "171",
            "path": "attachments/No275.pdf",
            "user": "mijp1"
        },
        {
            "file_name": "LiNH2_cut.cell",
            "ref_id": "146",
            "path": "attachments/LiNH2_cut.cell",
            "user": "krefson"
        },
        {
            "file_name": "EwaldCell.cell",
            "ref_id": "119",
            "path": "attachments/EwaldCell.cell",
            "user": "krefson"
        },
        {
            "file_name": "09204vymq01a.tgz",
            "ref_id": "163",
            "path": "attachments/09204vymq01a.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Zr_PBE_20.param",
            "ref_id": "218",
            "path": "attachments/Zr_PBE_20.param",
            "user": "vmilman"
        },
        {
            "file_name": "FeO.castep",
            "ref_id": "202",
            "path": "attachments/FeO.castep",
            "user": "krefson"
        },
        {
            "file_name": "castep_2b.castep",
            "ref_id": "170",
            "path": "attachments/castep_2b.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Si_00.recpot",
            "ref_id": "170",
            "path": "attachments/Si_00.recpot",
            "user": "vmilman"
        },
        {
            "file_name": "pyrite-P1.cell",
            "ref_id": "145",
            "path": "attachments/pyrite-P1.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si_00.realpot",
            "ref_id": "170",
            "path": "attachments/Si_00.realpot",
            "user": "vmilman"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med.castep",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med.castep",
            "user": "krefson"
        },
        {
            "file_name": "troilite.cell",
            "ref_id": "168",
            "path": "attachments/troilite.cell",
            "user": "krefson"
        },
        {
            "file_name": "troilite.param",
            "ref_id": "168",
            "path": "attachments/troilite.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-k222-spe-eb.cell",
            "ref_id": "459",
            "path": "attachments/Si2-k222-spe-eb.cell",
            "user": "krefson"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med.bands",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med.bands",
            "user": "krefson"
        },
        {
            "file_name": "Zr_PBE_20.cell",
            "ref_id": "218",
            "path": "attachments/Zr_PBE_20.cell",
            "user": "vmilman"
        },
        {
            "file_name": "cell-change-pot.patch",
            "ref_id": "107",
            "path": "attachments/cell-change-pot.patch",
            "user": "krefson"
        },
        {
            "file_name": "parameters.F90-diff-2009-07-06-10-01-29.patch",
            "ref_id": "138",
            "path": "attachments/parameters.F90-diff-2009-07-06-10-01-29.patch",
            "user": "krefson"
        },
        {
            "file_name": "FeO.cell",
            "ref_id": "202",
            "path": "attachments/FeO.cell",
            "user": "krefson"
        },
        {
            "file_name": "methane_md20fs-5000.pdf",
            "ref_id": "469",
            "path": "attachments/methane_md20fs-5000.pdf",
            "user": "krefson"
        },
        {
            "file_name": "test.cell",
            "ref_id": "468",
            "path": "attachments/test.cell",
            "user": "krefson"
        },
        {
            "file_name": "e_hamilt.pdf",
            "ref_id": "469",
            "path": "attachments/e_hamilt.pdf",
            "user": "krefson"
        },
        {
            "file_name": "energies.pdf",
            "ref_id": "469",
            "path": "attachments/energies.pdf",
            "user": "krefson"
        },
        {
            "file_name": "Si2-sedc.param",
            "ref_id": "315",
            "path": "attachments/Si2-sedc.param",
            "user": "krefson"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med-bs.param",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med-bs.param",
            "user": "krefson"
        },
        {
            "file_name": "LiNH2_cut.param",
            "ref_id": "146",
            "path": "attachments/LiNH2_cut.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-k222-spe-eb.param",
            "ref_id": "459",
            "path": "attachments/Si2-k222-spe-eb.param",
            "user": "krefson"
        },
        {
            "file_name": "castep-bug_466.patch",
            "ref_id": "466",
            "path": "attachments/castep-bug_466.patch",
            "user": "jmeyer"
        },
        {
            "file_name": "test.param",
            "ref_id": "468",
            "path": "attachments/test.param",
            "user": "krefson"
        },
        {
            "file_name": "Cu_bis_cutdown3-it20.castep",
            "ref_id": "469",
            "path": "attachments/Cu_bis_cutdown3-it20.castep",
            "user": "krefson"
        },
        {
            "file_name": "methane_md20fs.castep",
            "ref_id": "469",
            "path": "attachments/methane_md20fs.castep",
            "user": "krefson"
        },
        {
            "file_name": "Si.param",
            "ref_id": "506",
            "path": "attachments/Si.param",
            "user": "krefson"
        },
        {
            "file_name": "Si.cell",
            "ref_id": "506",
            "path": "attachments/Si.cell",
            "user": "krefson"
        },
        {
            "file_name": "Cubis_w80_NVT.cell",
            "ref_id": "499",
            "path": "attachments/Cubis_w80_NVT.cell",
            "user": "krefson"
        },
        {
            "file_name": "Cubis_w80_NVT.param",
            "ref_id": "499",
            "path": "attachments/Cubis_w80_NVT.param",
            "user": "krefson"
        },
        {
            "file_name": "MgCO3.param",
            "ref_id": "68",
            "path": "attachments/MgCO3.param",
            "user": "krefson"
        },
        {
            "file_name": "FeO-pbe0-krhf1-med-bs.cell",
            "ref_id": "55",
            "path": "attachments/FeO-pbe0-krhf1-med-bs.cell",
            "user": "krefson"
        },
        {
            "file_name": "lonsdaleite.cell",
            "ref_id": "408",
            "path": "attachments/lonsdaleite.cell",
            "user": "krefson"
        },
        {
            "file_name": "Ge2_00-sh0-8c.param",
            "ref_id": "407",
            "path": "attachments/Ge2_00-sh0-8c.param",
            "user": "krefson"
        },
        {
            "file_name": "TTC_gridspec_ip3.param",
            "ref_id": "418",
            "path": "attachments/TTC_gridspec_ip3.param",
            "user": "krefson"
        },
        {
            "file_name": "Ge2_00-sh0-8c.castep",
            "ref_id": "407",
            "path": "attachments/Ge2_00-sh0-8c.castep",
            "user": "krefson"
        },
        {
            "file_name": "Ge2_00-sh0-8c.cell",
            "ref_id": "407",
            "path": "attachments/Ge2_00-sh0-8c.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-sedc.cell",
            "ref_id": "315",
            "path": "attachments/Si2-sedc.cell",
            "user": "krefson"
        },
        {
            "file_name": "RubbishPrint.tgz",
            "ref_id": "1562",
            "path": "attachments/RubbishPrint.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "zeroEf.tgz",
            "ref_id": "1563",
            "path": "attachments/zeroEf.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "TDDFT-continuation.tgz",
            "ref_id": "1560",
            "path": "attachments/TDDFT-continuation.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "FD_Phonons_Continuatnon.tgz",
            "ref_id": "1559",
            "path": "attachments/FD_Phonons_Continuatnon.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "NMR_JCContinuation.tgz",
            "ref_id": "1560",
            "path": "attachments/NMR_JCContinuation.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "spin-pol.tgz",
            "ref_id": "1564",
            "path": "attachments/spin-pol.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "ContinuationSegFault.tgz",
            "ref_id": "1561",
            "path": "attachments/ContinuationSegFault.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "ContinuationMpiFatal.tgz",
            "ref_id": "1561",
            "path": "attachments/ContinuationMpiFatal.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "SnO2_Efield.param",
            "ref_id": "1006",
            "path": "attachments/SnO2_Efield.param",
            "user": "vmilman"
        },
        {
            "file_name": "cell_supercell_reread.diff",
            "ref_id": "1559",
            "path": "attachments/cell_supercell_reread.diff",
            "user": "krefson"
        },
        {
            "file_name": "b3lyp.-cont.tgz",
            "ref_id": "1565",
            "path": "attachments/b3lyp.-cont.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "PBEsol_test.docx",
            "ref_id": "148",
            "path": "attachments/PBEsol_test.docx",
            "user": "vmilman"
        },
        {
            "file_name": "fd_hang12.tgz",
            "ref_id": "557",
            "path": "attachments/fd_hang12.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "divide_by_zero.tgz",
            "ref_id": "562",
            "path": "attachments/divide_by_zero.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "OneShot.tgz",
            "ref_id": "562",
            "path": "attachments/OneShot.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "CrashSi.tgz",
            "ref_id": "603",
            "path": "attachments/CrashSi.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "dmat_failure.tgz",
            "ref_id": "543",
            "path": "attachments/dmat_failure.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "FFT-SHM-Fail.tgz",
            "ref_id": "779",
            "path": "attachments/FFT-SHM-Fail.tgz",
            "user": "krefson"
        },
        {
            "file_name": "SHM_FFT_FAIL_ORIG.tgz",
            "ref_id": "779",
            "path": "attachments/SHM_FFT_FAIL_ORIG.tgz",
            "user": "krefson"
        },
        {
            "file_name": "MS-37705.tgz",
            "ref_id": "772",
            "path": "attachments/MS-37705.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "SiC_corundum.zip",
            "ref_id": "764",
            "path": "attachments/SiC_corundum.zip",
            "user": "vmilman"
        },
        {
            "file_name": "NaCl-dipolecorr.tgz",
            "ref_id": "759",
            "path": "attachments/NaCl-dipolecorr.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "MS_31676.tgz",
            "ref_id": "520",
            "path": "attachments/MS_31676.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "C_C4-PhonDisp-s0-222o.cell",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s0-222o.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s0-222o-c.castep",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s0-222o-c.castep",
            "user": "krefson"
        },
        {
            "file_name": "Si2-bp4-b6.param",
            "ref_id": "589",
            "path": "attachments/Si2-bp4-b6.param",
            "user": "krefson"
        },
        {
            "file_name": "wave.F90-diff-2011-09-26-11-30-17.patch",
            "ref_id": "589",
            "path": "attachments/wave.F90-diff-2011-09-26-11-30-17.patch",
            "user": "krefson"
        },
        {
            "file_name": "Si2-bp4-b6.cell",
            "ref_id": "589",
            "path": "attachments/Si2-bp4-b6.cell",
            "user": "krefson"
        },
        {
            "file_name": "H2O.param",
            "ref_id": "763",
            "path": "attachments/H2O.param",
            "user": "vmilman"
        },
        {
            "file_name": "H2O.cell",
            "ref_id": "763",
            "path": "attachments/H2O.cell",
            "user": "vmilman"
        },
        {
            "file_name": "LiNi7O8.param",
            "ref_id": "559",
            "path": "attachments/LiNi7O8.param",
            "user": "krefson"
        },
        {
            "file_name": "LiNi7O8.cell",
            "ref_id": "559",
            "path": "attachments/LiNi7O8.cell",
            "user": "krefson"
        },
        {
            "file_name": "ZrW2O8-geom-k4-9.314-ts.cell",
            "ref_id": "834",
            "path": "attachments/ZrW2O8-geom-k4-9.314-ts.cell",
            "user": "krefson"
        },
        {
            "file_name": "SI_sHF_parallel.tgz",
            "ref_id": "889",
            "path": "attachments/SI_sHF_parallel.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "neb_fail.tgz",
            "ref_id": "923",
            "path": "attachments/neb_fail.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "Li.tgz",
            "ref_id": "517",
            "path": "attachments/Li.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "ScC-LDAU-stress-x.cell",
            "ref_id": "918",
            "path": "attachments/ScC-LDAU-stress-x.cell",
            "user": "krefson"
        },
        {
            "file_name": "ScC-LDAU-stress-x.param",
            "ref_id": "918",
            "path": "attachments/ScC-LDAU-stress-x.param",
            "user": "krefson"
        },
        {
            "file_name": "W2-spe.param",
            "ref_id": "689",
            "path": "attachments/W2-spe.param",
            "user": "krefson"
        },
        {
            "file_name": "W2-spe.cell",
            "ref_id": "689",
            "path": "attachments/W2-spe.cell",
            "user": "krefson"
        },
        {
            "file_name": "LiNH3_Geom_Fail.tgz",
            "ref_id": "941",
            "path": "attachments/LiNH3_Geom_Fail.tgz",
            "user": "krefson"
        },
        {
            "file_name": "LiNH3_super_I413_kr1-7.0-fullsym.castep",
            "ref_id": "941",
            "path": "attachments/LiNH3_super_I413_kr1-7.0-fullsym.castep",
            "user": "krefson"
        },
        {
            "file_name": "Pd110.castep",
            "ref_id": "760",
            "path": "attachments/Pd110.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Pd110.param",
            "ref_id": "760",
            "path": "attachments/Pd110.param",
            "user": "vmilman"
        },
        {
            "file_name": "Pd110.cell",
            "ref_id": "760",
            "path": "attachments/Pd110.cell",
            "user": "vmilman"
        },
        {
            "file_name": "BN_PhonDisp.castep",
            "ref_id": "772",
            "path": "attachments/BN_PhonDisp.castep",
            "user": "vmilman"
        },
        {
            "file_name": "precursor_optall_fixedwater_repeat_geomopt.cell",
            "ref_id": "604",
            "path": "attachments/precursor_optall_fixedwater_repeat_geomopt.cell",
            "user": "krefson"
        },
        {
            "file_name": "ZrW2O8-geom-k4-9.314-ts.param",
            "ref_id": "834",
            "path": "attachments/ZrW2O8-geom-k4-9.314-ts.param",
            "user": "krefson"
        },
        {
            "file_name": "fail.tgz",
            "ref_id": "556",
            "path": "attachments/fail.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "C_C4-PhonDisp-s-222o.cell",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s-222o.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s0-222o-c.cell",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s0-222o-c.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s0-222o.param",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s0-222o.param",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s-222o.param",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s-222o.param",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s-222o-c.param",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s-222o-c.param",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s-222o-c.cell",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s-222o-c.cell",
            "user": "krefson"
        },
        {
            "file_name": "C_C4-PhonDisp-s-222o-c.castep",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s-222o-c.castep",
            "user": "krefson"
        },
        {
            "file_name": "Au.tgz",
            "ref_id": "940",
            "path": "attachments/Au.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "C_C4-PhonDisp-s0-222o-c.param",
            "ref_id": "516",
            "path": "attachments/C_C4-PhonDisp-s0-222o-c.param",
            "user": "krefson"
        },
        {
            "file_name": "Bandpar_Bug_Example.tgz",
            "ref_id": "499",
            "path": "attachments/Bandpar_Bug_Example.tgz",
            "user": "krefson"
        },
        {
            "file_name": "N2crash.tgz",
            "ref_id": "921",
            "path": "attachments/N2crash.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "gr_unit-fix.castep-4p",
            "ref_id": "862",
            "path": "attachments/gr_unit-fix.castep-4p",
            "user": "krefson"
        },
        {
            "file_name": "PhonFailure.tgz",
            "ref_id": "560",
            "path": "attachments/PhonFailure.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "gr_unit-fix.param",
            "ref_id": "862",
            "path": "attachments/gr_unit-fix.param",
            "user": "krefson"
        },
        {
            "file_name": "gr_unit-fix.castep-8p",
            "ref_id": "862",
            "path": "attachments/gr_unit-fix.castep-8p",
            "user": "krefson"
        },
        {
            "file_name": "Ni-OTF.cell",
            "ref_id": "774",
            "path": "attachments/Ni-OTF.cell",
            "user": "krefson"
        },
        {
            "file_name": "Cu_bis-small.cell",
            "ref_id": "499",
            "path": "attachments/Cu_bis-small.cell",
            "user": "krefson"
        },
        {
            "file_name": "graphdiyne_H_phonon.cell",
            "ref_id": "747",
            "path": "attachments/graphdiyne_H_phonon.cell",
            "user": "krefson"
        },
        {
            "file_name": "SnO2.param",
            "ref_id": "558",
            "path": "attachments/SnO2.param",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2.castep",
            "ref_id": "558",
            "path": "attachments/SnO2.castep",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2.cell",
            "ref_id": "558",
            "path": "attachments/SnO2.cell",
            "user": "vmilman"
        },
        {
            "file_name": "patch_castep_geometry",
            "ref_id": "859",
            "path": "attachments/patch_castep_geometry",
            "user": "pbro"
        },
        {
            "file_name": "castep_9a.tgz",
            "ref_id": "520",
            "path": "attachments/castep_9a.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "RbGaH2_Efield-ip4-scarf08-64-diag1.cell",
            "ref_id": "625",
            "path": "attachments/RbGaH2_Efield-ip4-scarf08-64-diag1.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-raman.cell",
            "ref_id": "856",
            "path": "attachments/Si2-raman.cell",
            "user": "krefson"
        },
        {
            "file_name": "ZnO_Efield.cell",
            "ref_id": "587",
            "path": "attachments/ZnO_Efield.cell",
            "user": "krefson"
        },
        {
            "file_name": "Cu_bis-small.param",
            "ref_id": "499",
            "path": "attachments/Cu_bis-small.param",
            "user": "krefson"
        },
        {
            "file_name": "Fe.param",
            "ref_id": "935",
            "path": "attachments/Fe.param",
            "user": "danjones"
        },
        {
            "file_name": "24vs16.tgz",
            "ref_id": "587",
            "path": "attachments/24vs16.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "BN.castep",
            "ref_id": "772",
            "path": "attachments/BN.castep",
            "user": "vmilman"
        },
        {
            "file_name": "RbGaH2_opt.castep",
            "ref_id": "625",
            "path": "attachments/RbGaH2_opt.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Si2-fgm.param",
            "ref_id": "840",
            "path": "attachments/Si2-fgm.param",
            "user": "krefson"
        },
        {
            "file_name": "OCP.cell",
            "ref_id": "688",
            "path": "attachments/OCP.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-md.castep",
            "ref_id": "537",
            "path": "attachments/Si2-md.castep",
            "user": "krefson"
        },
        {
            "file_name": "OCP.param",
            "ref_id": "688",
            "path": "attachments/OCP.param",
            "user": "krefson"
        },
        {
            "file_name": "geom_bugfix_20111130.tar.gz",
            "ref_id": "622",
            "path": "attachments/geom_bugfix_20111130.tar.gz",
            "user": "mijp1"
        },
        {
            "file_name": "Li2.tgz",
            "ref_id": "517",
            "path": "attachments/Li2.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "ZnO_Efield.param",
            "ref_id": "587",
            "path": "attachments/ZnO_Efield.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-raman.param",
            "ref_id": "856",
            "path": "attachments/Si2-raman.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-fgm.cell",
            "ref_id": "840",
            "path": "attachments/Si2-fgm.cell",
            "user": "krefson"
        },
        {
            "file_name": "ZrO2_Geom_Fail.tgz",
            "ref_id": "835",
            "path": "attachments/ZrO2_Geom_Fail.tgz",
            "user": "krefson"
        },
        {
            "file_name": "Si2_Constr.cell",
            "ref_id": "554",
            "path": "attachments/Si2_Constr.cell",
            "user": "krefson"
        },
        {
            "file_name": "gr_unit-fix.cell",
            "ref_id": "862",
            "path": "attachments/gr_unit-fix.cell",
            "user": "krefson"
        },
        {
            "file_name": "Ga_optgga1.recpot",
            "ref_id": "625",
            "path": "attachments/Ga_optgga1.recpot",
            "user": "krefson"
        },
        {
            "file_name": "RbGaH2_opt.cell",
            "ref_id": "625",
            "path": "attachments/RbGaH2_opt.cell",
            "user": "krefson"
        },
        {
            "file_name": "graphdiyne_H_phonon.param",
            "ref_id": "747",
            "path": "attachments/graphdiyne_H_phonon.param",
            "user": "krefson"
        },
        {
            "file_name": "H_01optgga1.recpot",
            "ref_id": "625",
            "path": "attachments/H_01optgga1.recpot",
            "user": "krefson"
        },
        {
            "file_name": "Si8-bandpar-allbands-4.cell",
            "ref_id": "499",
            "path": "attachments/Si8-bandpar-allbands-4.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si8-bandpar-allbands-4.param",
            "ref_id": "499",
            "path": "attachments/Si8-bandpar-allbands-4.param",
            "user": "krefson"
        },
        {
            "file_name": "Si8-bandpar-geom-allbands-4.cell",
            "ref_id": "499",
            "path": "attachments/Si8-bandpar-geom-allbands-4.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si8-bandpar-geom-allbands-4.param",
            "ref_id": "499",
            "path": "attachments/Si8-bandpar-geom-allbands-4.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-bp.param",
            "ref_id": "950",
            "path": "attachments/Si2-bp.param",
            "user": "krefson"
        },
        {
            "file_name": "Si2-bp.cell",
            "ref_id": "950",
            "path": "attachments/Si2-bp.cell",
            "user": "krefson"
        },
        {
            "file_name": "RbGaH2_Efield-ip4-scarf08-64-diag1.param",
            "ref_id": "625",
            "path": "attachments/RbGaH2_Efield-ip4-scarf08-64-diag1.param",
            "user": "krefson"
        },
        {
            "file_name": "electronic.f90.patch",
            "ref_id": "963",
            "path": "attachments/electronic.f90.patch",
            "user": "pbro"
        },
        {
            "file_name": "h2-neb-fail.tgz",
            "ref_id": "898",
            "path": "attachments/h2-neb-fail.tgz",
            "user": "krefson"
        },
        {
            "file_name": "LB_Slcn_B3LYP-1.castep",
            "ref_id": "904",
            "path": "attachments/LB_Slcn_B3LYP-1.castep",
            "user": "krefson"
        },
        {
            "file_name": "Si2-raman.castep",
            "ref_id": "856",
            "path": "attachments/Si2-raman.castep",
            "user": "krefson"
        },
        {
            "file_name": "Si2-md.cell",
            "ref_id": "537",
            "path": "attachments/Si2-md.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-md.param",
            "ref_id": "537",
            "path": "attachments/Si2-md.param",
            "user": "krefson"
        },
        {
            "file_name": "Si-I41amd-PhonDisp-new.param",
            "ref_id": "516",
            "path": "attachments/Si-I41amd-PhonDisp-new.param",
            "user": "krefson"
        },
        {
            "file_name": "LiO2Ni.castep",
            "ref_id": "527",
            "path": "attachments/LiO2Ni.castep",
            "user": "krefson"
        },
        {
            "file_name": "LiO2Ni.param",
            "ref_id": "527",
            "path": "attachments/LiO2Ni.param",
            "user": "krefson"
        },
        {
            "file_name": "Si-I41amd-PhonDisp-new.cell",
            "ref_id": "516",
            "path": "attachments/Si-I41amd-PhonDisp-new.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-md.md",
            "ref_id": "537",
            "path": "attachments/Si2-md.md",
            "user": "krefson"
        },
        {
            "file_name": "Si2-md.md.0",
            "ref_id": "537",
            "path": "attachments/Si2-md.md.0",
            "user": "krefson"
        },
        {
            "file_name": "my.castep",
            "ref_id": "968",
            "path": "attachments/my.castep",
            "user": "vmilman"
        },
        {
            "file_name": "my.cell",
            "ref_id": "968",
            "path": "attachments/my.cell",
            "user": "vmilman"
        },
        {
            "file_name": "my.param",
            "ref_id": "968",
            "path": "attachments/my.param",
            "user": "vmilman"
        },
        {
            "file_name": "Si2.param",
            "ref_id": "1100",
            "path": "attachments/Si2.param",
            "user": "danjones"
        },
        {
            "file_name": "Si2.cell",
            "ref_id": "1100",
            "path": "attachments/Si2.cell",
            "user": "danjones"
        },
        {
            "file_name": "Si2.castep",
            "ref_id": "1100",
            "path": "attachments/Si2.castep",
            "user": "danjones"
        },
        {
            "file_name": "SnO2.castep",
            "ref_id": "1006",
            "path": "attachments/SnO2.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Pb-k121212-bs.0001.err",
            "ref_id": "1444",
            "path": "attachments/Pb-k121212-bs.0001.err",
            "user": "krefson"
        },
        {
            "file_name": "Pb-k121212-bs.param",
            "ref_id": "1444",
            "path": "attachments/Pb-k121212-bs.param",
            "user": "krefson"
        },
        {
            "file_name": "Pb-k121212-bs.cell",
            "ref_id": "1444",
            "path": "attachments/Pb-k121212-bs.cell",
            "user": "krefson"
        },
        {
            "file_name": "SnO2.param",
            "ref_id": "1006",
            "path": "attachments/SnO2.param",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2_Efield.castep",
            "ref_id": "1006",
            "path": "attachments/SnO2_Efield.castep",
            "user": "vmilman"
        },
        {
            "file_name": "C2H4_NMRJC.param",
            "ref_id": "1226",
            "path": "attachments/C2H4_NMRJC.param",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2_Efield.cell",
            "ref_id": "1006",
            "path": "attachments/SnO2_Efield.cell",
            "user": "vmilman"
        },
        {
            "file_name": "SpinComplain.zip",
            "ref_id": "1008",
            "path": "attachments/SpinComplain.zip",
            "user": "vmilman"
        },
        {
            "file_name": "Sapo.zip",
            "ref_id": "987",
            "path": "attachments/Sapo.zip",
            "user": "aperlov"
        },
        {
            "file_name": "otfg.param",
            "ref_id": "988",
            "path": "attachments/otfg.param",
            "user": "vmilman"
        },
        {
            "file_name": "otfg.castep-7.0.2",
            "ref_id": "988",
            "path": "attachments/otfg.castep-7.0.2",
            "user": "krefson"
        },
        {
            "file_name": "Testsc.castep-18",
            "ref_id": "1785",
            "path": "attachments/Testsc.castep-18",
            "user": "krefson"
        },
        {
            "file_name": "Testsc.param",
            "ref_id": "1785",
            "path": "attachments/Testsc.param",
            "user": "krefson"
        },
        {
            "file_name": "Testsc.castep-17.2",
            "ref_id": "1785",
            "path": "attachments/Testsc.castep-17.2",
            "user": "krefson"
        },
        {
            "file_name": "otfg.castep-r6274",
            "ref_id": "988",
            "path": "attachments/otfg.castep-r6274",
            "user": "krefson"
        },
        {
            "file_name": "semp_disp_corr.f90",
            "ref_id": "1741",
            "path": "attachments/semp_disp_corr.f90",
            "user": "vmilman"
        },
        {
            "file_name": "parameters.f90",
            "ref_id": "1741",
            "path": "attachments/parameters.f90",
            "user": "vmilman"
        },
        {
            "file_name": "otfg.castep.70",
            "ref_id": "988",
            "path": "attachments/otfg.castep.70",
            "user": "vmilman"
        },
        {
            "file_name": "Ac.param",
            "ref_id": "1053",
            "path": "attachments/Ac.param",
            "user": "vmilman"
        },
        {
            "file_name": "NaI-O1-1114-PhonDisp.param",
            "ref_id": "1031",
            "path": "attachments/NaI-O1-1114-PhonDisp.param",
            "user": "krefson"
        },
        {
            "file_name": "Ac.castep",
            "ref_id": "1053",
            "path": "attachments/Ac.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Testsc.cell",
            "ref_id": "1785",
            "path": "attachments/Testsc.cell",
            "user": "krefson"
        },
        {
            "file_name": "otfg.castep.80",
            "ref_id": "988",
            "path": "attachments/otfg.castep.80",
            "user": "vmilman"
        },
        {
            "file_name": "Er.cell",
            "ref_id": "1047",
            "path": "attachments/Er.cell",
            "user": "vmilman"
        },
        {
            "file_name": "C2H4_NMRJC.castep",
            "ref_id": "1226",
            "path": "attachments/C2H4_NMRJC.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Er.castep",
            "ref_id": "1047",
            "path": "attachments/Er.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Er.param",
            "ref_id": "1047",
            "path": "attachments/Er.param",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2.cell",
            "ref_id": "1006",
            "path": "attachments/SnO2.cell",
            "user": "vmilman"
        },
        {
            "file_name": "C2H4.zip",
            "ref_id": "1212",
            "path": "attachments/C2H4.zip",
            "user": "vmilman"
        },
        {
            "file_name": "spectralXC.tgz",
            "ref_id": "1613",
            "path": "attachments/spectralXC.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "MoS2.tar.gz",
            "ref_id": "1022",
            "path": "attachments/MoS2.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "extra_bands.tgz",
            "ref_id": "1305",
            "path": "attachments/extra_bands.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "NaI-O1-1114-PhonDisp.cell",
            "ref_id": "1031",
            "path": "attachments/NaI-O1-1114-PhonDisp.cell",
            "user": "krefson"
        },
        {
            "file_name": "local_test1_PhonDOS-111.cell",
            "ref_id": "1465",
            "path": "attachments/local_test1_PhonDOS-111.cell",
            "user": "krefson"
        },
        {
            "file_name": "local_test1_PhonDOS-111.param",
            "ref_id": "1465",
            "path": "attachments/local_test1_PhonDOS-111.param",
            "user": "krefson"
        },
        {
            "file_name": "MS-54062.zip",
            "ref_id": "1815",
            "path": "attachments/MS-54062.zip",
            "user": "aperlov"
        },
        {
            "file_name": "otfg.cell",
            "ref_id": "988",
            "path": "attachments/otfg.cell",
            "user": "vmilman"
        },
        {
            "file_name": "Si2-cellopt-fix_vol.tgz",
            "ref_id": "1763",
            "path": "attachments/Si2-cellopt-fix_vol.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "electronic_status_patch.txt",
            "ref_id": "890",
            "path": "attachments/electronic_status_patch.txt",
            "user": "pbro"
        },
        {
            "file_name": "TaFeSb-NCP17.zip",
            "ref_id": "1792",
            "path": "attachments/TaFeSb-NCP17.zip",
            "user": "gan503"
        },
        {
            "file_name": "TaFeSb-usp.zip",
            "ref_id": "1792",
            "path": "attachments/TaFeSb-usp.zip",
            "user": "gan503"
        },
        {
            "file_name": "Pu_PBE500.cell",
            "ref_id": "1054",
            "path": "attachments/Pu_PBE500.cell",
            "user": "vmilman"
        },
        {
            "file_name": "include_tools.mk.patch",
            "ref_id": "1335",
            "path": "attachments/include_tools.mk.patch",
            "user": "pbro"
        },
        {
            "file_name": "Pu_PBE500.param",
            "ref_id": "1054",
            "path": "attachments/Pu_PBE500.param",
            "user": "vmilman"
        },
        {
            "file_name": "tddft.tgz",
            "ref_id": "1536",
            "path": "attachments/tddft.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "Ta_k5-2.cell",
            "ref_id": "1328",
            "path": "attachments/Ta_k5-2.cell",
            "user": "krefson"
        },
        {
            "file_name": "Ta_k5-2.param",
            "ref_id": "1328",
            "path": "attachments/Ta_k5-2.param",
            "user": "krefson"
        },
        {
            "file_name": "mali_unit-aligned.cell",
            "ref_id": "1387",
            "path": "attachments/mali_unit-aligned.cell",
            "user": "chandley"
        },
        {
            "file_name": "mali_unit.param",
            "ref_id": "1387",
            "path": "attachments/mali_unit.param",
            "user": "chandley"
        },
        {
            "file_name": "mali_unit.cell",
            "ref_id": "1387",
            "path": "attachments/mali_unit.cell",
            "user": "chandley"
        },
        {
            "file_name": "LDAU_FD_DM.tgz",
            "ref_id": "1640",
            "path": "attachments/LDAU_FD_DM.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "BN_spectralXC.zip",
            "ref_id": "1613",
            "path": "attachments/BN_spectralXC.zip",
            "user": "vmilman"
        },
        {
            "file_name": "MS49727.tgz",
            "ref_id": "1465",
            "path": "attachments/MS49727.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "MS49727.potentials.tgz",
            "ref_id": "1465",
            "path": "attachments/MS49727.potentials.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Be_mem.tgz",
            "ref_id": "1395",
            "path": "attachments/Be_mem.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "tddft-fail.tgz",
            "ref_id": "1544",
            "path": "attachments/tddft-fail.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "BN_PhonDisp.res.castep",
            "ref_id": "1559",
            "path": "attachments/BN_PhonDisp.res.castep",
            "user": "vmilman"
        },
        {
            "file_name": "Si2-sc.castep",
            "ref_id": "1659",
            "path": "attachments/Si2-sc.castep",
            "user": "krefson"
        },
        {
            "file_name": "Si2-sc.cell",
            "ref_id": "1659",
            "path": "attachments/Si2-sc.cell",
            "user": "krefson"
        },
        {
            "file_name": "Si2-sc.0001.err",
            "ref_id": "1659",
            "path": "attachments/Si2-sc.0001.err",
            "user": "krefson"
        },
        {
            "file_name": "Si2-sc.param",
            "ref_id": "1659",
            "path": "attachments/Si2-sc.param",
            "user": "krefson"
        },
        {
            "file_name": "Nb0.25Ta0.75FeSb.tar",
            "ref_id": "1797",
            "path": "attachments/Nb0.25Ta0.75FeSb.tar",
            "user": "gan503"
        },
        {
            "file_name": "Nb0.25Ta0.75FeSb.tar",
            "ref_id": "1798",
            "path": "attachments/Nb0.25Ta0.75FeSb.tar",
            "user": "gan503"
        },
        {
            "file_name": "Capture.JPG",
            "ref_id": "1792",
            "path": "attachments/Capture.JPG",
            "user": "vmilman"
        },
        {
            "file_name": "Seedname_misspelt.png",
            "ref_id": "1796",
            "path": "attachments/Seedname_misspelt.png",
            "user": "joe_hooper"
        },
        {
            "file_name": "crashed.tgz",
            "ref_id": "1590",
            "path": "attachments/crashed.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "cell2cif.f90",
            "ref_id": "199",
            "path": "attachments/cell2cif.f90",
            "user": "aperlov"
        },
        {
            "file_name": "checkfiles.tgz",
            "ref_id": "1561",
            "path": "attachments/checkfiles.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "Si-imprecise-q.tar.gz",
            "ref_id": "1797",
            "path": "attachments/Si-imprecise-q.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "invert.tgz",
            "ref_id": "1596",
            "path": "attachments/invert.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "Pu_PBE500.castep",
            "ref_id": "1054",
            "path": "attachments/Pu_PBE500.castep",
            "user": "vmilman"
        },
        {
            "file_name": "directrun.tgz",
            "ref_id": "1551",
            "path": "attachments/directrun.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "contrun.tgz",
            "ref_id": "1551",
            "path": "attachments/contrun.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "grid_comp.pdf",
            "ref_id": "1733",
            "path": "attachments/grid_comp.pdf",
            "user": "tdurrant"
        },
        {
            "file_name": "fine_grid_example.tar.qz",
            "ref_id": "1733",
            "path": "attachments/fine_grid_example.tar.qz",
            "user": "tdurrant"
        },
        {
            "file_name": "ZrO2_cubic.param",
            "ref_id": "286",
            "path": "attachments/ZrO2_cubic.param",
            "user": "vmilman"
        },
        {
            "file_name": "Urea-geom.tar.gz",
            "ref_id": "1507",
            "path": "attachments/Urea-geom.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Mg3Bi2.tgz",
            "ref_id": "1510",
            "path": "attachments/Mg3Bi2.tgz",
            "user": "jl635"
        },
        {
            "file_name": "Ta-PDOS.jpg",
            "ref_id": "1792",
            "path": "attachments/Ta-PDOS.jpg",
            "user": "gan503"
        },
        {
            "file_name": "dryrun-spectral-kpoints.zip",
            "ref_id": "1793",
            "path": "attachments/dryrun-spectral-kpoints.zip",
            "user": "gan503"
        },
        {
            "file_name": "TaFeSb.NCP.species_ang.pdos.dat",
            "ref_id": "1792",
            "path": "attachments/TaFeSb.NCP.species_ang.pdos.dat",
            "user": "gan503"
        },
        {
            "file_name": "urea_LBFGS.castep",
            "ref_id": "1817",
            "path": "attachments/urea_LBFGS.castep",
            "user": "vmilman"
        },
        {
            "file_name": "urea_LBFGS.cell",
            "ref_id": "1817",
            "path": "attachments/urea_LBFGS.cell",
            "user": "vmilman"
        },
        {
            "file_name": "urea_LBFGS.param",
            "ref_id": "1817",
            "path": "attachments/urea_LBFGS.param",
            "user": "vmilman"
        },
        {
            "file_name": "TaFeSb.USP.species_ang.pdos.dat",
            "ref_id": "1792",
            "path": "attachments/TaFeSb.USP.species_ang.pdos.dat",
            "user": "gan503"
        },
        {
            "file_name": "magnesite-interpolation.tar.xz",
            "ref_id": "1734",
            "path": "attachments/magnesite-interpolation.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "GO.zip",
            "ref_id": "1686",
            "path": "attachments/GO.zip",
            "user": "aperlov"
        },
        {
            "file_name": "H2box10.tgz",
            "ref_id": "1565",
            "path": "attachments/H2box10.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "B3LYP_DOS.tgz",
            "ref_id": "1565",
            "path": "attachments/B3LYP_DOS.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Si_PhonDOS.tgz",
            "ref_id": "1605",
            "path": "attachments/Si_PhonDOS.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "LDAU_GO.tgz",
            "ref_id": "1606",
            "path": "attachments/LDAU_GO.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "SbO2.png",
            "ref_id": "1607",
            "path": "attachments/SbO2.png",
            "user": "vmilman"
        },
        {
            "file_name": "SnO2.png",
            "ref_id": "1607",
            "path": "attachments/SnO2.png",
            "user": "vmilman"
        },
        {
            "file_name": "Cf2.tgz",
            "ref_id": "1620",
            "path": "attachments/Cf2.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "geometry.patch",
            "ref_id": "1586",
            "path": "attachments/geometry.patch",
            "user": "mijp1"
        },
        {
            "file_name": "model.patch",
            "ref_id": "1586",
            "path": "attachments/model.patch",
            "user": "mijp1"
        },
        {
            "file_name": "phonon_kpoints.0001.err",
            "ref_id": "1799",
            "path": "attachments/phonon_kpoints.0001.err",
            "user": "matthew_evans"
        },
        {
            "file_name": "si2-lbfgs-c.castep",
            "ref_id": "1586",
            "path": "attachments/si2-lbfgs-c.castep",
            "user": "vmilman"
        },
        {
            "file_name": "LR_metals_gamma.tgz",
            "ref_id": "1614",
            "path": "attachments/LR_metals_gamma.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "dummy_supercell.cell",
            "ref_id": "1799",
            "path": "attachments/dummy_supercell.cell",
            "user": "matthew_evans"
        },
        {
            "file_name": "manual_spacing.tar.gz",
            "ref_id": "1800",
            "path": "attachments/manual_spacing.tar.gz",
            "user": "matthew_evans"
        },
        {
            "file_name": "auto_spacing.tar.gz",
            "ref_id": "1800",
            "path": "attachments/auto_spacing.tar.gz",
            "user": "matthew_evans"
        },
        {
            "file_name": "TaFeSb+CASTEP+Energy+USP.zip",
            "ref_id": "1792",
            "path": "attachments/TaFeSb+CASTEP+Energy+USP.zip",
            "user": "vmilman"
        },
        {
            "file_name": "TDDFT_failure.tgz",
            "ref_id": "1788",
            "path": "attachments/TDDFT_failure.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "vca.tgz",
            "ref_id": "1654",
            "path": "attachments/vca.tgz",
            "user": "aperlov"
        },
        {
            "file_name": "C2H4_NMRJC.cell",
            "ref_id": "1226",
            "path": "attachments/C2H4_NMRJC.cell",
            "user": "vmilman"
        },
        {
            "file_name": "B3LYP_detailed.tgz",
            "ref_id": "1565",
            "path": "attachments/B3LYP_detailed.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "Phonons_DFTD.tgz",
            "ref_id": "1738",
            "path": "attachments/Phonons_DFTD.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "C2H2.tgz",
            "ref_id": "1703",
            "path": "attachments/C2H2.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "error1.tgz",
            "ref_id": "1738",
            "path": "attachments/error1.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "rutile_LBFGS.param",
            "ref_id": "1817",
            "path": "attachments/rutile_LBFGS.param",
            "user": "vmilman"
        },
        {
            "file_name": "rutile_LBFGS.castep",
            "ref_id": "1817",
            "path": "attachments/rutile_LBFGS.castep",
            "user": "vmilman"
        },
        {
            "file_name": "rutile_LBFGS.cell",
            "ref_id": "1817",
            "path": "attachments/rutile_LBFGS.cell",
            "user": "vmilman"
        },
        {
            "file_name": "SmO.tgz",
            "ref_id": "1759",
            "path": "attachments/SmO.tgz",
            "user": "vmilman"
        },
        {
            "file_name": "ZrO2_cubic.cell",
            "ref_id": "1760",
            "path": "attachments/ZrO2_cubic.cell",
            "user": "vmilman"
        },
        {
            "file_name": "ZrO2_cubic.param",
            "ref_id": "1760",
            "path": "attachments/ZrO2_cubic.param",
            "user": "vmilman"
        },
        {
            "file_name": "AlN_piezo.pdf",
            "ref_id": "1689",
            "path": "attachments/AlN_piezo.pdf",
            "user": "vmilman"
        },
        {
            "file_name": "PuO.cell",
            "ref_id": "1761",
            "path": "attachments/PuO.cell",
            "user": "vmilman"
        },
        {
            "file_name": "PuO.castep",
            "ref_id": "1761",
            "path": "attachments/PuO.castep",
            "user": "vmilman"
        },
        {
            "file_name": "PuO.param",
            "ref_id": "1761",
            "path": "attachments/PuO.param",
            "user": "vmilman"
        },
        {
            "file_name": "pm3m.cell",
            "ref_id": "1805",
            "path": "attachments/pm3m.cell",
            "user": "gjackland"
        },
        {
            "file_name": "pm3m.param",
            "ref_id": "1805",
            "path": "attachments/pm3m.param",
            "user": "gjackland"
        },
        {
            "file_name": "pm3m.castep.gz",
            "ref_id": "1805",
            "path": "attachments/pm3m.castep.gz",
            "user": "gjackland"
        },
        {
            "file_name": "http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2Fworkshop_prev.html",
            "ref_id": "22",
            "path": "attachments/http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2Fworkshop_prev.html",
            "user": "krefson"
        },
        {
            "file_name": "http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2F",
            "ref_id": "23",
            "path": "attachments/http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2F",
            "user": "krefson"
        },
        {
            "file_name": "http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2FPhonons_Guide%2FCastep_Phonons.html",
            "ref_id": "443",
            "path": "attachments/http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2FPhonons_Guide%2FCastep_Phonons.html",
            "user": "krefson"
        },
        {
            "file_name": "http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2Ftutorials.html",
            "ref_id": "444",
            "path": "attachments/http%3A%2F%2Fwww.tcm.phy.cam.ac.uk%2Fcastep%2Ftutorials.html",
            "user": "krefson"
        },
        {
            "file_name": "usp-string-notes.txt",
            "ref_id": "17",
            "path": "attachments/usp-string-notes.txt",
            "user": "krefson"
        },
        {
            "file_name": "castep-matstudio.html",
            "ref_id": "427",
            "path": "attachments/castep-matstudio.html",
            "user": "krefson"
        },
        {
            "file_name": "eels.pdf",
            "ref_id": "9",
            "path": "attachments/eels.pdf",
            "user": "krefson"
        },
        {
            "file_name": "Castep-Error-Messages.html",
            "ref_id": "11",
            "path": "attachments/Castep-Error-Messages.html",
            "user": "krefson"
        },
        {
            "file_name": "otfg.pdf",
            "ref_id": "10",
            "path": "attachments/otfg.pdf",
            "user": "krefson"
        },
        {
            "file_name": "efield.F90-diff-1.21-1.22",
            "ref_id": "32",
            "path": "attachments/efield.F90-diff-1.21-1.22",
            "user": "krefson"
        },
        {
            "file_name": "mdtep.tar.gz",
            "ref_id": "32",
            "path": "attachments/mdtep.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "check2xsf.tgz",
            "ref_id": "32",
            "path": "attachments/check2xsf.tgz",
            "user": "krefson"
        },
        {
            "file_name": "opium-3.1b-ia32.gz",
            "ref_id": "32",
            "path": "attachments/opium-3.1b-ia32.gz",
            "user": "krefson"
        },
        {
            "file_name": "ewald.F90",
            "ref_id": "36",
            "path": "attachments/ewald.F90",
            "user": "krefson"
        },
        {
            "file_name": "FoX-3.2.0-wcml.tar.gz",
            "ref_id": "49",
            "path": "attachments/FoX-3.2.0-wcml.tar.gz",
            "user": "danwilson"
        },
        {
            "file_name": "castep-scripts-4.4.1.tar.gz",
            "ref_id": "86",
            "path": "attachments/castep-scripts-4.4.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep42-scripts-any.tgz",
            "ref_id": "32",
            "path": "attachments/castep42-scripts-any.tgz",
            "user": "krefson"
        },
        {
            "file_name": "cpi2recpot.tar.gz",
            "ref_id": "32",
            "path": "attachments/cpi2recpot.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-openmpi-5.0.1",
            "ref_id": "116",
            "path": "attachments/castep-openmpi-5.0.1",
            "user": "krefson"
        },
        {
            "file_name": "Pseudo-Lib-RB.tgz",
            "ref_id": "32",
            "path": "attachments/Pseudo-Lib-RB.tgz",
            "user": "krefson"
        },
        {
            "file_name": "castep-55-551.diff",
            "ref_id": "144",
            "path": "attachments/castep-55-551.diff",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "140",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "scripts-7.0.2.tar.gz",
            "ref_id": "339",
            "path": "attachments/scripts-7.0.2.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "USP_gen-a7.3.2.tgz",
            "ref_id": "32",
            "path": "attachments/USP_gen-a7.3.2.tgz",
            "user": "krefson"
        },
        {
            "file_name": "make-3.81.tar.bz2",
            "ref_id": "87",
            "path": "attachments/make-3.81.tar.bz2",
            "user": "krefson"
        },
        {
            "file_name": "otfg.cell",
            "ref_id": "140",
            "path": "attachments/otfg.cell",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "140",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP_POT_MS60.tgz",
            "ref_id": "239",
            "path": "attachments/CASTEP_POT_MS60.tgz",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "48",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-5.5.tar.gz",
            "ref_id": "140",
            "path": "attachments/castep-scripts-5.5.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "otfg.cell",
            "ref_id": "133",
            "path": "attachments/otfg.cell",
            "user": "krefson"
        },
        {
            "file_name": "scripts-7.0.3.tar.gz",
            "ref_id": "378",
            "path": "attachments/scripts-7.0.3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INVENTORY",
            "ref_id": "32",
            "path": "attachments/README.INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "32",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "48",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "133",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "116",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "RealSpace.tar.gz",
            "ref_id": "32",
            "path": "attachments/RealSpace.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "86",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "scripts-7.0.3.tar.gz",
            "ref_id": "259",
            "path": "attachments/scripts-7.0.3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "116",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "86",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "Pseudo-Lib-MS.tgz",
            "ref_id": "32",
            "path": "attachments/Pseudo-Lib-MS.tgz",
            "user": "krefson"
        },
        {
            "file_name": "linux_x86_64_ifort14.tar.xz",
            "ref_id": "378",
            "path": "attachments/linux_x86_64_ifort14.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "linux_x86_64_ifort14-extra.tar.xz",
            "ref_id": "378",
            "path": "attachments/linux_x86_64_ifort14-extra.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-17.2.tar.gz",
            "ref_id": "571",
            "path": "attachments/CASTEP-17.2.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "CASTEP-4.3.tar.gz",
            "ref_id": "48",
            "path": "attachments/CASTEP-4.3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-4.4.tar.gz",
            "ref_id": "86",
            "path": "attachments/CASTEP-4.4.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.0.tar.gz",
            "ref_id": "117",
            "path": "attachments/CASTEP-5.0.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.0.2.tar.gz",
            "ref_id": "133",
            "path": "attachments/CASTEP-5.0.2.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.5.tar.gz",
            "ref_id": "140",
            "path": "attachments/CASTEP-5.5.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.5.1.tar.gz",
            "ref_id": "144",
            "path": "attachments/CASTEP-5.5.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-18.1.tar.gz",
            "ref_id": "605",
            "path": "attachments/CASTEP-18.1.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "606",
            "path": "attachments/README.INSTALL",
            "user": "domj"
        },
        {
            "file_name": "INVENTORY.dms",
            "ref_id": "606",
            "path": "attachments/INVENTORY.dms",
            "user": "domj"
        },
        {
            "file_name": "CASTEP-CML-4.3-r3.tar.gz",
            "ref_id": "49",
            "path": "attachments/CASTEP-CML-4.3-r3.tar.gz",
            "user": "danwilson"
        },
        {
            "file_name": "castep-scripts.tar.gz",
            "ref_id": "48",
            "path": "attachments/castep-scripts.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-4.2.tar.gz",
            "ref_id": "32",
            "path": "attachments/CASTEP-4.2.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "atom-5.695.tgz",
            "ref_id": "32",
            "path": "attachments/atom-5.695.tgz",
            "user": "krefson"
        },
        {
            "file_name": "parameters.F90",
            "ref_id": "36",
            "path": "attachments/parameters.F90",
            "user": "krefson"
        },
        {
            "file_name": "cpi2recpot.tar.gz",
            "ref_id": "99",
            "path": "attachments/cpi2recpot.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "nlxc_utils.F90",
            "ref_id": "52",
            "path": "attachments/nlxc_utils.F90",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-4.4-fix4.tar.gz",
            "ref_id": "86",
            "path": "attachments/CASTEP-4.4-fix4.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-4.4-fix3.tar.gz",
            "ref_id": "86",
            "path": "attachments/CASTEP-4.4-fix3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-4.4-fix6.tar.gz",
            "ref_id": "86",
            "path": "attachments/CASTEP-4.4-fix6.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "secondd.F90",
            "ref_id": "52",
            "path": "attachments/secondd.F90",
            "user": "krefson"
        },
        {
            "file_name": "xc.F90",
            "ref_id": "52",
            "path": "attachments/xc.F90",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.0.1.tar.gz",
            "ref_id": "116",
            "path": "attachments/CASTEP-5.0.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "116",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "lindos-1.2.92.tar.gz",
            "ref_id": "140",
            "path": "attachments/lindos-1.2.92.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-8.0.tar.gz",
            "ref_id": "418",
            "path": "attachments/CASTEP-8.0.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "make-3.81-linux",
            "ref_id": "87",
            "path": "attachments/make-3.81-linux",
            "user": "krefson"
        },
        {
            "file_name": "make-3.81-alpha",
            "ref_id": "87",
            "path": "attachments/make-3.81-alpha",
            "user": "krefson"
        },
        {
            "file_name": "make-3.81-irix",
            "ref_id": "87",
            "path": "attachments/make-3.81-irix",
            "user": "krefson"
        },
        {
            "file_name": "make-3.81-aix",
            "ref_id": "87",
            "path": "attachments/make-3.81-aix",
            "user": "krefson"
        },
        {
            "file_name": "make-3.81-sparc",
            "ref_id": "87",
            "path": "attachments/make-3.81-sparc",
            "user": "krefson"
        },
        {
            "file_name": "Accelrys_Master_Licence_Service_Agreement.pdf",
            "ref_id": "80",
            "path": "attachments/Accelrys_Master_Licence_Service_Agreement.pdf",
            "user": "krefson"
        },
        {
            "file_name": "Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "ref_id": "339",
            "path": "attachments/Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Accelrys_Licence_Agreement_for_Academic_Institutions.pdf",
            "ref_id": "80",
            "path": "attachments/Accelrys_Licence_Agreement_for_Academic_Institutions.pdf",
            "user": "krefson"
        },
        {
            "file_name": "RequestForCastep2Dec2008.pdf",
            "ref_id": "80",
            "path": "attachments/RequestForCastep2Dec2008.pdf",
            "user": "krefson"
        },
        {
            "file_name": "lindos.F90",
            "ref_id": "227",
            "path": "attachments/lindos.F90",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "227",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "Castep60-601.diff.gz",
            "ref_id": "239",
            "path": "attachments/Castep60-601.diff.gz",
            "user": "krefson"
        },
        {
            "file_name": "fft.fftw3.F90",
            "ref_id": "227",
            "path": "attachments/fft.fftw3.F90",
            "user": "krefson"
        },
        {
            "file_name": "pgf90-update.tar.gz",
            "ref_id": "227",
            "path": "attachments/pgf90-update.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-6.0p3.tar.gz",
            "ref_id": "239",
            "path": "attachments/castep-scripts-6.0p3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "239",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "castep-6.0.1-scripts.tar.gz",
            "ref_id": "239",
            "path": "attachments/castep-6.0.1-scripts.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Pseudo_Lib_MS-5.5.tar.gz",
            "ref_id": "227",
            "path": "attachments/Pseudo_Lib_MS-5.5.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "239",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "227",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-5.5.2.tar.gz",
            "ref_id": "227",
            "path": "attachments/castep-scripts-5.5.2.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "227",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.0.tar.gz",
            "ref_id": "239",
            "path": "attachments/CASTEP-6.0.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "arch",
            "ref_id": "144",
            "path": "attachments/arch",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.1-6.1.1.diff.gz",
            "ref_id": "296",
            "path": "attachments/CASTEP-6.1-6.1.1.diff.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-6.1.1-platform-mpi",
            "ref_id": "296",
            "path": "attachments/castep-6.1.1-platform-mpi",
            "user": "krefson"
        },
        {
            "file_name": "linux_x86_64_ifort12.tar.xz",
            "ref_id": "296",
            "path": "attachments/linux_x86_64_ifort12.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-5.5.2c.tar.gz",
            "ref_id": "227",
            "path": "attachments/CASTEP-5.5.2c.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-6.1.1-intel-mpi",
            "ref_id": "296",
            "path": "attachments/castep-6.1.1-intel-mpi",
            "user": "krefson"
        },
        {
            "file_name": "castep-6.1.1-openmpi",
            "ref_id": "296",
            "path": "attachments/castep-6.1.1-openmpi",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-6.1.1.tar.gz",
            "ref_id": "296",
            "path": "attachments/castep-scripts-6.1.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Pseudo-Lib-RB-42.tgz",
            "ref_id": "99",
            "path": "attachments/Pseudo-Lib-RB-42.tgz",
            "user": "krefson"
        },
        {
            "file_name": "darwin_x86_64_gfortran.tar.xz",
            "ref_id": "266",
            "path": "attachments/darwin_x86_64_gfortran.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "266",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.1b.tar.gz",
            "ref_id": "266",
            "path": "attachments/CASTEP-6.1b.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "266",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "296",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "296",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "opium-v3.6-src-patched.tgz",
            "ref_id": "99",
            "path": "attachments/opium-v3.6-src-patched.tgz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "296",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.11.tar.gz",
            "ref_id": "296",
            "path": "attachments/CASTEP-6.11.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "266",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP_POT_MS61.tgz",
            "ref_id": "266",
            "path": "attachments/CASTEP_POT_MS61.tgz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.0.1.tar.gz",
            "ref_id": "239",
            "path": "attachments/CASTEP-6.0.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "239",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "cygwin_x86_64_ifort12.zip",
            "ref_id": "296",
            "path": "attachments/cygwin_x86_64_ifort12.zip",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.1-pmpi.xz",
            "ref_id": "339",
            "path": "attachments/castep-7.0.1-pmpi.xz",
            "user": "krefson"
        },
        {
            "file_name": "cygwin_x86_64_ifort12.zip",
            "ref_id": "339",
            "path": "attachments/cygwin_x86_64_ifort12.zip",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "339",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "339",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.1-openmpi.xz",
            "ref_id": "339",
            "path": "attachments/castep-7.0.1-openmpi.xz",
            "user": "krefson"
        },
        {
            "file_name": "linux_x86_64_ifort12.tar.xz",
            "ref_id": "339",
            "path": "attachments/linux_x86_64_ifort12.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "339",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-6.1-6.1.1.diff.gz",
            "ref_id": "297",
            "path": "attachments/CASTEP-6.1-6.1.1.diff.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.1-impi.xz",
            "ref_id": "339",
            "path": "attachments/castep-7.0.1-impi.xz",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.1-macosx-intel-mpi.tar.xz",
            "ref_id": "339",
            "path": "attachments/castep-7.0.1-macosx-intel-mpi.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-7.01.tar.gz",
            "ref_id": "339",
            "path": "attachments/CASTEP-7.01.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.1-macosx-intel.tar.xz",
            "ref_id": "339",
            "path": "attachments/castep-7.0.1-macosx-intel.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "Pseudopotentials_MS_70.tgz",
            "ref_id": "339",
            "path": "attachments/Pseudopotentials_MS_70.tgz",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-6.1.tar.gz",
            "ref_id": "266",
            "path": "attachments/castep-scripts-6.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Opium-Kr_Extra_recpots.tar.gz",
            "ref_id": "259",
            "path": "attachments/Opium-Kr_Extra_recpots.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "castep-scripts-6.0p3.tar.gz",
            "ref_id": "99",
            "path": "attachments/castep-scripts-6.0p3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "make-3.82.tar.bz2",
            "ref_id": "217",
            "path": "attachments/make-3.82.tar.bz2",
            "user": "krefson"
        },
        {
            "file_name": "opium-v3.6-recpot.patch",
            "ref_id": "99",
            "path": "attachments/opium-v3.6-recpot.patch",
            "user": "krefson"
        },
        {
            "file_name": "opium-3.6",
            "ref_id": "99",
            "path": "attachments/opium-3.6",
            "user": "krefson"
        },
        {
            "file_name": "make-3.82",
            "ref_id": "217",
            "path": "attachments/make-3.82",
            "user": "krefson"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "378",
            "path": "attachments/README.INSTALL",
            "user": "krefson"
        },
        {
            "file_name": "castep-openmpi-1.4",
            "ref_id": "378",
            "path": "attachments/castep-openmpi-1.4",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "378",
            "path": "attachments/RELEASE.NOTES",
            "user": "krefson"
        },
        {
            "file_name": "Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "ref_id": "378",
            "path": "attachments/Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-7.0.3.tar.gz",
            "ref_id": "378",
            "path": "attachments/CASTEP-7.0.3.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "Pseudopotentials_MS_70.tgz",
            "ref_id": "378",
            "path": "attachments/Pseudopotentials_MS_70.tgz",
            "user": "krefson"
        },
        {
            "file_name": "castep-openmpi-1.6",
            "ref_id": "378",
            "path": "attachments/castep-openmpi-1.6",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.3-macosx-intel.tar.xz",
            "ref_id": "378",
            "path": "attachments/castep-7.0.3-macosx-intel.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "castep-7.0.3-macosx-intel-mpi.tar.xz",
            "ref_id": "378",
            "path": "attachments/castep-7.0.3-macosx-intel-mpi.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "606",
            "path": "attachments/RELEASE.NOTES",
            "user": "domj"
        },
        {
            "file_name": "CASTEP-18.1.tar.gz",
            "ref_id": "606",
            "path": "attachments/CASTEP-18.1.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "ref_id": "259",
            "path": "attachments/Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "378",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-7.02.tar.gz",
            "ref_id": "339",
            "path": "attachments/CASTEP-7.02.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "418",
            "path": "attachments/RELEASE.NOTES",
            "user": "domj"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "418",
            "path": "attachments/README.INSTALL",
            "user": "domj"
        },
        {
            "file_name": "scripts-8.0.tar.gz",
            "ref_id": "418",
            "path": "attachments/scripts-8.0.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "Pseudopotentials_MS_70.tgz",
            "ref_id": "418",
            "path": "attachments/Pseudopotentials_MS_70.tgz",
            "user": "domj"
        },
        {
            "file_name": "Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "ref_id": "418",
            "path": "attachments/Opium-Rappe-Bennett-recpots-2012.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "castep80_devel_code_io.patch",
            "ref_id": "421",
            "path": "attachments/castep80_devel_code_io.patch",
            "user": "domj"
        },
        {
            "file_name": "scripts-8.0.tar.gz",
            "ref_id": "259",
            "path": "attachments/scripts-8.0.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "cygwin_x86_64_ifort14.tar.xz",
            "ref_id": "378",
            "path": "attachments/cygwin_x86_64_ifort14.tar.xz",
            "user": "krefson"
        },
        {
            "file_name": "castep-8.0-macosx-intel.tar.xz",
            "ref_id": "418",
            "path": "attachments/castep-8.0-macosx-intel.tar.xz",
            "user": "domj"
        },
        {
            "file_name": "castep-8.0-macosx-intel-mpi.tar.xz",
            "ref_id": "418",
            "path": "attachments/castep-8.0-macosx-intel-mpi.tar.xz",
            "user": "domj"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "529",
            "path": "attachments/RELEASE.NOTES",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "529",
            "path": "attachments/INVENTORY",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "529",
            "path": "attachments/README.INSTALL",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "CASTEP-16.11.tar.gz",
            "ref_id": "529",
            "path": "attachments/CASTEP-16.11.tar.gz",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "140",
            "path": "attachments/INVENTORY",
            "user": "krefson"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "512",
            "path": "attachments/INVENTORY",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "CASTEP-16.1.tar.gz",
            "ref_id": "512",
            "path": "attachments/CASTEP-16.1.tar.gz",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "512",
            "path": "attachments/README.INSTALL",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "scripts-16.1.tar.gz",
            "ref_id": "512",
            "path": "attachments/scripts-16.1.tar.gz",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "512",
            "path": "attachments/RELEASE.NOTES",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "new_ncp.tgz",
            "ref_id": "512",
            "path": "attachments/new_ncp.tgz",
            "user": "sturniolo_r25a"
        },
        {
            "file_name": "castep-scripts-5.0.1.tar.gz",
            "ref_id": "116",
            "path": "attachments/castep-scripts-5.0.1.tar.gz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-diff-7.0.1-7.0.3.xz",
            "ref_id": "396",
            "path": "attachments/CASTEP-diff-7.0.1-7.0.3.xz",
            "user": "krefson"
        },
        {
            "file_name": "CASTEP-17.2.tar.gz",
            "ref_id": "567",
            "path": "attachments/CASTEP-17.2.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "580",
            "path": "attachments/RELEASE.NOTES",
            "user": "domj"
        },
        {
            "file_name": "scripts-17.21.tar.gz",
            "ref_id": "259",
            "path": "attachments/scripts-17.21.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "580",
            "path": "attachments/INVENTORY",
            "user": "domj"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "580",
            "path": "attachments/README.INSTALL",
            "user": "domj"
        },
        {
            "file_name": "CASTEP-17.21.tar.gz",
            "ref_id": "580",
            "path": "attachments/CASTEP-17.21.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "570",
            "path": "attachments/RELEASE.NOTES",
            "user": "domj"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "570",
            "path": "attachments/INVENTORY",
            "user": "domj"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "570",
            "path": "attachments/README.INSTALL",
            "user": "domj"
        },
        {
            "file_name": "CASTEP-16.12.tar.gz",
            "ref_id": "570",
            "path": "attachments/CASTEP-16.12.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "RELEASE.NOTES",
            "ref_id": "571",
            "path": "attachments/RELEASE.NOTES",
            "user": "domj"
        },
        {
            "file_name": "INVENTORY",
            "ref_id": "571",
            "path": "attachments/INVENTORY",
            "user": "domj"
        },
        {
            "file_name": "README.INSTALL",
            "ref_id": "571",
            "path": "attachments/README.INSTALL",
            "user": "domj"
        },
        {
            "file_name": "scripts-16.12.tar.gz",
            "ref_id": "259",
            "path": "attachments/scripts-16.12.tar.gz",
            "user": "domj"
        },
        {
            "file_name": "J-dependent-ncp-16.tgz",
            "ref_id": "259",
            "path": "attachments/J-dependent-ncp-16.tgz",
            "user": "domj"
        },
        {
            "file_name": "SandBox",
            "ref_id": "51",
            "path": "attachments/SandBox",
            "user": "rafapa"
        },
        {
            "file_name": "RecentVisitors",
            "ref_id": "52",
            "path": "attachments/RecentVisitors",
            "user": "rafapa"
        },
        {
            "file_name": "MostPopular",
            "ref_id": "53",
            "path": "attachments/MostPopular",
            "user": "rafapa"
        },
        {
            "file_name": "HowToUseWiki",
            "ref_id": "49",
            "path": "attachments/HowToUseWiki",
            "user": "rafapa"
        },
        {
            "file_name": "AddingPages",
            "ref_id": "50",
            "path": "attachments/AddingPages",
            "user": "rafapa"
        },
        {
            "file_name": "FrontPage",
            "ref_id": "47",
            "path": "attachments/FrontPage",
            "user": "rafapa"
        },
        {
            "file_name": "Wiki",
            "ref_id": "48",
            "path": "attachments/Wiki",
            "user": "rafapa"
        },
        {
            "file_name": "homepage",
            "ref_id": "18",
            "path": "attachments/homepage",
            "user": "None"
        }
    ]
}